ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 124 0
  39              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 109 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 124 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 4


  47              	.L2:
  48 0010 08010B40 		.word	1074462984
  49              		.cfi_endproc
  50              	.LFE1:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoDisableWcoLock
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoDisableWcoLock, %function
  58              	CySysClkImoDisableWcoLock:
  59              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 5


 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 6


 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 7


 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
  60              		.loc 1 286 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  65              		.loc 1 287 0
  66 0000 024A     		ldr	r2, .L5
  67 0002 034B     		ldr	r3, .L5+4
  68 0004 1168     		ldr	r1, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  69              		.loc 1 288 0
  70              		@ sp needed
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  71              		.loc 1 287 0
  72 0006 0B40     		ands	r3, r1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 288 0
  75 000a 7047     		bx	lr
  76              	.L6:
  77              		.align	2
  78              	.L5:
  79 000c 00002240 		.word	1075970048
  80 0010 FFFFFFBF 		.word	-1073741825
  81              		.cfi_endproc
  82              	.LFE4:
  83              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  84              		.section	.text.CySysClkImoStop,"ax",%progbits
  85              		.align	1
  86              		.global	CySysClkImoStop
  87              		.code	16
  88              		.thumb_func
  89              		.type	CySysClkImoStop, %function
  90              	CySysClkImoStop:
  91              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  92              		.loc 1 140 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 100              		.loc 1 142 0
 101 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 102              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
 103              		.loc 1 149 0
 104 0006 034A     		ldr	r2, .L8
 150:Generated_Source\PSoC4/CyLib.c **** 
 105              		.loc 1 150 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 8


 106              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
 107              		.loc 1 149 0
 108 0008 1368     		ldr	r3, [r2]
 109 000a 5B00     		lsls	r3, r3, #1
 110 000c 5B08     		lsrs	r3, r3, #1
 111 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 112              		.loc 1 150 0
 113 0010 10BD     		pop	{r4, pc}
 114              	.L9:
 115 0012 C046     		.align	2
 116              	.L8:
 117 0014 08010B40 		.word	1074462984
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	CySysClkImoStop, .-CySysClkImoStop
 121              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 122              		.align	1
 123              		.global	CySysClkImoGetWcoLock
 124              		.code	16
 125              		.thumb_func
 126              		.type	CySysClkImoGetWcoLock, %function
 127              	CySysClkImoGetWcoLock:
 128              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 129              		.loc 1 305 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 134              		.loc 1 306 0
 135 0000 024B     		ldr	r3, .L11
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 136              		.loc 1 309 0
 137              		@ sp needed
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 138              		.loc 1 306 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 9


 139 0002 1868     		ldr	r0, [r3]
 140 0004 4000     		lsls	r0, r0, #1
 141 0006 C00F     		lsrs	r0, r0, #31
 142              		.loc 1 309 0
 143 0008 7047     		bx	lr
 144              	.L12:
 145 000a C046     		.align	2
 146              	.L11:
 147 000c 00002240 		.word	1075970048
 148              		.cfi_endproc
 149              	.LFE5:
 150              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 151              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 152              		.align	1
 153              		.global	CySysClkWriteHfclkDirect
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkWriteHfclkDirect, %function
 157              	CySysClkWriteHfclkDirect:
 158              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 10


 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 11


 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 430 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL1:
 164 0000 10B5     		push	{r4, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 168              		.loc 1 430 0
 169 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 170              		.loc 1 434 0
 171 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 172              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 173              		.loc 1 437 0
 174 0008 0723     		movs	r3, #7
 175 000a 0449     		ldr	r1, .L14
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 12


 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 454 0
 177              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 178              		.loc 1 437 0
 179 000c 0A68     		ldr	r2, [r1]
 180 000e 9A43     		bics	r2, r3
 181              	.LVL3:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 182              		.loc 1 448 0
 183 0010 2340     		ands	r3, r4
 184 0012 1343     		orrs	r3, r2
 185              	.LVL4:
 451:Generated_Source\PSoC4/CyLib.c **** 
 186              		.loc 1 451 0
 187 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 188              		.loc 1 453 0
 189 0016 FFF7FEFF 		bl	CyExitCriticalSection
 190              	.LVL5:
 191              	.LVL6:
 192              		.loc 1 454 0
 193 001a 10BD     		pop	{r4, pc}
 194              	.L15:
 195              		.align	2
 196              	.L14:
 197 001c 00010B40 		.word	1074462976
 198              		.cfi_endproc
 199              	.LFE6:
 200              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 201              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 202              		.align	1
 203              		.global	CySysEnablePumpClock
 204              		.code	16
 205              		.thumb_func
 206              		.type	CySysEnablePumpClock, %function
 207              	CySysEnablePumpClock:
 208              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 13


 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 209              		.loc 1 474 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              	.LVL7:
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 218 0002 094B     		ldr	r3, .L21
 219 0004 094C     		ldr	r4, .L21+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 220              		.loc 1 476 0
 221 0006 C207     		lsls	r2, r0, #31
 222 0008 04D5     		bpl	.L17
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 223              		.loc 1 478 0
 224 000a 2268     		ldr	r2, [r4]
 225 000c 1968     		ldr	r1, [r3]
 226 000e 5206     		lsls	r2, r2, #25
 227 0010 0A43     		orrs	r2, r1
 228 0012 06E0     		b	.L19
 229              	.L17:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 230              		.loc 1 482 0
 231 0014 1A68     		ldr	r2, [r3]
 232 0016 1201     		lsls	r2, r2, #4
 233 0018 520F     		lsrs	r2, r2, #29
 234 001a 2260     		str	r2, [r4]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 235              		.loc 1 484 0
 236 001c 1968     		ldr	r1, [r3]
 237 001e 044A     		ldr	r2, .L21+8
 238 0020 0A40     		ands	r2, r1
 239              	.L19:
 240 0022 1A60     		str	r2, [r3]
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 14


 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 241              		.loc 1 498 0
 242              		@ sp needed
 243 0024 10BD     		pop	{r4, pc}
 244              	.L22:
 245 0026 C046     		.align	2
 246              	.L21:
 247 0028 08010B40 		.word	1074462984
 248 002c 00000000 		.word	.LANCHOR0
 249 0030 FFFFFFF1 		.word	-234881025
 250              		.cfi_endproc
 251              	.LFE7:
 252              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 253              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 254              		.align	1
 255              		.global	CySysClkGetSysclkSource
 256              		.code	16
 257              		.thumb_func
 258              		.type	CySysClkGetSysclkSource, %function
 259              	CySysClkGetSysclkSource:
 260              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 261              		.loc 1 511 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 10B5     		push	{r4, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 4, -8
 268              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 269              		.loc 1 515 0
 270 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 15


 271              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 272              		.loc 1 525 0
 273 0006 034B     		ldr	r3, .L24
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 274              		.loc 1 531 0
 275              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 276              		.loc 1 525 0
 277 0008 1C68     		ldr	r4, [r3]
 278              	.LVL9:
 528:Generated_Source\PSoC4/CyLib.c **** 
 279              		.loc 1 528 0
 280 000a FFF7FEFF 		bl	CyExitCriticalSection
 281              	.LVL10:
 530:Generated_Source\PSoC4/CyLib.c **** }
 282              		.loc 1 530 0
 283 000e 0720     		movs	r0, #7
 284 0010 2040     		ands	r0, r4
 285              	.LVL11:
 286              		.loc 1 531 0
 287 0012 10BD     		pop	{r4, pc}
 288              	.L25:
 289              		.align	2
 290              	.L24:
 291 0014 00010B40 		.word	1074462976
 292              		.cfi_endproc
 293              	.LFE8:
 294              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 295              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 296              		.align	1
 297              		.global	CySysClkWriteSysclkDiv
 298              		.code	16
 299              		.thumb_func
 300              		.type	CySysClkWriteSysclkDiv, %function
 301              	CySysClkWriteSysclkDiv:
 302              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 16


 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 303              		.loc 1 566 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL12:
 308 0000 70B5     		push	{r4, r5, r6, lr}
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 4, -16
 311              		.cfi_offset 5, -12
 312              		.cfi_offset 6, -8
 313              		.cfi_offset 14, -4
 314              		.loc 1 566 0
 315 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 316              		.loc 1 569 0
 317 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 318              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 319              		.loc 1 572 0
 320 0008 E104     		lsls	r1, r4, #19
 321 000a E024     		movs	r4, #224
 322              	.LVL14:
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 323              		.loc 1 573 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 17


 324 000c 054D     		ldr	r5, .L27
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 325              		.loc 1 572 0
 326 000e A403     		lsls	r4, r4, #14
 327              		.loc 1 573 0
 328 0010 2B68     		ldr	r3, [r5]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 329              		.loc 1 572 0
 330 0012 054A     		ldr	r2, .L27+4
 331 0014 2140     		ands	r1, r4
 332 0016 1A40     		ands	r2, r3
 333 0018 0B00     		movs	r3, r1
 334 001a 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 335              		.loc 1 571 0
 336 001c 2B60     		str	r3, [r5]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 337              		.loc 1 576 0
 338 001e FFF7FEFF 		bl	CyExitCriticalSection
 339              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 340              		.loc 1 577 0
 341              		@ sp needed
 342 0022 70BD     		pop	{r4, r5, r6, pc}
 343              	.L28:
 344              		.align	2
 345              	.L27:
 346 0024 00010B40 		.word	1074462976
 347 0028 FFFFC7FF 		.word	-3670017
 348              		.cfi_endproc
 349              	.LFE9:
 350              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 351              		.section	.text.CySysLvdDisable,"ax",%progbits
 352              		.align	1
 353              		.global	CySysLvdDisable
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysLvdDisable, %function
 357              	CySysLvdDisable:
 358              	.LFB12:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 18


 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 19


 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 20


 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 21


 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 22


 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 23


 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 24


 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 25


 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 26


1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 27


1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 28


1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 29


1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 30


1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 31


1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 32


1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 33


1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 34


1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 35


1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 36


1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 37


1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 38


1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 39


1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 40


1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 41


1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 42


1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 43


2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 44


2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 45


2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 2149 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 364              		.loc 1 2150 0
 365 0000 0221     		movs	r1, #2
 366 0002 054A     		ldr	r2, .L30
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
 367              		.loc 1 2152 0
 368              		@ sp needed
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 369              		.loc 1 2150 0
 370 0004 1368     		ldr	r3, [r2]
 371 0006 8B43     		bics	r3, r1
 372 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 373              		.loc 1 2151 0
 374 000a 044A     		ldr	r2, .L30+4
 375 000c 0139     		subs	r1, r1, #1
 376 000e 1368     		ldr	r3, [r2]
 377 0010 8B43     		bics	r3, r1
 378 0012 1360     		str	r3, [r2]
 379              		.loc 1 2152 0
 380 0014 7047     		bx	lr
 381              	.L31:
 382 0016 C046     		.align	2
 383              	.L30:
 384 0018 08000B40 		.word	1074462728
 385 001c 18000B40 		.word	1074462744
 386              		.cfi_endproc
 387              	.LFE12:
 388              		.size	CySysLvdDisable, .-CySysLvdDisable
 389              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 390              		.align	1
 391              		.global	CySysLvdGetInterruptSource
 392              		.code	16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 46


 393              		.thumb_func
 394              		.type	CySysLvdGetInterruptSource, %function
 395              	CySysLvdGetInterruptSource:
 396              	.LFB13:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 397              		.loc 1 2167 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 402              		.loc 1 2168 0
 403 0000 024B     		ldr	r3, .L33
2169:Generated_Source\PSoC4/CyLib.c ****     }
 404              		.loc 1 2169 0
 405              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 406              		.loc 1 2168 0
 407 0002 1868     		ldr	r0, [r3]
 408 0004 0223     		movs	r3, #2
 409 0006 1840     		ands	r0, r3
 410              		.loc 1 2169 0
 411 0008 7047     		bx	lr
 412              	.L34:
 413 000a C046     		.align	2
 414              	.L33:
 415 000c 04000B40 		.word	1074462724
 416              		.cfi_endproc
 417              	.LFE13:
 418              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 419              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 420              		.align	1
 421              		.global	CySysLvdClearInterrupt
 422              		.code	16
 423              		.thumb_func
 424              		.type	CySysLvdClearInterrupt, %function
 425              	CySysLvdClearInterrupt:
 426              	.LFB14:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 47


2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 427              		.loc 1 2183 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 432              		.loc 1 2184 0
 433 0000 0222     		movs	r2, #2
 434 0002 014B     		ldr	r3, .L36
2185:Generated_Source\PSoC4/CyLib.c ****     }
 435              		.loc 1 2185 0
 436              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 437              		.loc 1 2184 0
 438 0004 1A60     		str	r2, [r3]
 439              		.loc 1 2185 0
 440 0006 7047     		bx	lr
 441              	.L37:
 442              		.align	2
 443              	.L36:
 444 0008 04000B40 		.word	1074462724
 445              		.cfi_endproc
 446              	.LFE14:
 447              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 448              		.section	.text.CySysGetResetReason,"ax",%progbits
 449              		.align	1
 450              		.global	CySysGetResetReason
 451              		.code	16
 452              		.thumb_func
 453              		.type	CySysGetResetReason, %function
 454              	CySysGetResetReason:
 455              	.LFB15:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 48


2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 456              		.loc 1 2209 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL16:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 462              		.loc 1 2212 0
 463 0000 1923     		movs	r3, #25
 464 0002 0200     		movs	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 465              		.loc 1 2213 0
 466 0004 0249     		ldr	r1, .L39
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 467              		.loc 1 2212 0
 468 0006 1A40     		ands	r2, r3
 469              	.LVL17:
 470              		.loc 1 2213 0
 471 0008 0868     		ldr	r0, [r1]
 472              	.LVL18:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 473              		.loc 1 2218 0
 474              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 475              		.loc 1 2217 0
 476 000a 1840     		ands	r0, r3
 477              	.LVL19:
2215:Generated_Source\PSoC4/CyLib.c **** 
 478              		.loc 1 2215 0
 479 000c 0A60     		str	r2, [r1]
 480              		.loc 1 2218 0
 481 000e 7047     		bx	lr
 482              	.L40:
 483              		.align	2
 484              	.L39:
 485 0010 00030B40 		.word	1074463488
 486              		.cfi_endproc
 487              	.LFE15:
 488              		.size	CySysGetResetReason, .-CySysGetResetReason
 489              		.section	.text.CyDisableInts,"ax",%progbits
 490              		.align	1
 491              		.global	CyDisableInts
 492              		.code	16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 49


 493              		.thumb_func
 494              		.type	CyDisableInts, %function
 495              	CyDisableInts:
 496              	.LFB16:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 497              		.loc 1 2232 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 502              		.loc 1 2239 0
 503 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 504              		.loc 1 2236 0
 505 0002 024B     		ldr	r3, .L42
 506              		.loc 1 2239 0
 507 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 508              		.loc 1 2236 0
 509 0006 1868     		ldr	r0, [r3]
 510              	.LVL20:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 511              		.loc 1 2242 0
 512              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 513              		.loc 1 2239 0
 514 0008 1A60     		str	r2, [r3]
 515              		.loc 1 2242 0
 516 000a 7047     		bx	lr
 517              	.L43:
 518              		.align	2
 519              	.L42:
 520 000c 80E100E0 		.word	-536813184
 521              		.cfi_endproc
 522              	.LFE16:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 50


 523              		.size	CyDisableInts, .-CyDisableInts
 524              		.section	.text.CyEnableInts,"ax",%progbits
 525              		.align	1
 526              		.global	CyEnableInts
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyEnableInts, %function
 530              	CyEnableInts:
 531              	.LFB17:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2255 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL21:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 538              		.loc 1 2256 0
 539 0000 014B     		ldr	r3, .L45
2257:Generated_Source\PSoC4/CyLib.c **** }
 540              		.loc 1 2257 0
 541              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 542              		.loc 1 2256 0
 543 0002 1860     		str	r0, [r3]
 544              		.loc 1 2257 0
 545 0004 7047     		bx	lr
 546              	.L46:
 547 0006 C046     		.align	2
 548              	.L45:
 549 0008 00E100E0 		.word	-536813312
 550              		.cfi_endproc
 551              	.LFE17:
 552              		.size	CyEnableInts, .-CyEnableInts
 553              		.section	.text.CyIntSetSysVector,"ax",%progbits
 554              		.align	1
 555              		.global	CyIntSetSysVector
 556              		.code	16
 557              		.thumb_func
 558              		.type	CyIntSetSysVector, %function
 559              	CyIntSetSysVector:
 560              	.LFB18:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 51


2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 561              		.loc 1 2280 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566              	.LVL22:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 567              		.loc 1 2287 0
 568 0000 8023     		movs	r3, #128
 569 0002 8000     		lsls	r0, r0, #2
 570              	.LVL23:
 571 0004 9B05     		lsls	r3, r3, #22
 572 0006 C318     		adds	r3, r0, r3
 573 0008 1868     		ldr	r0, [r3]
 574              	.LVL24:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
 575              		.loc 1 2293 0
 576              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 577              		.loc 1 2290 0
 578 000a 1960     		str	r1, [r3]
 579              		.loc 1 2293 0
 580 000c 7047     		bx	lr
 581              		.cfi_endproc
 582              	.LFE18:
 583              		.size	CyIntSetSysVector, .-CyIntSetSysVector
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 52


 584              		.section	.text.CyIntGetSysVector,"ax",%progbits
 585              		.align	1
 586              		.global	CyIntGetSysVector
 587              		.code	16
 588              		.thumb_func
 589              		.type	CyIntGetSysVector, %function
 590              	CyIntGetSysVector:
 591              	.LFB19:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 592              		.loc 1 2314 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597              	.LVL25:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 598              		.loc 1 2319 0
 599 0000 8023     		movs	r3, #128
 600 0002 8000     		lsls	r0, r0, #2
 601              	.LVL26:
 602 0004 9B05     		lsls	r3, r3, #22
 603 0006 C018     		adds	r0, r0, r3
 604 0008 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** }
 605              		.loc 1 2320 0
 606              		@ sp needed
 607 000a 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE19:
 610              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 611              		.section	.text.CyIntSetVector,"ax",%progbits
 612              		.align	1
 613              		.global	CyIntSetVector
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 53


 614              		.code	16
 615              		.thumb_func
 616              		.type	CyIntSetVector, %function
 617              	CyIntSetVector:
 618              	.LFB20:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 619              		.loc 1 2336 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624              	.LVL27:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 625              		.loc 1 2343 0
 626 0000 024B     		ldr	r3, .L50
 627 0002 8000     		lsls	r0, r0, #2
 628              	.LVL28:
 629 0004 C318     		adds	r3, r0, r3
 630 0006 1868     		ldr	r0, [r3]
 631              	.LVL29:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 2349 0
 633              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 634              		.loc 1 2346 0
 635 0008 1960     		str	r1, [r3]
 636              		.loc 1 2349 0
 637 000a 7047     		bx	lr
 638              	.L51:
 639              		.align	2
 640              	.L50:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 54


 641 000c 40000020 		.word	536870976
 642              		.cfi_endproc
 643              	.LFE20:
 644              		.size	CyIntSetVector, .-CyIntSetVector
 645              		.section	.text.CyIntGetVector,"ax",%progbits
 646              		.align	1
 647              		.global	CyIntGetVector
 648              		.code	16
 649              		.thumb_func
 650              		.type	CyIntGetVector, %function
 651              	CyIntGetVector:
 652              	.LFB21:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 653              		.loc 1 2364 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658              	.LVL30:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 659              		.loc 1 2369 0
 660 0000 024B     		ldr	r3, .L53
 661 0002 8000     		lsls	r0, r0, #2
 662              	.LVL31:
 663 0004 C018     		adds	r0, r0, r3
 664 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 665              		.loc 1 2370 0
 666              		@ sp needed
 667 0008 7047     		bx	lr
 668              	.L54:
 669 000a C046     		.align	2
 670              	.L53:
 671 000c 40000020 		.word	536870976
 672              		.cfi_endproc
 673              	.LFE21:
 674              		.size	CyIntGetVector, .-CyIntGetVector
 675              		.section	.text.CyIntSetPriority,"ax",%progbits
 676              		.align	1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 55


 677              		.global	CyIntSetPriority
 678              		.code	16
 679              		.thumb_func
 680              		.type	CyIntSetPriority, %function
 681              	CyIntSetPriority:
 682              	.LFB22:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 683              		.loc 1 2383 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL32:
 688 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 689              		.cfi_def_cfa_offset 24
 690              		.cfi_offset 3, -24
 691              		.cfi_offset 4, -20
 692              		.cfi_offset 5, -16
 693              		.cfi_offset 6, -12
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 696              		.loc 1 2391 0
 697 0002 0326     		movs	r6, #3
 698 0004 0500     		movs	r5, r0
 699 0006 3540     		ands	r5, r6
 700 0008 B540     		lsls	r5, r5, r6
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 701              		.loc 1 2383 0
 702 000a 0F00     		movs	r7, r1
 703 000c 0400     		movs	r4, r0
 704              		.loc 1 2391 0
 705 000e 0635     		adds	r5, r5, #6
 706              	.LVL33:
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 56


 707              		.loc 1 2396 0
 708 0010 AE40     		lsls	r6, r6, r5
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 709              		.loc 1 2397 0
 710 0012 AF40     		lsls	r7, r7, r5
2393:Generated_Source\PSoC4/CyLib.c **** 
 711              		.loc 1 2393 0
 712 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 713              	.LVL34:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 714              		.loc 1 2395 0
 715 0018 A408     		lsrs	r4, r4, #2
 716 001a 054B     		ldr	r3, .L56
 717 001c A400     		lsls	r4, r4, #2
 718 001e E418     		adds	r4, r4, r3
 719 0020 2368     		ldr	r3, [r4]
 720              	.LVL35:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 721              		.loc 1 2401 0
 722              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 723              		.loc 1 2396 0
 724 0022 B343     		bics	r3, r6
 725              	.LVL36:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 726              		.loc 1 2397 0
 727 0024 1F43     		orrs	r7, r3
 728              	.LVL37:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 729              		.loc 1 2398 0
 730 0026 2760     		str	r7, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 731              		.loc 1 2400 0
 732 0028 FFF7FEFF 		bl	CyExitCriticalSection
 733              	.LVL38:
 734              	.LVL39:
 735              	.LVL40:
 736              		.loc 1 2401 0
 737 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 738              	.L57:
 739 002e C046     		.align	2
 740              	.L56:
 741 0030 00E400E0 		.word	-536812544
 742              		.cfi_endproc
 743              	.LFE22:
 744              		.size	CyIntSetPriority, .-CyIntSetPriority
 745              		.section	.text.CyIntGetPriority,"ax",%progbits
 746              		.align	1
 747              		.global	CyIntGetPriority
 748              		.code	16
 749              		.thumb_func
 750              		.type	CyIntGetPriority, %function
 751              	CyIntGetPriority:
 752              	.LFB23:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 57


2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 753              		.loc 1 2417 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758              	.LVL41:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 759              		.loc 1 2422 0
 760 0000 8308     		lsrs	r3, r0, #2
 761 0002 064A     		ldr	r2, .L59
 762 0004 9B00     		lsls	r3, r3, #2
 763 0006 9B18     		adds	r3, r3, r2
 764 0008 1968     		ldr	r1, [r3]
 765              	.LVL42:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 766              		.loc 1 2424 0
 767 000a 0322     		movs	r2, #3
 768 000c 0300     		movs	r3, r0
 769 000e 1340     		ands	r3, r2
 770 0010 9340     		lsls	r3, r3, r2
 771 0012 0633     		adds	r3, r3, #6
 772 0014 D940     		lsrs	r1, r1, r3
 773              	.LVL43:
 774 0016 0800     		movs	r0, r1
 775              	.LVL44:
2425:Generated_Source\PSoC4/CyLib.c **** }
 776              		.loc 1 2425 0
 777              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 778              		.loc 1 2424 0
 779 0018 1040     		ands	r0, r2
 780              		.loc 1 2425 0
 781 001a 7047     		bx	lr
 782              	.L60:
 783              		.align	2
 784              	.L59:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 58


 785 001c 00E400E0 		.word	-536812544
 786              		.cfi_endproc
 787              	.LFE23:
 788              		.size	CyIntGetPriority, .-CyIntGetPriority
 789              		.section	.text.CyIntEnable,"ax",%progbits
 790              		.align	1
 791              		.global	CyIntEnable
 792              		.code	16
 793              		.thumb_func
 794              		.type	CyIntEnable, %function
 795              	CyIntEnable:
 796              	.LFB24:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 797              		.loc 1 2438 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LVL45:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 803              		.loc 1 2439 0
 804 0000 1F23     		movs	r3, #31
 805 0002 1840     		ands	r0, r3
 806              	.LVL46:
 807 0004 1E3B     		subs	r3, r3, #30
 808 0006 8340     		lsls	r3, r3, r0
 809 0008 014A     		ldr	r2, .L62
2440:Generated_Source\PSoC4/CyLib.c **** }
 810              		.loc 1 2440 0
 811              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 812              		.loc 1 2439 0
 813 000a 1360     		str	r3, [r2]
 814              		.loc 1 2440 0
 815 000c 7047     		bx	lr
 816              	.L63:
 817 000e C046     		.align	2
 818              	.L62:
 819 0010 00E100E0 		.word	-536813312
 820              		.cfi_endproc
 821              	.LFE24:
 822              		.size	CyIntEnable, .-CyIntEnable
 823              		.section	.text.CyIntGetState,"ax",%progbits
 824              		.align	1
 825              		.global	CyIntGetState
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 59


 826              		.code	16
 827              		.thumb_func
 828              		.type	CyIntGetState, %function
 829              	CyIntGetState:
 830              	.LFB25:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 831              		.loc 1 2456 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836              	.LVL47:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 837              		.loc 1 2458 0
 838 0000 1F22     		movs	r2, #31
 839 0002 044B     		ldr	r3, .L65
 840 0004 1040     		ands	r0, r2
 841              	.LVL48:
 842 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 843              		.loc 1 2459 0
 844              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 845              		.loc 1 2458 0
 846 0008 C340     		lsrs	r3, r3, r0
 847 000a 1800     		movs	r0, r3
 848 000c 0123     		movs	r3, #1
 849 000e 1840     		ands	r0, r3
 850              		.loc 1 2459 0
 851 0010 7047     		bx	lr
 852              	.L66:
 853 0012 C046     		.align	2
 854              	.L65:
 855 0014 00E100E0 		.word	-536813312
 856              		.cfi_endproc
 857              	.LFE25:
 858              		.size	CyIntGetState, .-CyIntGetState
 859              		.section	.text.CyIntDisable,"ax",%progbits
 860              		.align	1
 861              		.global	CyIntDisable
 862              		.code	16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 60


 863              		.thumb_func
 864              		.type	CyIntDisable, %function
 865              	CyIntDisable:
 866              	.LFB26:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 867              		.loc 1 2472 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872              	.LVL49:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 873              		.loc 1 2473 0
 874 0000 1F23     		movs	r3, #31
 875 0002 1840     		ands	r0, r3
 876              	.LVL50:
 877 0004 1E3B     		subs	r3, r3, #30
 878 0006 8340     		lsls	r3, r3, r0
 879 0008 014A     		ldr	r2, .L68
2474:Generated_Source\PSoC4/CyLib.c **** }
 880              		.loc 1 2474 0
 881              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 882              		.loc 1 2473 0
 883 000a 1360     		str	r3, [r2]
 884              		.loc 1 2474 0
 885 000c 7047     		bx	lr
 886              	.L69:
 887 000e C046     		.align	2
 888              	.L68:
 889 0010 80E100E0 		.word	-536813184
 890              		.cfi_endproc
 891              	.LFE26:
 892              		.size	CyIntDisable, .-CyIntDisable
 893              		.section	.text.CyIntSetPending,"ax",%progbits
 894              		.align	1
 895              		.global	CyIntSetPending
 896              		.code	16
 897              		.thumb_func
 898              		.type	CyIntSetPending, %function
 899              	CyIntSetPending:
 900              	.LFB27:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 61


2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 901              		.loc 1 2486 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL51:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 907              		.loc 1 2487 0
 908 0000 1F23     		movs	r3, #31
 909 0002 1840     		ands	r0, r3
 910              	.LVL52:
 911 0004 1E3B     		subs	r3, r3, #30
 912 0006 8340     		lsls	r3, r3, r0
 913 0008 014A     		ldr	r2, .L71
2488:Generated_Source\PSoC4/CyLib.c **** }
 914              		.loc 1 2488 0
 915              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 916              		.loc 1 2487 0
 917 000a 1360     		str	r3, [r2]
 918              		.loc 1 2488 0
 919 000c 7047     		bx	lr
 920              	.L72:
 921 000e C046     		.align	2
 922              	.L71:
 923 0010 00E200E0 		.word	-536813056
 924              		.cfi_endproc
 925              	.LFE27:
 926              		.size	CyIntSetPending, .-CyIntSetPending
 927              		.section	.text.CyIntClearPending,"ax",%progbits
 928              		.align	1
 929              		.global	CyIntClearPending
 930              		.code	16
 931              		.thumb_func
 932              		.type	CyIntClearPending, %function
 933              	CyIntClearPending:
 934              	.LFB28:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 62


2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 935              		.loc 1 2501 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		@ link register save eliminated.
 940              	.LVL53:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 941              		.loc 1 2502 0
 942 0000 1F23     		movs	r3, #31
 943 0002 1840     		ands	r0, r3
 944              	.LVL54:
 945 0004 1E3B     		subs	r3, r3, #30
 946 0006 8340     		lsls	r3, r3, r0
 947 0008 014A     		ldr	r2, .L74
2503:Generated_Source\PSoC4/CyLib.c **** }
 948              		.loc 1 2503 0
 949              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 950              		.loc 1 2502 0
 951 000a 1360     		str	r3, [r2]
 952              		.loc 1 2503 0
 953 000c 7047     		bx	lr
 954              	.L75:
 955 000e C046     		.align	2
 956              	.L74:
 957 0010 80E200E0 		.word	-536812928
 958              		.cfi_endproc
 959              	.LFE28:
 960              		.size	CyIntClearPending, .-CyIntClearPending
 961              		.section	.text.CyHalt,"ax",%progbits
 962              		.align	1
 963              		.global	CyHalt
 964              		.code	16
 965              		.thumb_func
 966              		.type	CyHalt, %function
 967              	CyHalt:
 968              	.LFB29:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 969              		.loc 1 2516 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 63


 974              	.LVL55:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 975              		.loc 1 2525 0
 976              		.syntax divided
 977              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 978 0000 01BE     		    bkpt    1
 979              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 980              		.loc 1 2529 0
 981              		.thumb
 982              		.syntax unified
 983              		@ sp needed
 984 0002 7047     		bx	lr
 985              		.cfi_endproc
 986              	.LFE29:
 987              		.size	CyHalt, .-CyHalt
 988              		.section	.text.CySoftwareReset,"ax",%progbits
 989              		.align	1
 990              		.global	CySoftwareReset
 991              		.code	16
 992              		.thumb_func
 993              		.type	CySoftwareReset, %function
 994              	CySoftwareReset:
 995              	.LFB30:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 996              		.loc 1 2540 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1001              		.loc 1 2545 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 64


 1002 0000 034A     		ldr	r2, .L78
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1003              		.loc 1 2546 0
 1004 0002 0449     		ldr	r1, .L78+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1005              		.loc 1 2545 0
 1006 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1007              		.loc 1 2547 0
 1008              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1009              		.loc 1 2546 0
 1010 0006 9BB2     		uxth	r3, r3
 1011 0008 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1012              		.loc 1 2545 0
 1013 000a 1360     		str	r3, [r2]
 1014              		.loc 1 2547 0
 1015 000c 7047     		bx	lr
 1016              	.L79:
 1017 000e C046     		.align	2
 1018              	.L78:
 1019 0010 0CED00E0 		.word	-536810228
 1020 0014 0400FA05 		.word	100270084
 1021              		.cfi_endproc
 1022              	.LFE30:
 1023              		.size	CySoftwareReset, .-CySoftwareReset
 1024              		.section	.text.CyDelay,"ax",%progbits
 1025              		.align	1
 1026              		.global	CyDelay
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	CyDelay, %function
 1030              	CyDelay:
 1031              	.LFB31:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1032              		.loc 1 2560 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              	.LVL56:
 1037 0000 70B5     		push	{r4, r5, r6, lr}
 1038              		.cfi_def_cfa_offset 16
 1039              		.cfi_offset 4, -16
 1040              		.cfi_offset 5, -12
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 65


 1041              		.cfi_offset 6, -8
 1042              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1043              		.loc 1 2561 0
 1044 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1045              		.loc 1 2560 0
 1046 0004 0400     		movs	r4, r0
 1047              		.loc 1 2561 0
 1048 0006 2D02     		lsls	r5, r5, #8
 1049              	.LVL57:
 1050              	.L81:
 1051 0008 064B     		ldr	r3, .L84
 1052 000a AC42     		cmp	r4, r5
 1053 000c 05D9     		bls	.L83
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1054              		.loc 1 2566 0
 1055 000e 5868     		ldr	r0, [r3, #4]
 1056 0010 FFF7FEFF 		bl	CyDelayCycles
 1057              	.LVL58:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1058              		.loc 1 2567 0
 1059 0014 044B     		ldr	r3, .L84+4
 1060 0016 E418     		adds	r4, r4, r3
 1061              	.LVL59:
 1062 0018 F6E7     		b	.L81
 1063              	.L83:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1064              		.loc 1 2570 0
 1065 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1066              		.loc 1 2571 0
 1067              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1068              		.loc 1 2570 0
 1069 001c 6043     		muls	r0, r4
 1070 001e FFF7FEFF 		bl	CyDelayCycles
 1071              	.LVL60:
 1072              	.LVL61:
 1073              		.loc 1 2571 0
 1074 0022 70BD     		pop	{r4, r5, r6, pc}
 1075              	.L85:
 1076              		.align	2
 1077              	.L84:
 1078 0024 00000000 		.word	.LANCHOR0
 1079 0028 0080FFFF 		.word	-32768
 1080              		.cfi_endproc
 1081              	.LFE31:
 1082              		.size	CyDelay, .-CyDelay
 1083              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1084              		.align	1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 66


 1085              		.global	CySysClkImoEnableWcoLock
 1086              		.code	16
 1087              		.thumb_func
 1088              		.type	CySysClkImoEnableWcoLock, %function
 1089              	CySysClkImoEnableWcoLock:
 1090              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1091              		.loc 1 176 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 8
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              	.LVL62:
 1096 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1097              		.cfi_def_cfa_offset 32
 1098              		.cfi_offset 0, -32
 1099              		.cfi_offset 1, -28
 1100              		.cfi_offset 2, -24
 1101              		.cfi_offset 4, -20
 1102              		.cfi_offset 5, -16
 1103              		.cfi_offset 6, -12
 1104              		.cfi_offset 7, -8
 1105              		.cfi_offset 14, -4
 187:Generated_Source\PSoC4/CyLib.c ****         {
 1106              		.loc 1 187 0
 1107 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 1108              	.LVL63:
 1109 0006 0028     		cmp	r0, #0
 1110 0008 4FD0     		beq	.L86
 1111              	.LBB14:
 1112              	.LBB15:
 189:Generated_Source\PSoC4/CyLib.c **** 
 1113              		.loc 1 189 0
 1114 000a FFF7FEFF 		bl	CyEnterCriticalSection
 1115              	.LVL64:
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 1116              		.loc 1 203 0
 1117 000e 3F27     		movs	r7, #63
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 1118              		.loc 1 201 0
 1119 0010 0022     		movs	r2, #0
 189:Generated_Source\PSoC4/CyLib.c **** 
 1120              		.loc 1 189 0
 1121 0012 0400     		movs	r4, r0
 1122              	.LVL65:
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 1123              		.loc 1 203 0
 1124 0014 254E     		ldr	r6, .L100
 1125 0016 2648     		ldr	r0, .L100+4
 1126              	.LVL66:
 1127              	.L90:
 1128 0018 3168     		ldr	r1, [r6]
 1129 001a 135C     		ldrb	r3, [r2, r0]
 1130 001c 3940     		ands	r1, r7
 1131 001e 0500     		movs	r5, r0
 1132 0020 9942     		cmp	r1, r3
 1133 0022 01D1     		bne	.L88
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 67


 1134              		.loc 1 205 0
 1135 0024 0332     		adds	r2, r2, #3
 1136              	.LVL67:
 1137 0026 03E0     		b	.L89
 1138              	.LVL68:
 1139              	.L88:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 1140              		.loc 1 201 0
 1141 0028 0132     		adds	r2, r2, #1
 1142              	.LVL69:
 1143 002a 2E2A     		cmp	r2, #46
 1144 002c F4D1     		bne	.L90
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1145              		.loc 1 200 0
 1146 002e 2B3A     		subs	r2, r2, #43
 1147              	.LVL70:
 1148              	.L89:
 225:Generated_Source\PSoC4/CyLib.c ****                 {
 1149              		.loc 1 225 0
 1150 0030 1F20     		movs	r0, #31
 1151 0032 2049     		ldr	r1, .L100+8
 1152 0034 0B68     		ldr	r3, [r1]
 1153 0036 0342     		tst	r3, r0
 1154 0038 04D1     		bne	.L91
 227:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1155              		.loc 1 227 0
 1156 003a 0B68     		ldr	r3, [r1]
 1157 003c 8343     		bics	r3, r0
 1158 003e 1338     		subs	r0, r0, #19
 1159 0040 0343     		orrs	r3, r0
 1160 0042 0B60     		str	r3, [r1]
 1161              	.L91:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1162              		.loc 1 238 0
 1163 0044 8026     		movs	r6, #128
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1164              		.loc 1 232 0
 1165 0046 1C49     		ldr	r1, .L100+12
 1166 0048 1C4B     		ldr	r3, .L100+16
 1167 004a 0868     		ldr	r0, [r1]
 238:Generated_Source\PSoC4/CyLib.c **** 
 1168              		.loc 1 238 0
 1169 004c F601     		lsls	r6, r6, #7
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1170              		.loc 1 232 0
 1171 004e 1840     		ands	r0, r3
 1172              	.LVL71:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1173              		.loc 1 238 0
 1174 0050 1B4B     		ldr	r3, .L100+20
 1175 0052 5343     		muls	r3, r2
 1176 0054 9B19     		adds	r3, r3, r6
 1177 0056 DB0B     		lsrs	r3, r3, #15
 1178 0058 013B     		subs	r3, r3, #1
 1179 005a 0343     		orrs	r3, r0
 1180              	.LVL72:
 244:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 68


 1181              		.loc 1 244 0
 1182 005c 192A     		cmp	r2, #25
 1183 005e 01D8     		bhi	.L92
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1184              		.loc 1 246 0
 1185 0060 1848     		ldr	r0, .L100+24
 1186 0062 0CE0     		b	.L99
 1187              	.L92:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1188              		.loc 1 250 0
 1189 0064 1848     		ldr	r0, .L100+28
 1190 0066 1018     		adds	r0, r2, r0
 251:Generated_Source\PSoC4/CyLib.c **** 
 1191              		.loc 1 251 0
 1192 0068 AA18     		adds	r2, r5, r2
 1193              	.LVL73:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1194              		.loc 1 250 0
 1195 006a 0678     		ldrb	r6, [r0]
 1196 006c 107D     		ldrb	r0, [r2, #20]
 1197              	.LVL74:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1198              		.loc 1 241 0
 1199 006e A022     		movs	r2, #160
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1200              		.loc 1 256 0
 1201 0070 8019     		adds	r0, r0, r6
 1202              	.LVL75:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1203              		.loc 1 241 0
 1204 0072 5203     		lsls	r2, r2, #13
 1205 0074 1343     		orrs	r3, r2
 1206              	.LVL76:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1207              		.loc 1 256 0
 1208 0076 FF28     		cmp	r0, #255
 1209 0078 00D9     		bls	.L94
 1210 007a FF20     		movs	r0, #255
 1211              	.L94:
 1212 007c 8005     		lsls	r0, r0, #22
 1213              	.L99:
 1214 007e 0343     		orrs	r3, r0
 1215              	.LVL77:
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1216              		.loc 1 261 0
 1217 0080 124D     		ldr	r5, .L100+32
 259:Generated_Source\PSoC4/CyLib.c **** 
 1218              		.loc 1 259 0
 1219 0082 0B60     		str	r3, [r1]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1220              		.loc 1 261 0
 1221 0084 2B68     		ldr	r3, [r5]
 1222              	.LVL78:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1223              		.loc 1 262 0
 1224 0086 3020     		movs	r0, #48
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 69


 1225              		.loc 1 261 0
 1226 0088 0193     		str	r3, [sp, #4]
 1227              	.LVL79:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1228              		.loc 1 262 0
 1229 008a FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1230              	.LVL80:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1231              		.loc 1 263 0
 1232 008e 8021     		movs	r1, #128
 1233 0090 0F4A     		ldr	r2, .L100+36
 1234 0092 C905     		lsls	r1, r1, #23
 1235 0094 1368     		ldr	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1236              		.loc 1 264 0
 1237 0096 1420     		movs	r0, #20
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1238              		.loc 1 263 0
 1239 0098 0B43     		orrs	r3, r1
 1240 009a 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1241              		.loc 1 264 0
 1242 009c FFF7FEFF 		bl	CyDelay
 1243              	.LVL81:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1244              		.loc 1 265 0
 1245 00a0 019B     		ldr	r3, [sp, #4]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1246              		.loc 1 267 0
 1247 00a2 2000     		movs	r0, r4
 265:Generated_Source\PSoC4/CyLib.c **** 
 1248              		.loc 1 265 0
 1249 00a4 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1250              		.loc 1 267 0
 1251 00a6 FFF7FEFF 		bl	CyExitCriticalSection
 1252              	.LVL82:
 1253              	.L86:
 1254              	.LBE15:
 1255              	.LBE14:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1256              		.loc 1 269 0
 1257              		@ sp needed
 1258 00aa F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1259              	.L101:
 1260              		.align	2
 1261              	.L100:
 1262 00ac 2CFF0B40 		.word	1074528044
 1263 00b0 00000000 		.word	.LANCHOR1
 1264 00b4 34FF0B40 		.word	1074528052
 1265 00b8 08002240 		.word	1075970056
 1266 00bc 00F800C0 		.word	-1073678336
 1267 00c0 40420F00 		.word	1000000
 1268 00c4 0000D43F 		.word	1070858240
 1269 00c8 CDF1FF0F 		.word	268431821
 1270 00cc 30001040 		.word	1074790448
 1271 00d0 00002240 		.word	1075970048
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 70


 1272              		.cfi_endproc
 1273              	.LFE3:
 1274              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1275              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1276              		.align	1
 1277              		.global	CySysClkWriteImoFreq
 1278              		.code	16
 1279              		.thumb_func
 1280              		.type	CySysClkWriteImoFreq, %function
 1281              	CySysClkWriteImoFreq:
 1282              	.LFB10:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1283              		.loc 1 624 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 24
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              	.LVL83:
 1288 0000 30B5     		push	{r4, r5, lr}
 1289              		.cfi_def_cfa_offset 12
 1290              		.cfi_offset 4, -12
 1291              		.cfi_offset 5, -8
 1292              		.cfi_offset 14, -4
 1293 0002 87B0     		sub	sp, sp, #28
 1294              		.cfi_def_cfa_offset 40
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1295              		.loc 1 624 0
 1296 0004 0400     		movs	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 647 0
 1298 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1299              	.LVL84:
 1300 000a 0500     		movs	r5, r0
 1301              	.LVL85:
 650:Generated_Source\PSoC4/CyLib.c ****             {
 1302              		.loc 1 650 0
 1303 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1304              	.LVL86:
 637:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1305              		.loc 1 637 0
 1306 0010 0022     		movs	r2, #0
 650:Generated_Source\PSoC4/CyLib.c ****             {
 1307              		.loc 1 650 0
 1308 0012 9042     		cmp	r0, r2
 1309 0014 02D0     		beq	.L103
 1310              	.LVL87:
 653:Generated_Source\PSoC4/CyLib.c ****             }
 1311              		.loc 1 653 0
 1312 0016 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1313              	.LVL88:
 652:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1314              		.loc 1 652 0
 1315 001a 0122     		movs	r2, #1
 1316              	.LVL89:
 1317              	.L103:
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1318              		.loc 1 681 0
 1319 001c 104B     		ldr	r3, .L107
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 71


 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1320              		.loc 1 692 0
 1321 001e 1148     		ldr	r0, .L107+4
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1322              		.loc 1 681 0
 1323 0020 1968     		ldr	r1, [r3]
 1324 0022 02AB     		add	r3, sp, #8
 1325 0024 0291     		str	r1, [sp, #8]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1326              		.loc 1 682 0
 1327 0026 1049     		ldr	r1, .L107+8
 1328 0028 0968     		ldr	r1, [r1]
 1329 002a 0391     		str	r1, [sp, #12]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1330              		.loc 1 683 0
 1331 002c 0F49     		ldr	r1, .L107+12
 1332 002e 0C19     		adds	r4, r1, r4
 1333              	.LVL90:
 1334 0030 033C     		subs	r4, r4, #3
 1335 0032 2178     		ldrb	r1, [r4]
 1336 0034 0491     		str	r1, [sp, #16]
 684:Generated_Source\PSoC4/CyLib.c **** 
 1337              		.loc 1 684 0
 1338 0036 0E49     		ldr	r1, .L107+16
 1339 0038 0968     		ldr	r1, [r1]
 1340 003a 0591     		str	r1, [sp, #20]
 686:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1341              		.loc 1 686 0
 1342 003c 0D49     		ldr	r1, .L107+20
 1343 003e 0091     		str	r1, [sp]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1344              		.loc 1 691 0
 1345 0040 6946     		mov	r1, sp
 689:Generated_Source\PSoC4/CyLib.c **** 
 1346              		.loc 1 689 0
 1347 0042 0193     		str	r3, [sp, #4]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1348              		.loc 1 691 0
 1349 0044 0C4B     		ldr	r3, .L107+24
 1350 0046 1960     		str	r1, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1351              		.loc 1 692 0
 1352 0048 0C49     		ldr	r1, .L107+28
 1353 004a 0860     		str	r0, [r1]
 693:Generated_Source\PSoC4/CyLib.c **** 
 1354              		.loc 1 693 0
 1355 004c 1B68     		ldr	r3, [r3]
 810:Generated_Source\PSoC4/CyLib.c ****             {
 1356              		.loc 1 810 0
 1357 004e 012A     		cmp	r2, #1
 1358 0050 01D1     		bne	.L104
 812:Generated_Source\PSoC4/CyLib.c ****             }
 1359              		.loc 1 812 0
 1360 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1361              	.LVL91:
 1362              	.L104:
 823:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 72


 1363              		.loc 1 823 0
 1364 0056 2800     		movs	r0, r5
 1365 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1366              	.LVL92:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1367              		.loc 1 824 0
 1368 005c 07B0     		add	sp, sp, #28
 1369              		@ sp needed
 1370              	.LVL93:
 1371 005e 30BD     		pop	{r4, r5, pc}
 1372              	.L108:
 1373              		.align	2
 1374              	.L107:
 1375 0060 08010B40 		.word	1074462984
 1376 0064 17000080 		.word	-2147483625
 1377 0068 00010B40 		.word	1074462976
 1378 006c 00000000 		.word	.LANCHOR1
 1379 0070 30001040 		.word	1074790448
 1380 0074 B6EA0000 		.word	60086
 1381 0078 08001040 		.word	1074790408
 1382 007c 04001040 		.word	1074790404
 1383              		.cfi_endproc
 1384              	.LFE10:
 1385              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1386              		.section	.text.CyDelayUs,"ax",%progbits
 1387              		.align	1
 1388              		.global	CyDelayUs
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	CyDelayUs, %function
 1392              	CyDelayUs:
 1393              	.LFB32:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1394              		.loc 1 2583 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              	.LVL94:
 1399 0000 10B5     		push	{r4, lr}
 1400              		.cfi_def_cfa_offset 8
 1401              		.cfi_offset 4, -8
 1402              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1403              		.loc 1 2584 0
 1404 0002 034B     		ldr	r3, .L110
2585:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 73


 1405              		.loc 1 2585 0
 1406              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1407              		.loc 1 2584 0
 1408 0004 1B7B     		ldrb	r3, [r3, #12]
 1409 0006 5843     		muls	r0, r3
 1410              	.LVL95:
 1411 0008 FFF7FEFF 		bl	CyDelayCycles
 1412              	.LVL96:
 1413              		.loc 1 2585 0
 1414 000c 10BD     		pop	{r4, pc}
 1415              	.L111:
 1416 000e C046     		.align	2
 1417              	.L110:
 1418 0010 00000000 		.word	.LANCHOR0
 1419              		.cfi_endproc
 1420              	.LFE32:
 1421              		.size	CyDelayUs, .-CyDelayUs
 1422              		.section	.text.CySysLvdEnable,"ax",%progbits
 1423              		.align	1
 1424              		.global	CySysLvdEnable
 1425              		.code	16
 1426              		.thumb_func
 1427              		.type	CySysLvdEnable, %function
 1428              	CySysLvdEnable:
 1429              	.LFB11:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1430              		.loc 1 2119 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              	.LVL97:
 1435 0000 70B5     		push	{r4, r5, r6, lr}
 1436              		.cfi_def_cfa_offset 16
 1437              		.cfi_offset 4, -16
 1438              		.cfi_offset 5, -12
 1439              		.cfi_offset 6, -8
 1440              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1441              		.loc 1 2121 0
 1442 0002 0225     		movs	r5, #2
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1443              		.loc 1 2124 0
 1444 0004 1E21     		movs	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 1445              		.loc 1 2121 0
 1446 0006 0C4C     		ldr	r4, .L113
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1447              		.loc 1 2124 0
 1448 0008 0C4A     		ldr	r2, .L113+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1449              		.loc 1 2121 0
 1450 000a 2368     		ldr	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1451              		.loc 1 2124 0
 1452 000c 4000     		lsls	r0, r0, #1
 1453              	.LVL98:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 74


2121:Generated_Source\PSoC4/CyLib.c **** 
 1454              		.loc 1 2121 0
 1455 000e AB43     		bics	r3, r5
 1456 0010 2360     		str	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1457              		.loc 1 2124 0
 1458 0012 1368     		ldr	r3, [r2]
 1459 0014 0840     		ands	r0, r1
 1460 0016 8B43     		bics	r3, r1
 1461 0018 1843     		orrs	r0, r3
 1462 001a 1060     		str	r0, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1463              		.loc 1 2131 0
 1464 001c FA20     		movs	r0, #250
2128:Generated_Source\PSoC4/CyLib.c **** 
 1465              		.loc 1 2128 0
 1466 001e 1368     		ldr	r3, [r2]
 1467 0020 1D39     		subs	r1, r1, #29
 1468 0022 0B43     		orrs	r3, r1
 1469 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1470              		.loc 1 2131 0
 1471 0026 8000     		lsls	r0, r0, #2
 1472 0028 FFF7FEFF 		bl	CyDelayUs
 1473              	.LVL99:
 1474              	.LBB16:
 1475              	.LBB17:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1476              		.loc 1 2184 0
 1477 002c 044B     		ldr	r3, .L113+8
 1478              	.LBE17:
 1479              	.LBE16:
2138:Generated_Source\PSoC4/CyLib.c **** 
 1480              		.loc 1 2138 0
 1481              		@ sp needed
 1482              	.LBB19:
 1483              	.LBB18:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1484              		.loc 1 2184 0
 1485 002e 1D60     		str	r5, [r3]
 1486              	.LBE18:
 1487              	.LBE19:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1488              		.loc 1 2137 0
 1489 0030 2368     		ldr	r3, [r4]
 1490 0032 1D43     		orrs	r5, r3
 1491 0034 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1492              		.loc 1 2138 0
 1493 0036 70BD     		pop	{r4, r5, r6, pc}
 1494              	.L114:
 1495              		.align	2
 1496              	.L113:
 1497 0038 08000B40 		.word	1074462728
 1498 003c 18000B40 		.word	1074462744
 1499 0040 04000B40 		.word	1074462724
 1500              		.cfi_endproc
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 75


 1501              	.LFE11:
 1502              		.size	CySysLvdEnable, .-CySysLvdEnable
 1503              		.global	__aeabi_uidiv
 1504              		.section	.text.CyDelayFreq,"ax",%progbits
 1505              		.align	1
 1506              		.global	CyDelayFreq
 1507              		.code	16
 1508              		.thumb_func
 1509              		.type	CyDelayFreq, %function
 1510              	CyDelayFreq:
 1511              	.LFB33:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1512              		.loc 1 2597 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              	.LVL100:
 1517 0000 70B5     		push	{r4, r5, r6, lr}
 1518              		.cfi_def_cfa_offset 16
 1519              		.cfi_offset 4, -16
 1520              		.cfi_offset 5, -12
 1521              		.cfi_offset 6, -8
 1522              		.cfi_offset 14, -4
 1523 0002 0C4C     		ldr	r4, .L118
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1524              		.loc 1 2598 0
 1525 0004 0028     		cmp	r0, #0
 1526 0006 01D0     		beq	.L116
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1527              		.loc 1 2600 0
 1528 0008 2061     		str	r0, [r4, #16]
 1529 000a 01E0     		b	.L117
 1530              	.L116:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1531              		.loc 1 2604 0
 1532 000c 0A4B     		ldr	r3, .L118+4
 1533 000e 2361     		str	r3, [r4, #16]
 1534              	.L117:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1535              		.loc 1 2607 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 76


 1536 0010 2569     		ldr	r5, [r4, #16]
 1537 0012 0A4B     		ldr	r3, .L118+8
 1538 0014 0A49     		ldr	r1, .L118+12
 1539 0016 E818     		adds	r0, r5, r3
 1540              	.LVL101:
 1541 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1542              	.LVL102:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1543              		.loc 1 2608 0
 1544 001c FA21     		movs	r1, #250
 1545 001e 094B     		ldr	r3, .L118+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1546              		.loc 1 2607 0
 1547 0020 2073     		strb	r0, [r4, #12]
 1548              		.loc 1 2608 0
 1549 0022 8900     		lsls	r1, r1, #2
 1550 0024 E818     		adds	r0, r5, r3
 1551 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1552              	.LVL103:
 1553 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1554              		.loc 1 2609 0
 1555 002c C003     		lsls	r0, r0, #15
 1556 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1557              		.loc 1 2610 0
 1558              		@ sp needed
 1559 0030 70BD     		pop	{r4, r5, r6, pc}
 1560              	.L119:
 1561 0032 C046     		.align	2
 1562              	.L118:
 1563 0034 00000000 		.word	.LANCHOR0
 1564 0038 006CDC02 		.word	48000000
 1565 003c 3F420F00 		.word	999999
 1566 0040 40420F00 		.word	1000000
 1567 0044 E7030000 		.word	999
 1568              		.cfi_endproc
 1569              	.LFE33:
 1570              		.size	CyDelayFreq, .-CyDelayFreq
 1571              		.section	.text.CySysTickInit,"ax",%progbits
 1572              		.align	1
 1573              		.global	CySysTickInit
 1574              		.code	16
 1575              		.thumb_func
 1576              		.type	CySysTickInit, %function
 1577              	CySysTickInit:
 1578              	.LFB35:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 77


2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1579              		.loc 1 2658 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              	.LVL104:
 1584 0000 10B5     		push	{r4, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 4, -8
 1587              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1588              		.loc 1 2663 0
 1589 0002 0024     		movs	r4, #0
 1590              	.LBB30:
 1591              	.LBB31:
 1592              	.LBB32:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 78


2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2707:Generated_Source\PSoC4/CyLib.c **** }
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 79


2721:Generated_Source\PSoC4/CyLib.c **** {
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2723:Generated_Source\PSoC4/CyLib.c **** }
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2739:Generated_Source\PSoC4/CyLib.c **** }
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2756:Generated_Source\PSoC4/CyLib.c **** }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2772:Generated_Source\PSoC4/CyLib.c **** }
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 80


2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2788:Generated_Source\PSoC4/CyLib.c **** }
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1593              		.loc 1 2821 0
 1594 0004 0421     		movs	r1, #4
 1595              	.LBE32:
 1596              	.LBE31:
 1597              	.LBE30:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1598              		.loc 1 2663 0
 1599 0006 0C4B     		ldr	r3, .L121
 1600              	.LBB37:
 1601              	.LBB38:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1602              		.loc 1 2290 0
 1603 0008 0C4A     		ldr	r2, .L121+4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 81


 1604              	.LBE38:
 1605              	.LBE37:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1606              		.loc 1 2663 0
 1607 000a 1C60     		str	r4, [r3]
 1608              	.LVL105:
 1609 000c 1C61     		str	r4, [r3, #16]
 1610 000e 5C60     		str	r4, [r3, #4]
 1611              	.LVL106:
 1612 0010 9C60     		str	r4, [r3, #8]
 1613              	.LVL107:
 1614 0012 DC60     		str	r4, [r3, #12]
 1615              	.LVL108:
 1616              	.LBB41:
 1617              	.LBB39:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1618              		.loc 1 2290 0
 1619 0014 0A4B     		ldr	r3, .L121+8
 1620              	.LVL109:
 1621              	.LBE39:
 1622              	.LBE41:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1623              		.loc 1 2674 0
 1624              		@ sp needed
 1625              	.LBB42:
 1626              	.LBB40:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1627              		.loc 1 2290 0
 1628 0016 1A60     		str	r2, [r3]
 1629              	.LVL110:
 1630              	.LBE40:
 1631              	.LBE42:
 1632              	.LBB43:
 1633              	.LBB35:
 1634              	.LBB33:
 1635              		.loc 1 2821 0
 1636 0018 0A4A     		ldr	r2, .L121+12
 1637 001a 1368     		ldr	r3, [r2]
 1638 001c 0B43     		orrs	r3, r1
 1639              	.LBE33:
 1640              	.LBE35:
 1641              	.LBE43:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1642              		.loc 1 2672 0
 1643 001e FA21     		movs	r1, #250
 1644              	.LBB44:
 1645              	.LBB36:
 1646              	.LBB34:
 1647              		.loc 1 2821 0
 1648 0020 1360     		str	r3, [r2]
 1649              	.LVL111:
 1650              	.LBE34:
 1651              	.LBE36:
 1652              	.LBE44:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1653              		.loc 1 2672 0
 1654 0022 094B     		ldr	r3, .L121+16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 82


 1655 0024 8900     		lsls	r1, r1, #2
 1656 0026 1869     		ldr	r0, [r3, #16]
 1657 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1658              	.LVL112:
 1659              	.LBB45:
 1660              	.LBB46:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1661              		.loc 1 2755 0
 1662 002c 074B     		ldr	r3, .L121+20
 1663 002e 1860     		str	r0, [r3]
 1664              	.LVL113:
 1665              	.LBE46:
 1666              	.LBE45:
 1667              	.LBB47:
 1668              	.LBB48:
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 83


2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2868:Generated_Source\PSoC4/CyLib.c **** }
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1669              		.loc 1 2880 0
 1670 0030 074B     		ldr	r3, .L121+24
 1671 0032 1C60     		str	r4, [r3]
 1672              	.LBE48:
 1673              	.LBE47:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1674              		.loc 1 2674 0
 1675 0034 10BD     		pop	{r4, pc}
 1676              	.L122:
 1677 0036 C046     		.align	2
 1678              	.L121:
 1679 0038 00000000 		.word	.LANCHOR2
 1680 003c 00000000 		.word	CySysTickServiceCallbacks
 1681 0040 3C000020 		.word	536870972
 1682 0044 10E000E0 		.word	-536813552
 1683 0048 00000000 		.word	.LANCHOR0
 1684 004c 14E000E0 		.word	-536813548
 1685 0050 18E000E0 		.word	-536813544
 1686              		.cfi_endproc
 1687              	.LFE35:
 1688              		.size	CySysTickInit, .-CySysTickInit
 1689              		.section	.text.CySysTickStop,"ax",%progbits
 1690              		.align	1
 1691              		.global	CySysTickStop
 1692              		.code	16
 1693              		.thumb_func
 1694              		.type	CySysTickStop, %function
 1695              	CySysTickStop:
 1696              	.LFB37:
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1697              		.loc 1 2705 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c **** }
 1702              		.loc 1 2706 0
 1703 0000 0121     		movs	r1, #1
 1704 0002 024A     		ldr	r2, .L124
2707:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 84


 1705              		.loc 1 2707 0
 1706              		@ sp needed
2706:Generated_Source\PSoC4/CyLib.c **** }
 1707              		.loc 1 2706 0
 1708 0004 1368     		ldr	r3, [r2]
 1709 0006 8B43     		bics	r3, r1
 1710 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** 
 1711              		.loc 1 2707 0
 1712 000a 7047     		bx	lr
 1713              	.L125:
 1714              		.align	2
 1715              	.L124:
 1716 000c 10E000E0 		.word	-536813552
 1717              		.cfi_endproc
 1718              	.LFE37:
 1719              		.size	CySysTickStop, .-CySysTickStop
 1720              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1721              		.align	1
 1722              		.global	CySysTickEnableInterrupt
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickEnableInterrupt, %function
 1726              	CySysTickEnableInterrupt:
 1727              	.LFB38:
2721:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1728              		.loc 1 2721 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c **** }
 1733              		.loc 1 2722 0
 1734 0000 0221     		movs	r1, #2
 1735 0002 024A     		ldr	r2, .L127
2723:Generated_Source\PSoC4/CyLib.c **** 
 1736              		.loc 1 2723 0
 1737              		@ sp needed
2722:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 2722 0
 1739 0004 1368     		ldr	r3, [r2]
 1740 0006 0B43     		orrs	r3, r1
 1741 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** 
 1742              		.loc 1 2723 0
 1743 000a 7047     		bx	lr
 1744              	.L128:
 1745              		.align	2
 1746              	.L127:
 1747 000c 10E000E0 		.word	-536813552
 1748              		.cfi_endproc
 1749              	.LFE38:
 1750              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1751              		.section	.text.CySysTickEnable,"ax",%progbits
 1752              		.align	1
 1753              		.global	CySysTickEnable
 1754              		.code	16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 85


 1755              		.thumb_func
 1756              		.type	CySysTickEnable, %function
 1757              	CySysTickEnable:
 1758              	.LFB36:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1759              		.loc 1 2688 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 0
 1762              		@ frame_needed = 0, uses_anonymous_args = 0
 1763 0000 10B5     		push	{r4, lr}
 1764              		.cfi_def_cfa_offset 8
 1765              		.cfi_offset 4, -8
 1766              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1767              		.loc 1 2689 0
 1768 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1769              	.LVL114:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1770              		.loc 1 2690 0
 1771 0006 0121     		movs	r1, #1
 1772 0008 024A     		ldr	r2, .L130
2691:Generated_Source\PSoC4/CyLib.c **** 
 1773              		.loc 1 2691 0
 1774              		@ sp needed
2690:Generated_Source\PSoC4/CyLib.c **** }
 1775              		.loc 1 2690 0
 1776 000a 1368     		ldr	r3, [r2]
 1777 000c 0B43     		orrs	r3, r1
 1778 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1779              		.loc 1 2691 0
 1780 0010 10BD     		pop	{r4, pc}
 1781              	.L131:
 1782 0012 C046     		.align	2
 1783              	.L130:
 1784 0014 10E000E0 		.word	-536813552
 1785              		.cfi_endproc
 1786              	.LFE36:
 1787              		.size	CySysTickEnable, .-CySysTickEnable
 1788              		.section	.text.CySysTickStart,"ax",%progbits
 1789              		.align	1
 1790              		.global	CySysTickStart
 1791              		.code	16
 1792              		.thumb_func
 1793              		.type	CySysTickStart, %function
 1794              	CySysTickStart:
 1795              	.LFB34:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1796              		.loc 1 2629 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800 0000 10B5     		push	{r4, lr}
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 4, -8
 1803              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 86


 1804              		.loc 1 2630 0
 1805 0002 054C     		ldr	r4, .L134
 1806 0004 6369     		ldr	r3, [r4, #20]
 1807 0006 002B     		cmp	r3, #0
 1808 0008 03D1     		bne	.L133
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1809              		.loc 1 2632 0
 1810 000a FFF7FEFF 		bl	CySysTickInit
 1811              	.LVL115:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1812              		.loc 1 2633 0
 1813 000e 0123     		movs	r3, #1
 1814 0010 6361     		str	r3, [r4, #20]
 1815              	.L133:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1816              		.loc 1 2636 0
 1817 0012 FFF7FEFF 		bl	CySysTickEnable
 1818              	.LVL116:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1819              		.loc 1 2637 0
 1820              		@ sp needed
 1821 0016 10BD     		pop	{r4, pc}
 1822              	.L135:
 1823              		.align	2
 1824              	.L134:
 1825 0018 00000000 		.word	.LANCHOR2
 1826              		.cfi_endproc
 1827              	.LFE34:
 1828              		.size	CySysTickStart, .-CySysTickStart
 1829              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1830              		.align	1
 1831              		.global	CySysTickDisableInterrupt
 1832              		.code	16
 1833              		.thumb_func
 1834              		.type	CySysTickDisableInterrupt, %function
 1835              	CySysTickDisableInterrupt:
 1836              	.LFB39:
2737:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1837              		.loc 1 2737 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c **** }
 1842              		.loc 1 2738 0
 1843 0000 0221     		movs	r1, #2
 1844 0002 024A     		ldr	r2, .L137
2739:Generated_Source\PSoC4/CyLib.c **** 
 1845              		.loc 1 2739 0
 1846              		@ sp needed
2738:Generated_Source\PSoC4/CyLib.c **** }
 1847              		.loc 1 2738 0
 1848 0004 1368     		ldr	r3, [r2]
 1849 0006 8B43     		bics	r3, r1
 1850 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** 
 1851              		.loc 1 2739 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 87


 1852 000a 7047     		bx	lr
 1853              	.L138:
 1854              		.align	2
 1855              	.L137:
 1856 000c 10E000E0 		.word	-536813552
 1857              		.cfi_endproc
 1858              	.LFE39:
 1859              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1860              		.section	.text.CySysTickSetReload,"ax",%progbits
 1861              		.align	1
 1862              		.global	CySysTickSetReload
 1863              		.code	16
 1864              		.thumb_func
 1865              		.type	CySysTickSetReload, %function
 1866              	CySysTickSetReload:
 1867              	.LFB40:
2754:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1868              		.loc 1 2754 0
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 0
 1871              		@ frame_needed = 0, uses_anonymous_args = 0
 1872              		@ link register save eliminated.
 1873              	.LVL117:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1874              		.loc 1 2755 0
 1875 0000 024B     		ldr	r3, .L140
 1876 0002 0002     		lsls	r0, r0, #8
 1877              	.LVL118:
 1878 0004 000A     		lsrs	r0, r0, #8
 1879 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** 
 1880              		.loc 1 2756 0
 1881              		@ sp needed
 1882 0008 7047     		bx	lr
 1883              	.L141:
 1884 000a C046     		.align	2
 1885              	.L140:
 1886 000c 14E000E0 		.word	-536813548
 1887              		.cfi_endproc
 1888              	.LFE40:
 1889              		.size	CySysTickSetReload, .-CySysTickSetReload
 1890              		.section	.text.CySysTickGetReload,"ax",%progbits
 1891              		.align	1
 1892              		.global	CySysTickGetReload
 1893              		.code	16
 1894              		.thumb_func
 1895              		.type	CySysTickGetReload, %function
 1896              	CySysTickGetReload:
 1897              	.LFB41:
2770:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1898              		.loc 1 2770 0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c **** }
 1903              		.loc 1 2771 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 88


 1904 0000 024B     		ldr	r3, .L143
2772:Generated_Source\PSoC4/CyLib.c **** 
 1905              		.loc 1 2772 0
 1906              		@ sp needed
2771:Generated_Source\PSoC4/CyLib.c **** }
 1907              		.loc 1 2771 0
 1908 0002 1868     		ldr	r0, [r3]
 1909 0004 0002     		lsls	r0, r0, #8
 1910 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** 
 1911              		.loc 1 2772 0
 1912 0008 7047     		bx	lr
 1913              	.L144:
 1914 000a C046     		.align	2
 1915              	.L143:
 1916 000c 14E000E0 		.word	-536813548
 1917              		.cfi_endproc
 1918              	.LFE41:
 1919              		.size	CySysTickGetReload, .-CySysTickGetReload
 1920              		.section	.text.CySysTickGetValue,"ax",%progbits
 1921              		.align	1
 1922              		.global	CySysTickGetValue
 1923              		.code	16
 1924              		.thumb_func
 1925              		.type	CySysTickGetValue, %function
 1926              	CySysTickGetValue:
 1927              	.LFB42:
2786:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1928              		.loc 1 2786 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 0
 1931              		@ frame_needed = 0, uses_anonymous_args = 0
 1932              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c **** }
 1933              		.loc 1 2787 0
 1934 0000 024B     		ldr	r3, .L146
2788:Generated_Source\PSoC4/CyLib.c **** 
 1935              		.loc 1 2788 0
 1936              		@ sp needed
2787:Generated_Source\PSoC4/CyLib.c **** }
 1937              		.loc 1 2787 0
 1938 0002 1868     		ldr	r0, [r3]
 1939 0004 0002     		lsls	r0, r0, #8
 1940 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** 
 1941              		.loc 1 2788 0
 1942 0008 7047     		bx	lr
 1943              	.L147:
 1944 000a C046     		.align	2
 1945              	.L146:
 1946 000c 18E000E0 		.word	-536813544
 1947              		.cfi_endproc
 1948              	.LFE42:
 1949              		.size	CySysTickGetValue, .-CySysTickGetValue
 1950              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1951              		.align	1
 1952              		.global	CySysTickSetClockSource
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 89


 1953              		.code	16
 1954              		.thumb_func
 1955              		.type	CySysTickSetClockSource, %function
 1956              	CySysTickSetClockSource:
 1957              	.LFB43:
2818:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1958              		.loc 1 2818 0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962              		@ link register save eliminated.
 1963              	.LVL119:
 1964 0000 044B     		ldr	r3, .L152
 1965 0002 0421     		movs	r1, #4
 1966              	.LBB51:
 1967              	.LBB52:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1968              		.loc 1 2821 0
 1969 0004 1A68     		ldr	r2, [r3]
 1970              	.LBE52:
 1971              	.LBE51:
2819:Generated_Source\PSoC4/CyLib.c ****         {
 1972              		.loc 1 2819 0
 1973 0006 0128     		cmp	r0, #1
 1974 0008 01D1     		bne	.L149
 1975              	.LVL120:
 1976              	.LBB54:
 1977              	.LBB53:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1978              		.loc 1 2821 0
 1979 000a 0A43     		orrs	r2, r1
 1980 000c 00E0     		b	.L151
 1981              	.LVL121:
 1982              	.L149:
 1983              	.LBE53:
 1984              	.LBE54:
2825:Generated_Source\PSoC4/CyLib.c ****         }
 1985              		.loc 1 2825 0
 1986 000e 8A43     		bics	r2, r1
 1987              	.L151:
 1988 0010 1A60     		str	r2, [r3]
2827:Generated_Source\PSoC4/CyLib.c **** 
 1989              		.loc 1 2827 0
 1990              		@ sp needed
 1991 0012 7047     		bx	lr
 1992              	.L153:
 1993              		.align	2
 1994              	.L152:
 1995 0014 10E000E0 		.word	-536813552
 1996              		.cfi_endproc
 1997              	.LFE43:
 1998              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1999              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2000              		.align	1
 2001              		.global	CySysTickGetClockSource
 2002              		.code	16
 2003              		.thumb_func
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 90


 2004              		.type	CySysTickGetClockSource, %function
 2005              	CySysTickGetClockSource:
 2006              	.LFB44:
2843:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2007              		.loc 1 2843 0
 2008              		.cfi_startproc
 2009              		@ args = 0, pretend = 0, frame = 0
 2010              		@ frame_needed = 0, uses_anonymous_args = 0
 2011              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****     }
 2012              		.loc 1 2844 0
 2013 0000 024B     		ldr	r3, .L155
2845:Generated_Source\PSoC4/CyLib.c ****     
 2014              		.loc 1 2845 0
 2015              		@ sp needed
2844:Generated_Source\PSoC4/CyLib.c ****     }
 2016              		.loc 1 2844 0
 2017 0002 1868     		ldr	r0, [r3]
 2018 0004 4007     		lsls	r0, r0, #29
 2019 0006 C00F     		lsrs	r0, r0, #31
2845:Generated_Source\PSoC4/CyLib.c ****     
 2020              		.loc 1 2845 0
 2021 0008 7047     		bx	lr
 2022              	.L156:
 2023 000a C046     		.align	2
 2024              	.L155:
 2025 000c 10E000E0 		.word	-536813552
 2026              		.cfi_endproc
 2027              	.LFE44:
 2028              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2029              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2030              		.align	1
 2031              		.global	CySysTickGetCountFlag
 2032              		.code	16
 2033              		.thumb_func
 2034              		.type	CySysTickGetCountFlag, %function
 2035              	CySysTickGetCountFlag:
 2036              	.LFB45:
2866:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2037              		.loc 1 2866 0
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 0
 2040              		@ frame_needed = 0, uses_anonymous_args = 0
 2041              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c **** }
 2042              		.loc 1 2867 0
 2043 0000 024B     		ldr	r3, .L158
2868:Generated_Source\PSoC4/CyLib.c **** 
 2044              		.loc 1 2868 0
 2045              		@ sp needed
2867:Generated_Source\PSoC4/CyLib.c **** }
 2046              		.loc 1 2867 0
 2047 0002 1868     		ldr	r0, [r3]
 2048 0004 C003     		lsls	r0, r0, #15
 2049 0006 C00F     		lsrs	r0, r0, #31
2868:Generated_Source\PSoC4/CyLib.c **** 
 2050              		.loc 1 2868 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 91


 2051 0008 7047     		bx	lr
 2052              	.L159:
 2053 000a C046     		.align	2
 2054              	.L158:
 2055 000c 10E000E0 		.word	-536813552
 2056              		.cfi_endproc
 2057              	.LFE45:
 2058              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2059              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2060              		.align	1
 2061              		.code	16
 2062              		.thumb_func
 2063              		.type	CySysTickServiceCallbacks, %function
 2064              	CySysTickServiceCallbacks:
 2065              	.LFB49:
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 92


2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 2066              		.loc 1 2951 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070 0000 10B5     		push	{r4, lr}
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 4, -8
 2073              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2074              		.loc 1 2955 0
 2075 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2076              	.LVL122:
 2077 0006 0128     		cmp	r0, #1
 2078 0008 08D1     		bne	.L160
 2079 000a 0024     		movs	r4, #0
 2080              	.L163:
 2081              	.LBB57:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2082              		.loc 1 2959 0
 2083 000c 044B     		ldr	r3, .L169
 2084 000e E358     		ldr	r3, [r4, r3]
 2085 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 93


 2086 0012 00D0     		beq	.L162
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2087              		.loc 1 2961 0
 2088 0014 9847     		blx	r3
 2089              	.LVL123:
 2090              	.L162:
 2091 0016 0434     		adds	r4, r4, #4
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2092              		.loc 1 2957 0
 2093 0018 142C     		cmp	r4, #20
 2094 001a F7D1     		bne	.L163
 2095              	.L160:
 2096              	.LBE57:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 2097              		.loc 1 2965 0
 2098              		@ sp needed
 2099 001c 10BD     		pop	{r4, pc}
 2100              	.L170:
 2101 001e C046     		.align	2
 2102              	.L169:
 2103 0020 00000000 		.word	.LANCHOR2
 2104              		.cfi_endproc
 2105              	.LFE49:
 2106              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2107              		.section	.text.CySysTickClear,"ax",%progbits
 2108              		.align	1
 2109              		.global	CySysTickClear
 2110              		.code	16
 2111              		.thumb_func
 2112              		.type	CySysTickClear, %function
 2113              	CySysTickClear:
 2114              	.LFB46:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2115              		.loc 1 2879 0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 2120              		.loc 1 2880 0
 2121 0000 0022     		movs	r2, #0
 2122 0002 014B     		ldr	r3, .L172
2881:Generated_Source\PSoC4/CyLib.c **** 
 2123              		.loc 1 2881 0
 2124              		@ sp needed
2880:Generated_Source\PSoC4/CyLib.c **** }
 2125              		.loc 1 2880 0
 2126 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 2127              		.loc 1 2881 0
 2128 0006 7047     		bx	lr
 2129              	.L173:
 2130              		.align	2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 94


 2131              	.L172:
 2132 0008 18E000E0 		.word	-536813544
 2133              		.cfi_endproc
 2134              	.LFE46:
 2135              		.size	CySysTickClear, .-CySysTickClear
 2136              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2137              		.align	1
 2138              		.global	CySysTickSetCallback
 2139              		.code	16
 2140              		.thumb_func
 2141              		.type	CySysTickSetCallback, %function
 2142              	CySysTickSetCallback:
 2143              	.LFB47:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2144              		.loc 1 2914 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 2149              	.LVL124:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2150              		.loc 1 2917 0
 2151 0000 024A     		ldr	r2, .L175
 2152 0002 8300     		lsls	r3, r0, #2
 2153 0004 9858     		ldr	r0, [r3, r2]
 2154              	.LVL125:
2920:Generated_Source\PSoC4/CyLib.c **** 
 2155              		.loc 1 2920 0
 2156              		@ sp needed
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2157              		.loc 1 2918 0
 2158 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2159              		.loc 1 2920 0
 2160 0008 7047     		bx	lr
 2161              	.L176:
 2162 000a C046     		.align	2
 2163              	.L175:
 2164 000c 00000000 		.word	.LANCHOR2
 2165              		.cfi_endproc
 2166              	.LFE47:
 2167              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2168              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2169              		.align	1
 2170              		.global	CySysTickGetCallback
 2171              		.code	16
 2172              		.thumb_func
 2173              		.type	CySysTickGetCallback, %function
 2174              	CySysTickGetCallback:
 2175              	.LFB48:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2176              		.loc 1 2938 0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 0
 2179              		@ frame_needed = 0, uses_anonymous_args = 0
 2180              		@ link register save eliminated.
 2181              	.LVL126:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 95


2939:Generated_Source\PSoC4/CyLib.c **** }
 2182              		.loc 1 2939 0
 2183 0000 014B     		ldr	r3, .L178
 2184 0002 8000     		lsls	r0, r0, #2
 2185              	.LVL127:
 2186 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2187              		.loc 1 2940 0
 2188              		@ sp needed
 2189 0006 7047     		bx	lr
 2190              	.L179:
 2191              		.align	2
 2192              	.L178:
 2193 0008 00000000 		.word	.LANCHOR2
 2194              		.cfi_endproc
 2195              	.LFE48:
 2196              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2197              		.section	.text.CyGetUniqueId,"ax",%progbits
 2198              		.align	1
 2199              		.global	CyGetUniqueId
 2200              		.code	16
 2201              		.thumb_func
 2202              		.type	CyGetUniqueId, %function
 2203              	CyGetUniqueId:
 2204              	.LFB50:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2205              		.loc 1 2983 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 2209              		@ link register save eliminated.
 2210              	.LVL128:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2211              		.loc 1 2985 0
 2212 0000 144B     		ldr	r3, .L181
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2989:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 96


2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2213              		.loc 1 3005 0
 2214              		@ sp needed
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2215              		.loc 1 2985 0
 2216 0002 1A78     		ldrb	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2217              		.loc 1 2986 0
 2218 0004 144B     		ldr	r3, .L181+4
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2219              		.loc 1 2985 0
 2220 0006 D1B2     		uxtb	r1, r2
 2221 0008 0160     		str	r1, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2222              		.loc 1 2986 0
 2223 000a 1B78     		ldrb	r3, [r3]
 2224 000c 1B02     		lsls	r3, r3, #8
 2225 000e 0B43     		orrs	r3, r1
 2226 0010 1A00     		movs	r2, r3
 2227 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2228              		.loc 1 2987 0
 2229 0014 114B     		ldr	r3, .L181+8
 2230 0016 1B78     		ldrb	r3, [r3]
 2231 0018 1B04     		lsls	r3, r3, #16
 2232 001a 1343     		orrs	r3, r2
2988:Generated_Source\PSoC4/CyLib.c **** 
 2233              		.loc 1 2988 0
 2234 001c 104A     		ldr	r2, .L181+12
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2235              		.loc 1 2987 0
 2236 001e 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c **** 
 2237              		.loc 1 2988 0
 2238 0020 1278     		ldrb	r2, [r2]
 2239 0022 1206     		lsls	r2, r2, #24
 2240 0024 1343     		orrs	r3, r2
 2241 0026 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2242              		.loc 1 2990 0
 2243 0028 0E4B     		ldr	r3, .L181+16
 2244 002a 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 97


2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2245              		.loc 1 2991 0
 2246 002c 0E4B     		ldr	r3, .L181+20
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2247              		.loc 1 2990 0
 2248 002e D1B2     		uxtb	r1, r2
 2249 0030 4160     		str	r1, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2250              		.loc 1 2991 0
 2251 0032 1B78     		ldrb	r3, [r3]
 2252 0034 1B02     		lsls	r3, r3, #8
 2253 0036 0B43     		orrs	r3, r1
 2254 0038 1A00     		movs	r2, r3
 2255 003a 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2256              		.loc 1 2992 0
 2257 003c 0B4B     		ldr	r3, .L181+24
 2258 003e 1B78     		ldrb	r3, [r3]
 2259 0040 1B04     		lsls	r3, r3, #16
 2260 0042 1343     		orrs	r3, r2
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2261              		.loc 1 2993 0
 2262 0044 0A4A     		ldr	r2, .L181+28
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2263              		.loc 1 2992 0
 2264 0046 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2265              		.loc 1 2993 0
 2266 0048 1278     		ldrb	r2, [r2]
 2267 004a 1206     		lsls	r2, r2, #24
 2268 004c 1343     		orrs	r3, r2
 2269 004e 4360     		str	r3, [r0, #4]
 2270              		.loc 1 3005 0
 2271 0050 7047     		bx	lr
 2272              	.L182:
 2273 0052 C046     		.align	2
 2274              	.L181:
 2275 0054 78F1FF0F 		.word	268431736
 2276 0058 79F1FF0F 		.word	268431737
 2277 005c 7AF1FF0F 		.word	268431738
 2278 0060 7BF1FF0F 		.word	268431739
 2279 0064 7CF1FF0F 		.word	268431740
 2280 0068 7DF1FF0F 		.word	268431741
 2281 006c 7EF1FF0F 		.word	268431742
 2282 0070 7FF1FF0F 		.word	268431743
 2283              		.cfi_endproc
 2284              	.LFE50:
 2285              		.size	CyGetUniqueId, .-CyGetUniqueId
 2286              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2287              		.align	1
 2288              		.global	CySysSetRamAccessArbPriority
 2289              		.code	16
 2290              		.thumb_func
 2291              		.type	CySysSetRamAccessArbPriority, %function
 2292              	CySysSetRamAccessArbPriority:
 2293              	.LFB51:
3006:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 98


3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:Generated_Source\PSoC4/CyLib.c ****     *
3013:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3014:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3015:Generated_Source\PSoC4/CyLib.c ****     *  details.
3016:Generated_Source\PSoC4/CyLib.c ****     *
3017:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3018:Generated_Source\PSoC4/CyLib.c ****     *
3019:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3020:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3024:Generated_Source\PSoC4/CyLib.c ****     *
3025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3027:Generated_Source\PSoC4/CyLib.c ****     {
 2294              		.loc 1 3027 0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 0
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 2298              		@ link register save eliminated.
 2299              	.LVL129:
3028:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3029:Generated_Source\PSoC4/CyLib.c **** 
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2300              		.loc 1 3030 0
 2301 0000 0549     		ldr	r1, .L184
 2302 0002 064B     		ldr	r3, .L184+4
 2303 0004 0A68     		ldr	r2, [r1]
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2304              		.loc 1 3031 0
 2305 0006 4004     		lsls	r0, r0, #17
 2306              	.LVL130:
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2307              		.loc 1 3030 0
 2308 0008 1340     		ands	r3, r2
 2309              	.LVL131:
 2310              		.loc 1 3031 0
 2311 000a C022     		movs	r2, #192
 2312 000c D202     		lsls	r2, r2, #11
 2313 000e 1040     		ands	r0, r2
 2314 0010 1843     		orrs	r0, r3
 2315              	.LVL132:
3032:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2316              		.loc 1 3032 0
 2317 0012 0860     		str	r0, [r1]
3033:Generated_Source\PSoC4/CyLib.c ****     }
 2318              		.loc 1 3033 0
 2319              		@ sp needed
 2320 0014 7047     		bx	lr
 2321              	.L185:
 2322 0016 C046     		.align	2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 99


 2323              	.L184:
 2324 0018 38001040 		.word	1074790456
 2325 001c FFFFF9FF 		.word	-393217
 2326              		.cfi_endproc
 2327              	.LFE51:
 2328              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2329              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2330              		.align	1
 2331              		.global	CySysSetFlashAccessArbPriority
 2332              		.code	16
 2333              		.thumb_func
 2334              		.type	CySysSetFlashAccessArbPriority, %function
 2335              	CySysSetFlashAccessArbPriority:
 2336              	.LFB52:
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3037:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3038:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3039:Generated_Source\PSoC4/CyLib.c ****     *
3040:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3041:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3042:Generated_Source\PSoC4/CyLib.c ****     *  details.
3043:Generated_Source\PSoC4/CyLib.c ****     *
3044:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3045:Generated_Source\PSoC4/CyLib.c ****     *
3046:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3047:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3051:Generated_Source\PSoC4/CyLib.c ****     *
3052:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3053:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3054:Generated_Source\PSoC4/CyLib.c ****     {
 2337              		.loc 1 3054 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 0, uses_anonymous_args = 0
 2341              		@ link register save eliminated.
 2342              	.LVL133:
3055:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3056:Generated_Source\PSoC4/CyLib.c **** 
3057:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2343              		.loc 1 3057 0
 2344 0000 0549     		ldr	r1, .L187
 2345 0002 064B     		ldr	r3, .L187+4
 2346 0004 0A68     		ldr	r2, [r1]
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2347              		.loc 1 3058 0
 2348 0006 4004     		lsls	r0, r0, #17
 2349              	.LVL134:
3057:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2350              		.loc 1 3057 0
 2351 0008 1340     		ands	r3, r2
 2352              	.LVL135:
 2353              		.loc 1 3058 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 100


 2354 000a C022     		movs	r2, #192
 2355 000c D202     		lsls	r2, r2, #11
 2356 000e 1040     		ands	r0, r2
 2357 0010 1843     		orrs	r0, r3
 2358              	.LVL136:
3059:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2359              		.loc 1 3059 0
 2360 0012 0860     		str	r0, [r1]
3060:Generated_Source\PSoC4/CyLib.c ****     }
 2361              		.loc 1 3060 0
 2362              		@ sp needed
 2363 0014 7047     		bx	lr
 2364              	.L188:
 2365 0016 C046     		.align	2
 2366              	.L187:
 2367 0018 30001040 		.word	1074790448
 2368 001c FFFFF9FF 		.word	-393217
 2369              		.cfi_endproc
 2370              	.LFE52:
 2371              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2372              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2373              		.align	1
 2374              		.global	CySysSetDmacAccessArbPriority
 2375              		.code	16
 2376              		.thumb_func
 2377              		.type	CySysSetDmacAccessArbPriority, %function
 2378              	CySysSetDmacAccessArbPriority:
 2379              	.LFB53:
3061:Generated_Source\PSoC4/CyLib.c **** 
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3064:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3065:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3066:Generated_Source\PSoC4/CyLib.c ****     *
3067:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3068:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3069:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3070:Generated_Source\PSoC4/CyLib.c ****     *
3071:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3072:Generated_Source\PSoC4/CyLib.c ****     *
3073:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3074:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3078:Generated_Source\PSoC4/CyLib.c ****     *
3079:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3080:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3081:Generated_Source\PSoC4/CyLib.c ****     {
 2380              		.loc 1 3081 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 0
 2383              		@ frame_needed = 0, uses_anonymous_args = 0
 2384              		@ link register save eliminated.
 2385              	.LVL137:
3082:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3083:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 101


3084:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2386              		.loc 1 3084 0
 2387 0000 0549     		ldr	r1, .L190
 2388 0002 064B     		ldr	r3, .L190+4
 2389 0004 0A68     		ldr	r2, [r1]
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2390              		.loc 1 3085 0
 2391 0006 4004     		lsls	r0, r0, #17
 2392              	.LVL138:
3084:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2393              		.loc 1 3084 0
 2394 0008 1340     		ands	r3, r2
 2395              	.LVL139:
 2396              		.loc 1 3085 0
 2397 000a C022     		movs	r2, #192
 2398 000c D202     		lsls	r2, r2, #11
 2399 000e 1040     		ands	r0, r2
 2400 0010 1843     		orrs	r0, r3
 2401              	.LVL140:
3086:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2402              		.loc 1 3086 0
 2403 0012 0860     		str	r0, [r1]
3087:Generated_Source\PSoC4/CyLib.c ****     }
 2404              		.loc 1 3087 0
 2405              		@ sp needed
 2406 0014 7047     		bx	lr
 2407              	.L191:
 2408 0016 C046     		.align	2
 2409              	.L190:
 2410 0018 3C001040 		.word	1074790460
 2411 001c FFFFF9FF 		.word	-393217
 2412              		.cfi_endproc
 2413              	.LFE53:
 2414              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2415              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2416              		.align	1
 2417              		.global	CySysSetPeripheralAccessArbPriority
 2418              		.code	16
 2419              		.thumb_func
 2420              		.type	CySysSetPeripheralAccessArbPriority, %function
 2421              	CySysSetPeripheralAccessArbPriority:
 2422              	.LFB54:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3092:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c ****     *
3094:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3095:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3096:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3097:Generated_Source\PSoC4/CyLib.c ****     *
3098:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3099:Generated_Source\PSoC4/CyLib.c ****     *
3100:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3101:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3102:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 102


3103:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3107:Generated_Source\PSoC4/CyLib.c ****     *
3108:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3109:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3110:Generated_Source\PSoC4/CyLib.c ****     {
 2423              		.loc 1 3110 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 2427              		@ link register save eliminated.
 2428              	.LVL141:
3111:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3112:Generated_Source\PSoC4/CyLib.c **** 
3113:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2429              		.loc 1 3113 0
 2430 0000 0028     		cmp	r0, #0
 2431 0002 01D1     		bne	.L193
3114:Generated_Source\PSoC4/CyLib.c ****         {
3115:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2432              		.loc 1 3115 0
 2433 0004 0948     		ldr	r0, .L197
 2434              	.LVL142:
 2435 0006 06E0     		b	.L196
 2436              	.LVL143:
 2437              	.L193:
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3117:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
3118:Generated_Source\PSoC4/CyLib.c ****         } else
3119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3120:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2438              		.loc 1 3120 0
 2439 0008 0128     		cmp	r0, #1
 2440 000a 01D1     		bne	.L195
3121:Generated_Source\PSoC4/CyLib.c ****         {
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2441              		.loc 1 3122 0
 2442 000c 0848     		ldr	r0, .L197+4
 2443              	.LVL144:
 2444 000e 02E0     		b	.L196
 2445              	.LVL145:
 2446              	.L195:
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3124:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3125:Generated_Source\PSoC4/CyLib.c ****         } else
3126:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3127:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3128:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2447              		.loc 1 3128 0
 2448 0010 0228     		cmp	r0, #2
 2449 0012 09D1     		bne	.L192
3129:Generated_Source\PSoC4/CyLib.c ****         {
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2450              		.loc 1 3130 0
 2451 0014 0748     		ldr	r0, .L197+8
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 103


 2452              	.LVL146:
 2453              	.L196:
 2454 0016 0268     		ldr	r2, [r0]
 2455 0018 074B     		ldr	r3, .L197+12
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2456              		.loc 1 3131 0
 2457 001a 4904     		lsls	r1, r1, #17
 2458              	.LVL147:
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2459              		.loc 1 3130 0
 2460 001c 1340     		ands	r3, r2
 2461              	.LVL148:
 2462              		.loc 1 3131 0
 2463 001e C022     		movs	r2, #192
 2464 0020 D202     		lsls	r2, r2, #11
 2465 0022 1140     		ands	r1, r2
 2466 0024 1943     		orrs	r1, r3
 2467              	.LVL149:
3132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2468              		.loc 1 3132 0
 2469 0026 0160     		str	r1, [r0]
 2470              	.LVL150:
 2471              	.L192:
3133:Generated_Source\PSoC4/CyLib.c ****         } else
3134:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3135:Generated_Source\PSoC4/CyLib.c ****         {
3136:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3137:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3138:Generated_Source\PSoC4/CyLib.c ****         }
3139:Generated_Source\PSoC4/CyLib.c ****     }
 2472              		.loc 1 3139 0
 2473              		@ sp needed
 2474 0028 7047     		bx	lr
 2475              	.L198:
 2476 002a C046     		.align	2
 2477              	.L197:
 2478 002c 00011040 		.word	1074790656
 2479 0030 04011040 		.word	1074790660
 2480 0034 08011040 		.word	1074790664
 2481 0038 FFFFF9FF 		.word	-393217
 2482              		.cfi_endproc
 2483              	.LFE54:
 2484              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2485              		.global	CySysClkPumpConfig
 2486              		.global	cyImoFreqMhz2DpllOffset
 2487              		.global	cyImoFreqMhz2Reg
 2488              		.global	CySysTickInitVar
 2489              		.global	cydelay32kMs
 2490              		.global	cydelayFreqMhz
 2491              		.global	cydelayFreqKhz
 2492              		.global	cydelayFreqHz
 2493              		.section	.rodata
 2494              		.set	.LANCHOR1,. + 0
 2495              		.type	cyImoFreqMhz2Reg, %object
 2496              		.size	cyImoFreqMhz2Reg, 46
 2497              	cyImoFreqMhz2Reg:
 2498 0000 03       		.byte	3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 104


 2499 0001 04       		.byte	4
 2500 0002 05       		.byte	5
 2501 0003 06       		.byte	6
 2502 0004 07       		.byte	7
 2503 0005 08       		.byte	8
 2504 0006 09       		.byte	9
 2505 0007 0A       		.byte	10
 2506 0008 0B       		.byte	11
 2507 0009 0C       		.byte	12
 2508 000a 0E       		.byte	14
 2509 000b 0F       		.byte	15
 2510 000c 10       		.byte	16
 2511 000d 11       		.byte	17
 2512 000e 12       		.byte	18
 2513 000f 13       		.byte	19
 2514 0010 14       		.byte	20
 2515 0011 15       		.byte	21
 2516 0012 16       		.byte	22
 2517 0013 17       		.byte	23
 2518 0014 18       		.byte	24
 2519 0015 19       		.byte	25
 2520 0016 1B       		.byte	27
 2521 0017 1C       		.byte	28
 2522 0018 1D       		.byte	29
 2523 0019 1E       		.byte	30
 2524 001a 1F       		.byte	31
 2525 001b 20       		.byte	32
 2526 001c 21       		.byte	33
 2527 001d 22       		.byte	34
 2528 001e 23       		.byte	35
 2529 001f 25       		.byte	37
 2530 0020 26       		.byte	38
 2531 0021 27       		.byte	39
 2532 0022 28       		.byte	40
 2533 0023 29       		.byte	41
 2534 0024 2A       		.byte	42
 2535 0025 2B       		.byte	43
 2536 0026 2E       		.byte	46
 2537 0027 2F       		.byte	47
 2538 0028 30       		.byte	48
 2539 0029 31       		.byte	49
 2540 002a 32       		.byte	50
 2541 002b 33       		.byte	51
 2542 002c 34       		.byte	52
 2543 002d 35       		.byte	53
 2544              		.type	cyImoFreqMhz2DpllOffset, %object
 2545              		.size	cyImoFreqMhz2DpllOffset, 23
 2546              	cyImoFreqMhz2DpllOffset:
 2547 002e EE       		.byte	-18
 2548 002f DB       		.byte	-37
 2549 0030 C9       		.byte	-55
 2550 0031 B9       		.byte	-71
 2551 0032 AA       		.byte	-86
 2552 0033 9B       		.byte	-101
 2553 0034 8E       		.byte	-114
 2554 0035 82       		.byte	-126
 2555 0036 76       		.byte	118
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 105


 2556 0037 6B       		.byte	107
 2557 0038 60       		.byte	96
 2558 0039 56       		.byte	86
 2559 003a 4D       		.byte	77
 2560 003b 44       		.byte	68
 2561 003c 3B       		.byte	59
 2562 003d 33       		.byte	51
 2563 003e 2C       		.byte	44
 2564 003f 24       		.byte	36
 2565 0040 1D       		.byte	29
 2566 0041 17       		.byte	23
 2567 0042 10       		.byte	16
 2568 0043 0A       		.byte	10
 2569 0044 04       		.byte	4
 2570              		.data
 2571              		.align	2
 2572              		.set	.LANCHOR0,. + 0
 2573              		.type	CySysClkPumpConfig, %object
 2574              		.size	CySysClkPumpConfig, 4
 2575              	CySysClkPumpConfig:
 2576 0000 01000000 		.word	1
 2577              		.type	cydelay32kMs, %object
 2578              		.size	cydelay32kMs, 4
 2579              	cydelay32kMs:
 2580 0004 0000C05D 		.word	1572864000
 2581              		.type	cydelayFreqKhz, %object
 2582              		.size	cydelayFreqKhz, 4
 2583              	cydelayFreqKhz:
 2584 0008 80BB0000 		.word	48000
 2585              		.type	cydelayFreqMhz, %object
 2586              		.size	cydelayFreqMhz, 1
 2587              	cydelayFreqMhz:
 2588 000c 30       		.byte	48
 2589 000d 000000   		.space	3
 2590              		.type	cydelayFreqHz, %object
 2591              		.size	cydelayFreqHz, 4
 2592              	cydelayFreqHz:
 2593 0010 006CDC02 		.word	48000000
 2594              		.bss
 2595              		.align	2
 2596              		.set	.LANCHOR2,. + 0
 2597              		.type	CySysTickCallbacks, %object
 2598              		.size	CySysTickCallbacks, 20
 2599              	CySysTickCallbacks:
 2600 0000 00000000 		.space	20
 2600      00000000 
 2600      00000000 
 2600      00000000 
 2600      00000000 
 2601              		.type	CySysTickInitVar, %object
 2602              		.size	CySysTickInitVar, 4
 2603              	CySysTickInitVar:
 2604 0014 00000000 		.space	4
 2605              		.text
 2606              	.Letext0:
 2607              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2608              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 106


 2609              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2610              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2611              		.section	.debug_info,"",%progbits
 2612              	.Ldebug_info0:
 2613 0000 D40D0000 		.4byte	0xdd4
 2614 0004 0400     		.2byte	0x4
 2615 0006 00000000 		.4byte	.Ldebug_abbrev0
 2616 000a 04       		.byte	0x4
 2617 000b 01       		.uleb128 0x1
 2618 000c 82040000 		.4byte	.LASF120
 2619 0010 0C       		.byte	0xc
 2620 0011 C4070000 		.4byte	.LASF121
 2621 0015 AE010000 		.4byte	.LASF122
 2622 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 2623 001d 00000000 		.4byte	0
 2624 0021 00000000 		.4byte	.Ldebug_line0
 2625 0025 02       		.uleb128 0x2
 2626 0026 01       		.byte	0x1
 2627 0027 06       		.byte	0x6
 2628 0028 EB000000 		.4byte	.LASF0
 2629 002c 02       		.uleb128 0x2
 2630 002d 01       		.byte	0x1
 2631 002e 08       		.byte	0x8
 2632 002f 02060000 		.4byte	.LASF1
 2633 0033 02       		.uleb128 0x2
 2634 0034 02       		.byte	0x2
 2635 0035 05       		.byte	0x5
 2636 0036 17060000 		.4byte	.LASF2
 2637 003a 02       		.uleb128 0x2
 2638 003b 02       		.byte	0x2
 2639 003c 07       		.byte	0x7
 2640 003d 44030000 		.4byte	.LASF3
 2641 0041 02       		.uleb128 0x2
 2642 0042 04       		.byte	0x4
 2643 0043 05       		.byte	0x5
 2644 0044 50010000 		.4byte	.LASF4
 2645 0048 02       		.uleb128 0x2
 2646 0049 04       		.byte	0x4
 2647 004a 07       		.byte	0x7
 2648 004b B7020000 		.4byte	.LASF5
 2649 004f 02       		.uleb128 0x2
 2650 0050 08       		.byte	0x8
 2651 0051 05       		.byte	0x5
 2652 0052 DD000000 		.4byte	.LASF6
 2653 0056 02       		.uleb128 0x2
 2654 0057 08       		.byte	0x8
 2655 0058 07       		.byte	0x7
 2656 0059 67000000 		.4byte	.LASF7
 2657 005d 03       		.uleb128 0x3
 2658 005e 04       		.byte	0x4
 2659 005f 05       		.byte	0x5
 2660 0060 696E7400 		.ascii	"int\000"
 2661 0064 02       		.uleb128 0x2
 2662 0065 04       		.byte	0x4
 2663 0066 07       		.byte	0x7
 2664 0067 9B020000 		.4byte	.LASF8
 2665 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 107


 2666 006c 85010000 		.4byte	.LASF9
 2667 0070 02       		.byte	0x2
 2668 0071 D201     		.2byte	0x1d2
 2669 0073 2C000000 		.4byte	0x2c
 2670 0077 04       		.uleb128 0x4
 2671 0078 0F000000 		.4byte	.LASF10
 2672 007c 02       		.byte	0x2
 2673 007d D301     		.2byte	0x1d3
 2674 007f 3A000000 		.4byte	0x3a
 2675 0083 04       		.uleb128 0x4
 2676 0084 FC010000 		.4byte	.LASF11
 2677 0088 02       		.byte	0x2
 2678 0089 D401     		.2byte	0x1d4
 2679 008b 48000000 		.4byte	0x48
 2680 008f 02       		.uleb128 0x2
 2681 0090 04       		.byte	0x4
 2682 0091 04       		.byte	0x4
 2683 0092 68050000 		.4byte	.LASF12
 2684 0096 02       		.uleb128 0x2
 2685 0097 08       		.byte	0x8
 2686 0098 04       		.byte	0x4
 2687 0099 A1010000 		.4byte	.LASF13
 2688 009d 02       		.uleb128 0x2
 2689 009e 01       		.byte	0x1
 2690 009f 08       		.byte	0x8
 2691 00a0 6D060000 		.4byte	.LASF14
 2692 00a4 04       		.uleb128 0x4
 2693 00a5 CF050000 		.4byte	.LASF15
 2694 00a9 02       		.byte	0x2
 2695 00aa 7C02     		.2byte	0x27c
 2696 00ac B0000000 		.4byte	0xb0
 2697 00b0 05       		.uleb128 0x5
 2698 00b1 6B000000 		.4byte	0x6b
 2699 00b5 04       		.uleb128 0x4
 2700 00b6 F5030000 		.4byte	.LASF16
 2701 00ba 02       		.byte	0x2
 2702 00bb 7E02     		.2byte	0x27e
 2703 00bd C1000000 		.4byte	0xc1
 2704 00c1 05       		.uleb128 0x5
 2705 00c2 83000000 		.4byte	0x83
 2706 00c6 04       		.uleb128 0x4
 2707 00c7 8A060000 		.4byte	.LASF17
 2708 00cb 02       		.byte	0x2
 2709 00cc 8E02     		.2byte	0x28e
 2710 00ce D2000000 		.4byte	0xd2
 2711 00d2 06       		.uleb128 0x6
 2712 00d3 04       		.byte	0x4
 2713 00d4 D8000000 		.4byte	0xd8
 2714 00d8 07       		.uleb128 0x7
 2715 00d9 02       		.uleb128 0x2
 2716 00da 08       		.byte	0x8
 2717 00db 04       		.byte	0x4
 2718 00dc 6E040000 		.4byte	.LASF18
 2719 00e0 02       		.uleb128 0x2
 2720 00e1 04       		.byte	0x4
 2721 00e2 07       		.byte	0x7
 2722 00e3 1E040000 		.4byte	.LASF19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 108


 2723 00e7 08       		.uleb128 0x8
 2724 00e8 93050000 		.4byte	.LASF20
 2725 00ec 03       		.byte	0x3
 2726 00ed F5       		.byte	0xf5
 2727 00ee D2000000 		.4byte	0xd2
 2728 00f2 09       		.uleb128 0x9
 2729 00f3 20020000 		.4byte	.LASF26
 2730 00f7 01       		.byte	0x1
 2731 00f8 AF       		.byte	0xaf
 2732 00f9 01       		.byte	0x1
 2733 00fa 3F010000 		.4byte	0x13f
 2734 00fe 0A       		.uleb128 0xa
 2735 00ff 6900     		.ascii	"i\000"
 2736 0101 01       		.byte	0x1
 2737 0102 B2       		.byte	0xb2
 2738 0103 83000000 		.4byte	0x83
 2739 0107 0B       		.uleb128 0xb
 2740 0108 F7000000 		.4byte	.LASF21
 2741 010c 01       		.byte	0x1
 2742 010d B5       		.byte	0xb5
 2743 010e 83000000 		.4byte	0x83
 2744 0112 0B       		.uleb128 0xb
 2745 0113 08010000 		.4byte	.LASF22
 2746 0117 01       		.byte	0x1
 2747 0118 B6       		.byte	0xb6
 2748 0119 6B000000 		.4byte	0x6b
 2749 011d 0B       		.uleb128 0xb
 2750 011e 57030000 		.4byte	.LASF23
 2751 0122 01       		.byte	0x1
 2752 0123 B7       		.byte	0xb7
 2753 0124 83000000 		.4byte	0x83
 2754 0128 0B       		.uleb128 0xb
 2755 0129 17010000 		.4byte	.LASF24
 2756 012d 01       		.byte	0x1
 2757 012e B8       		.byte	0xb8
 2758 012f 83000000 		.4byte	0x83
 2759 0133 0B       		.uleb128 0xb
 2760 0134 EF060000 		.4byte	.LASF25
 2761 0138 01       		.byte	0x1
 2762 0139 B9       		.byte	0xb9
 2763 013a C1000000 		.4byte	0xc1
 2764 013e 00       		.byte	0
 2765 013f 0C       		.uleb128 0xc
 2766 0140 E5010000 		.4byte	.LASF28
 2767 0144 01       		.byte	0x1
 2768 0145 8608     		.2byte	0x886
 2769 0147 01       		.byte	0x1
 2770 0148 0D       		.uleb128 0xd
 2771 0149 5E030000 		.4byte	.LASF27
 2772 014d 01       		.byte	0x1
 2773 014e 010B     		.2byte	0xb01
 2774 0150 01       		.byte	0x1
 2775 0151 62010000 		.4byte	0x162
 2776 0155 0E       		.uleb128 0xe
 2777 0156 6B020000 		.4byte	.LASF31
 2778 015a 01       		.byte	0x1
 2779 015b 010B     		.2byte	0xb01
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 109


 2780 015d 83000000 		.4byte	0x83
 2781 0161 00       		.byte	0
 2782 0162 0F       		.uleb128 0xf
 2783 0163 53060000 		.4byte	.LASF123
 2784 0167 01       		.byte	0x1
 2785 0168 860B     		.2byte	0xb86
 2786 016a 01       		.byte	0x1
 2787 016b 7A010000 		.4byte	0x17a
 2788 016f 10       		.uleb128 0x10
 2789 0170 6900     		.ascii	"i\000"
 2790 0172 01       		.byte	0x1
 2791 0173 880B     		.2byte	0xb88
 2792 0175 83000000 		.4byte	0x83
 2793 0179 00       		.byte	0
 2794 017a 0C       		.uleb128 0xc
 2795 017b A8020000 		.4byte	.LASF29
 2796 017f 01       		.byte	0x1
 2797 0180 3E0B     		.2byte	0xb3e
 2798 0182 01       		.byte	0x1
 2799 0183 0D       		.uleb128 0xd
 2800 0184 F7070000 		.4byte	.LASF30
 2801 0188 01       		.byte	0x1
 2802 0189 C10A     		.2byte	0xac1
 2803 018b 01       		.byte	0x1
 2804 018c 9D010000 		.4byte	0x19d
 2805 0190 0E       		.uleb128 0xe
 2806 0191 65020000 		.4byte	.LASF32
 2807 0195 01       		.byte	0x1
 2808 0196 C10A     		.2byte	0xac1
 2809 0198 83000000 		.4byte	0x83
 2810 019c 00       		.byte	0
 2811 019d 11       		.uleb128 0x11
 2812 019e C9030000 		.4byte	.LASF124
 2813 01a2 01       		.byte	0x1
 2814 01a3 E708     		.2byte	0x8e7
 2815 01a5 C6000000 		.4byte	0xc6
 2816 01a9 01       		.byte	0x1
 2817 01aa DF010000 		.4byte	0x1df
 2818 01ae 0E       		.uleb128 0xe
 2819 01af 85030000 		.4byte	.LASF33
 2820 01b3 01       		.byte	0x1
 2821 01b4 E708     		.2byte	0x8e7
 2822 01b6 6B000000 		.4byte	0x6b
 2823 01ba 0E       		.uleb128 0xe
 2824 01bb 7A040000 		.4byte	.LASF34
 2825 01bf 01       		.byte	0x1
 2826 01c0 E708     		.2byte	0x8e7
 2827 01c2 C6000000 		.4byte	0xc6
 2828 01c6 12       		.uleb128 0x12
 2829 01c7 4B000000 		.4byte	.LASF35
 2830 01cb 01       		.byte	0x1
 2831 01cc E908     		.2byte	0x8e9
 2832 01ce C6000000 		.4byte	0xc6
 2833 01d2 12       		.uleb128 0x12
 2834 01d3 00000000 		.4byte	.LASF36
 2835 01d7 01       		.byte	0x1
 2836 01d8 EA08     		.2byte	0x8ea
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 110


 2837 01da DF010000 		.4byte	0x1df
 2838 01de 00       		.byte	0
 2839 01df 06       		.uleb128 0x6
 2840 01e0 04       		.byte	0x4
 2841 01e1 C6000000 		.4byte	0xc6
 2842 01e5 13       		.uleb128 0x13
 2843 01e6 9B070000 		.4byte	.LASF37
 2844 01ea 01       		.byte	0x1
 2845 01eb 6B       		.byte	0x6b
 2846 01ec 00000000 		.4byte	.LFB1
 2847 01f0 14000000 		.4byte	.LFE1-.LFB1
 2848 01f4 01       		.uleb128 0x1
 2849 01f5 9C       		.byte	0x9c
 2850 01f6 14       		.uleb128 0x14
 2851 01f7 DB030000 		.4byte	.LASF38
 2852 01fb 01       		.byte	0x1
 2853 01fc 1D01     		.2byte	0x11d
 2854 01fe 00000000 		.4byte	.LFB4
 2855 0202 14000000 		.4byte	.LFE4-.LFB4
 2856 0206 01       		.uleb128 0x1
 2857 0207 9C       		.byte	0x9c
 2858 0208 15       		.uleb128 0x15
 2859 0209 E4020000 		.4byte	.LASF39
 2860 020d 01       		.byte	0x1
 2861 020e 8B       		.byte	0x8b
 2862 020f 00000000 		.4byte	.LFB2
 2863 0213 18000000 		.4byte	.LFE2-.LFB2
 2864 0217 01       		.uleb128 0x1
 2865 0218 9C       		.byte	0x9c
 2866 0219 27020000 		.4byte	0x227
 2867 021d 16       		.uleb128 0x16
 2868 021e 06000000 		.4byte	.LVL0
 2869 0222 F6010000 		.4byte	0x1f6
 2870 0226 00       		.byte	0
 2871 0227 17       		.uleb128 0x17
 2872 0228 32010000 		.4byte	.LASF49
 2873 022c 01       		.byte	0x1
 2874 022d 3001     		.2byte	0x130
 2875 022f 83000000 		.4byte	0x83
 2876 0233 00000000 		.4byte	.LFB5
 2877 0237 10000000 		.4byte	.LFE5-.LFB5
 2878 023b 01       		.uleb128 0x1
 2879 023c 9C       		.byte	0x9c
 2880 023d 18       		.uleb128 0x18
 2881 023e 1F000000 		.4byte	.LASF40
 2882 0242 01       		.byte	0x1
 2883 0243 AD01     		.2byte	0x1ad
 2884 0245 00000000 		.4byte	.LFB6
 2885 0249 20000000 		.4byte	.LFE6-.LFB6
 2886 024d 01       		.uleb128 0x1
 2887 024e 9C       		.byte	0x9c
 2888 024f 96020000 		.4byte	0x296
 2889 0253 19       		.uleb128 0x19
 2890 0254 3F060000 		.4byte	.LASF43
 2891 0258 01       		.byte	0x1
 2892 0259 AD01     		.2byte	0x1ad
 2893 025b 83000000 		.4byte	0x83
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 111


 2894 025f 00000000 		.4byte	.LLST0
 2895 0263 1A       		.uleb128 0x1a
 2896 0264 08010000 		.4byte	.LASF22
 2897 0268 01       		.byte	0x1
 2898 0269 AF01     		.2byte	0x1af
 2899 026b 6B000000 		.4byte	0x6b
 2900 026f 2C000000 		.4byte	.LLST1
 2901 0273 1A       		.uleb128 0x1a
 2902 0274 F0070000 		.4byte	.LASF41
 2903 0278 01       		.byte	0x1
 2904 0279 B001     		.2byte	0x1b0
 2905 027b 83000000 		.4byte	0x83
 2906 027f 3F000000 		.4byte	.LLST2
 2907 0283 16       		.uleb128 0x16
 2908 0284 08000000 		.4byte	.LVL2
 2909 0288 A00D0000 		.4byte	0xda0
 2910 028c 16       		.uleb128 0x16
 2911 028d 1A000000 		.4byte	.LVL5
 2912 0291 AB0D0000 		.4byte	0xdab
 2913 0295 00       		.byte	0
 2914 0296 18       		.uleb128 0x18
 2915 0297 70010000 		.4byte	.LASF42
 2916 029b 01       		.byte	0x1
 2917 029c D901     		.2byte	0x1d9
 2918 029e 00000000 		.4byte	.LFB7
 2919 02a2 34000000 		.4byte	.LFE7-.LFB7
 2920 02a6 01       		.uleb128 0x1
 2921 02a7 9C       		.byte	0x9c
 2922 02a8 BB020000 		.4byte	0x2bb
 2923 02ac 1B       		.uleb128 0x1b
 2924 02ad 9A010000 		.4byte	.LASF44
 2925 02b1 01       		.byte	0x1
 2926 02b2 D901     		.2byte	0x1d9
 2927 02b4 83000000 		.4byte	0x83
 2928 02b8 01       		.uleb128 0x1
 2929 02b9 50       		.byte	0x50
 2930 02ba 00       		.byte	0
 2931 02bb 1C       		.uleb128 0x1c
 2932 02bc 08020000 		.4byte	.LASF51
 2933 02c0 01       		.byte	0x1
 2934 02c1 FE01     		.2byte	0x1fe
 2935 02c3 83000000 		.4byte	0x83
 2936 02c7 00000000 		.4byte	.LFB8
 2937 02cb 18000000 		.4byte	.LFE8-.LFB8
 2938 02cf 01       		.uleb128 0x1
 2939 02d0 9C       		.byte	0x9c
 2940 02d1 08030000 		.4byte	0x308
 2941 02d5 1A       		.uleb128 0x1a
 2942 02d6 08010000 		.4byte	.LASF22
 2943 02da 01       		.byte	0x1
 2944 02db 0002     		.2byte	0x200
 2945 02dd 6B000000 		.4byte	0x6b
 2946 02e1 5D000000 		.4byte	.LLST3
 2947 02e5 1A       		.uleb128 0x1a
 2948 02e6 10050000 		.4byte	.LASF45
 2949 02ea 01       		.byte	0x1
 2950 02eb 0102     		.2byte	0x201
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 112


 2951 02ed 83000000 		.4byte	0x83
 2952 02f1 70000000 		.4byte	.LLST4
 2953 02f5 16       		.uleb128 0x16
 2954 02f6 06000000 		.4byte	.LVL8
 2955 02fa A00D0000 		.4byte	0xda0
 2956 02fe 16       		.uleb128 0x16
 2957 02ff 0E000000 		.4byte	.LVL10
 2958 0303 AB0D0000 		.4byte	0xdab
 2959 0307 00       		.byte	0
 2960 0308 18       		.uleb128 0x18
 2961 0309 A7060000 		.4byte	.LASF46
 2962 030d 01       		.byte	0x1
 2963 030e 3502     		.2byte	0x235
 2964 0310 00000000 		.4byte	.LFB9
 2965 0314 2C000000 		.4byte	.LFE9-.LFB9
 2966 0318 01       		.uleb128 0x1
 2967 0319 9C       		.byte	0x9c
 2968 031a 51030000 		.4byte	0x351
 2969 031e 19       		.uleb128 0x19
 2970 031f 93070000 		.4byte	.LASF47
 2971 0323 01       		.byte	0x1
 2972 0324 3502     		.2byte	0x235
 2973 0326 83000000 		.4byte	0x83
 2974 032a 92000000 		.4byte	.LLST5
 2975 032e 1A       		.uleb128 0x1a
 2976 032f 08010000 		.4byte	.LASF22
 2977 0333 01       		.byte	0x1
 2978 0334 3702     		.2byte	0x237
 2979 0336 6B000000 		.4byte	0x6b
 2980 033a BE000000 		.4byte	.LLST6
 2981 033e 16       		.uleb128 0x16
 2982 033f 08000000 		.4byte	.LVL13
 2983 0343 A00D0000 		.4byte	0xda0
 2984 0347 16       		.uleb128 0x16
 2985 0348 22000000 		.4byte	.LVL15
 2986 034c AB0D0000 		.4byte	0xdab
 2987 0350 00       		.byte	0
 2988 0351 14       		.uleb128 0x14
 2989 0352 35070000 		.4byte	.LASF48
 2990 0356 01       		.byte	0x1
 2991 0357 6408     		.2byte	0x864
 2992 0359 00000000 		.4byte	.LFB12
 2993 035d 20000000 		.4byte	.LFE12-.LFB12
 2994 0361 01       		.uleb128 0x1
 2995 0362 9C       		.byte	0x9c
 2996 0363 17       		.uleb128 0x17
 2997 0364 C9020000 		.4byte	.LASF50
 2998 0368 01       		.byte	0x1
 2999 0369 7608     		.2byte	0x876
 3000 036b 83000000 		.4byte	0x83
 3001 036f 00000000 		.4byte	.LFB13
 3002 0373 10000000 		.4byte	.LFE13-.LFB13
 3003 0377 01       		.uleb128 0x1
 3004 0378 9C       		.byte	0x9c
 3005 0379 1D       		.uleb128 0x1d
 3006 037a 3F010000 		.4byte	0x13f
 3007 037e 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 113


 3008 0382 0C000000 		.4byte	.LFE14-.LFB14
 3009 0386 01       		.uleb128 0x1
 3010 0387 9C       		.byte	0x9c
 3011 0388 1C       		.uleb128 0x1c
 3012 0389 30030000 		.4byte	.LASF52
 3013 038d 01       		.byte	0x1
 3014 038e A008     		.2byte	0x8a0
 3015 0390 83000000 		.4byte	0x83
 3016 0394 00000000 		.4byte	.LFB15
 3017 0398 14000000 		.4byte	.LFE15-.LFB15
 3018 039c 01       		.uleb128 0x1
 3019 039d 9C       		.byte	0x9c
 3020 039e C3030000 		.4byte	0x3c3
 3021 03a2 19       		.uleb128 0x19
 3022 03a3 10060000 		.4byte	.LASF53
 3023 03a7 01       		.byte	0x1
 3024 03a8 A008     		.2byte	0x8a0
 3025 03aa 83000000 		.4byte	0x83
 3026 03ae D1000000 		.4byte	.LLST7
 3027 03b2 1A       		.uleb128 0x1a
 3028 03b3 0A040000 		.4byte	.LASF54
 3029 03b7 01       		.byte	0x1
 3030 03b8 A208     		.2byte	0x8a2
 3031 03ba 83000000 		.4byte	0x83
 3032 03be EF000000 		.4byte	.LLST8
 3033 03c2 00       		.byte	0
 3034 03c3 1C       		.uleb128 0x1c
 3035 03c4 59000000 		.4byte	.LASF55
 3036 03c8 01       		.byte	0x1
 3037 03c9 B708     		.2byte	0x8b7
 3038 03cb 83000000 		.4byte	0x83
 3039 03cf 00000000 		.4byte	.LFB16
 3040 03d3 10000000 		.4byte	.LFE16-.LFB16
 3041 03d7 01       		.uleb128 0x1
 3042 03d8 9C       		.byte	0x9c
 3043 03d9 EC030000 		.4byte	0x3ec
 3044 03dd 1E       		.uleb128 0x1e
 3045 03de 16000000 		.4byte	.LASF56
 3046 03e2 01       		.byte	0x1
 3047 03e3 B908     		.2byte	0x8b9
 3048 03e5 83000000 		.4byte	0x83
 3049 03e9 01       		.uleb128 0x1
 3050 03ea 50       		.byte	0x50
 3051 03eb 00       		.byte	0
 3052 03ec 18       		.uleb128 0x18
 3053 03ed 89000000 		.4byte	.LASF57
 3054 03f1 01       		.byte	0x1
 3055 03f2 CE08     		.2byte	0x8ce
 3056 03f4 00000000 		.4byte	.LFB17
 3057 03f8 0C000000 		.4byte	.LFE17-.LFB17
 3058 03fc 01       		.uleb128 0x1
 3059 03fd 9C       		.byte	0x9c
 3060 03fe 11040000 		.4byte	0x411
 3061 0402 1B       		.uleb128 0x1b
 3062 0403 03020000 		.4byte	.LASF58
 3063 0407 01       		.byte	0x1
 3064 0408 CE08     		.2byte	0x8ce
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 114


 3065 040a 83000000 		.4byte	0x83
 3066 040e 01       		.uleb128 0x1
 3067 040f 50       		.byte	0x50
 3068 0410 00       		.byte	0
 3069 0411 1F       		.uleb128 0x1f
 3070 0412 9D010000 		.4byte	0x19d
 3071 0416 00000000 		.4byte	.LFB18
 3072 041a 0E000000 		.4byte	.LFE18-.LFB18
 3073 041e 01       		.uleb128 0x1
 3074 041f 9C       		.byte	0x9c
 3075 0420 45040000 		.4byte	0x445
 3076 0424 20       		.uleb128 0x20
 3077 0425 AE010000 		.4byte	0x1ae
 3078 0429 11010000 		.4byte	.LLST9
 3079 042d 21       		.uleb128 0x21
 3080 042e BA010000 		.4byte	0x1ba
 3081 0432 01       		.uleb128 0x1
 3082 0433 51       		.byte	0x51
 3083 0434 22       		.uleb128 0x22
 3084 0435 C6010000 		.4byte	0x1c6
 3085 0439 01       		.uleb128 0x1
 3086 043a 50       		.byte	0x50
 3087 043b 23       		.uleb128 0x23
 3088 043c D2010000 		.4byte	0x1d2
 3089 0440 00000020 		.4byte	0x20000000
 3090 0444 00       		.byte	0
 3091 0445 1C       		.uleb128 0x1c
 3092 0446 2D060000 		.4byte	.LASF59
 3093 044a 01       		.byte	0x1
 3094 044b 0909     		.2byte	0x909
 3095 044d C6000000 		.4byte	0xc6
 3096 0451 00000000 		.4byte	.LFB19
 3097 0455 0C000000 		.4byte	.LFE19-.LFB19
 3098 0459 01       		.uleb128 0x1
 3099 045a 9C       		.byte	0x9c
 3100 045b 80040000 		.4byte	0x480
 3101 045f 19       		.uleb128 0x19
 3102 0460 85030000 		.4byte	.LASF33
 3103 0464 01       		.byte	0x1
 3104 0465 0909     		.2byte	0x909
 3105 0467 6B000000 		.4byte	0x6b
 3106 046b 32010000 		.4byte	.LLST10
 3107 046f 24       		.uleb128 0x24
 3108 0470 00000000 		.4byte	.LASF36
 3109 0474 01       		.byte	0x1
 3110 0475 0B09     		.2byte	0x90b
 3111 0477 DF010000 		.4byte	0x1df
 3112 047b 00000020 		.4byte	0x20000000
 3113 047f 00       		.byte	0
 3114 0480 1C       		.uleb128 0x1c
 3115 0481 76030000 		.4byte	.LASF60
 3116 0485 01       		.byte	0x1
 3117 0486 1F09     		.2byte	0x91f
 3118 0488 C6000000 		.4byte	0xc6
 3119 048c 00000000 		.4byte	.LFB20
 3120 0490 10000000 		.4byte	.LFE20-.LFB20
 3121 0494 01       		.uleb128 0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 115


 3122 0495 9C       		.byte	0x9c
 3123 0496 D7040000 		.4byte	0x4d7
 3124 049a 19       		.uleb128 0x19
 3125 049b 85030000 		.4byte	.LASF33
 3126 049f 01       		.byte	0x1
 3127 04a0 1F09     		.2byte	0x91f
 3128 04a2 6B000000 		.4byte	0x6b
 3129 04a6 53010000 		.4byte	.LLST11
 3130 04aa 1B       		.uleb128 0x1b
 3131 04ab 7A040000 		.4byte	.LASF34
 3132 04af 01       		.byte	0x1
 3133 04b0 1F09     		.2byte	0x91f
 3134 04b2 C6000000 		.4byte	0xc6
 3135 04b6 01       		.uleb128 0x1
 3136 04b7 51       		.byte	0x51
 3137 04b8 1E       		.uleb128 0x1e
 3138 04b9 4B000000 		.4byte	.LASF35
 3139 04bd 01       		.byte	0x1
 3140 04be 2109     		.2byte	0x921
 3141 04c0 C6000000 		.4byte	0xc6
 3142 04c4 01       		.uleb128 0x1
 3143 04c5 50       		.byte	0x50
 3144 04c6 24       		.uleb128 0x24
 3145 04c7 00000000 		.4byte	.LASF36
 3146 04cb 01       		.byte	0x1
 3147 04cc 2209     		.2byte	0x922
 3148 04ce DF010000 		.4byte	0x1df
 3149 04d2 00000020 		.4byte	0x20000000
 3150 04d6 00       		.byte	0
 3151 04d7 1C       		.uleb128 0x1c
 3152 04d8 A5050000 		.4byte	.LASF61
 3153 04dc 01       		.byte	0x1
 3154 04dd 3B09     		.2byte	0x93b
 3155 04df C6000000 		.4byte	0xc6
 3156 04e3 00000000 		.4byte	.LFB21
 3157 04e7 10000000 		.4byte	.LFE21-.LFB21
 3158 04eb 01       		.uleb128 0x1
 3159 04ec 9C       		.byte	0x9c
 3160 04ed 12050000 		.4byte	0x512
 3161 04f1 19       		.uleb128 0x19
 3162 04f2 85030000 		.4byte	.LASF33
 3163 04f6 01       		.byte	0x1
 3164 04f7 3B09     		.2byte	0x93b
 3165 04f9 6B000000 		.4byte	0x6b
 3166 04fd 74010000 		.4byte	.LLST12
 3167 0501 24       		.uleb128 0x24
 3168 0502 00000000 		.4byte	.LASF36
 3169 0506 01       		.byte	0x1
 3170 0507 3D09     		.2byte	0x93d
 3171 0509 DF010000 		.4byte	0x1df
 3172 050d 00000020 		.4byte	0x20000000
 3173 0511 00       		.byte	0
 3174 0512 18       		.uleb128 0x18
 3175 0513 57050000 		.4byte	.LASF62
 3176 0517 01       		.byte	0x1
 3177 0518 4E09     		.2byte	0x94e
 3178 051a 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 116


 3179 051e 34000000 		.4byte	.LFE22-.LFB22
 3180 0522 01       		.uleb128 0x1
 3181 0523 9C       		.byte	0x9c
 3182 0524 8B050000 		.4byte	0x58b
 3183 0528 19       		.uleb128 0x19
 3184 0529 85030000 		.4byte	.LASF33
 3185 052d 01       		.byte	0x1
 3186 052e 4E09     		.2byte	0x94e
 3187 0530 6B000000 		.4byte	0x6b
 3188 0534 95010000 		.4byte	.LLST13
 3189 0538 19       		.uleb128 0x19
 3190 0539 8C030000 		.4byte	.LASF63
 3191 053d 01       		.byte	0x1
 3192 053e 4E09     		.2byte	0x94e
 3193 0540 6B000000 		.4byte	0x6b
 3194 0544 B6010000 		.4byte	.LLST14
 3195 0548 1A       		.uleb128 0x1a
 3196 0549 08010000 		.4byte	.LASF22
 3197 054d 01       		.byte	0x1
 3198 054e 5009     		.2byte	0x950
 3199 0550 6B000000 		.4byte	0x6b
 3200 0554 D7010000 		.4byte	.LLST15
 3201 0558 1A       		.uleb128 0x1a
 3202 0559 A8010000 		.4byte	.LASF64
 3203 055d 01       		.byte	0x1
 3204 055e 5109     		.2byte	0x951
 3205 0560 83000000 		.4byte	0x83
 3206 0564 EA010000 		.4byte	.LLST16
 3207 0568 1A       		.uleb128 0x1a
 3208 0569 65020000 		.4byte	.LASF32
 3209 056d 01       		.byte	0x1
 3210 056e 5209     		.2byte	0x952
 3211 0570 83000000 		.4byte	0x83
 3212 0574 FD010000 		.4byte	.LLST17
 3213 0578 16       		.uleb128 0x16
 3214 0579 18000000 		.4byte	.LVL34
 3215 057d A00D0000 		.4byte	0xda0
 3216 0581 16       		.uleb128 0x16
 3217 0582 2C000000 		.4byte	.LVL38
 3218 0586 AB0D0000 		.4byte	0xdab
 3219 058a 00       		.byte	0
 3220 058b 1C       		.uleb128 0x1c
 3221 058c 39020000 		.4byte	.LASF65
 3222 0590 01       		.byte	0x1
 3223 0591 7009     		.2byte	0x970
 3224 0593 6B000000 		.4byte	0x6b
 3225 0597 00000000 		.4byte	.LFB23
 3226 059b 20000000 		.4byte	.LFE23-.LFB23
 3227 059f 01       		.uleb128 0x1
 3228 05a0 9C       		.byte	0x9c
 3229 05a1 C6050000 		.4byte	0x5c6
 3230 05a5 19       		.uleb128 0x19
 3231 05a6 85030000 		.4byte	.LASF33
 3232 05aa 01       		.byte	0x1
 3233 05ab 7009     		.2byte	0x970
 3234 05ad 6B000000 		.4byte	0x6b
 3235 05b1 1B020000 		.4byte	.LLST18
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 117


 3236 05b5 1A       		.uleb128 0x1a
 3237 05b6 8C030000 		.4byte	.LASF63
 3238 05ba 01       		.byte	0x1
 3239 05bb 7209     		.2byte	0x972
 3240 05bd 6B000000 		.4byte	0x6b
 3241 05c1 3C020000 		.4byte	.LLST19
 3242 05c5 00       		.byte	0
 3243 05c6 18       		.uleb128 0x18
 3244 05c7 21060000 		.4byte	.LASF66
 3245 05cb 01       		.byte	0x1
 3246 05cc 8509     		.2byte	0x985
 3247 05ce 00000000 		.4byte	.LFB24
 3248 05d2 14000000 		.4byte	.LFE24-.LFB24
 3249 05d6 01       		.uleb128 0x1
 3250 05d7 9C       		.byte	0x9c
 3251 05d8 ED050000 		.4byte	0x5ed
 3252 05dc 19       		.uleb128 0x19
 3253 05dd 85030000 		.4byte	.LASF33
 3254 05e1 01       		.byte	0x1
 3255 05e2 8509     		.2byte	0x985
 3256 05e4 6B000000 		.4byte	0x6b
 3257 05e8 5D020000 		.4byte	.LLST20
 3258 05ec 00       		.byte	0
 3259 05ed 1C       		.uleb128 0x1c
 3260 05ee CF000000 		.4byte	.LASF67
 3261 05f2 01       		.byte	0x1
 3262 05f3 9709     		.2byte	0x997
 3263 05f5 6B000000 		.4byte	0x6b
 3264 05f9 00000000 		.4byte	.LFB25
 3265 05fd 18000000 		.4byte	.LFE25-.LFB25
 3266 0601 01       		.uleb128 0x1
 3267 0602 9C       		.byte	0x9c
 3268 0603 18060000 		.4byte	0x618
 3269 0607 19       		.uleb128 0x19
 3270 0608 85030000 		.4byte	.LASF33
 3271 060c 01       		.byte	0x1
 3272 060d 9709     		.2byte	0x997
 3273 060f 6B000000 		.4byte	0x6b
 3274 0613 7E020000 		.4byte	.LLST21
 3275 0617 00       		.byte	0
 3276 0618 18       		.uleb128 0x18
 3277 0619 59010000 		.4byte	.LASF68
 3278 061d 01       		.byte	0x1
 3279 061e A709     		.2byte	0x9a7
 3280 0620 00000000 		.4byte	.LFB26
 3281 0624 14000000 		.4byte	.LFE26-.LFB26
 3282 0628 01       		.uleb128 0x1
 3283 0629 9C       		.byte	0x9c
 3284 062a 3F060000 		.4byte	0x63f
 3285 062e 19       		.uleb128 0x19
 3286 062f 85030000 		.4byte	.LASF33
 3287 0633 01       		.byte	0x1
 3288 0634 A709     		.2byte	0x9a7
 3289 0636 6B000000 		.4byte	0x6b
 3290 063a 9F020000 		.4byte	.LLST22
 3291 063e 00       		.byte	0
 3292 063f 18       		.uleb128 0x18
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 118


 3293 0640 0B030000 		.4byte	.LASF69
 3294 0644 01       		.byte	0x1
 3295 0645 B509     		.2byte	0x9b5
 3296 0647 00000000 		.4byte	.LFB27
 3297 064b 14000000 		.4byte	.LFE27-.LFB27
 3298 064f 01       		.uleb128 0x1
 3299 0650 9C       		.byte	0x9c
 3300 0651 66060000 		.4byte	0x666
 3301 0655 19       		.uleb128 0x19
 3302 0656 85030000 		.4byte	.LASF33
 3303 065a 01       		.byte	0x1
 3304 065b B509     		.2byte	0x9b5
 3305 065d 6B000000 		.4byte	0x6b
 3306 0661 C0020000 		.4byte	.LLST23
 3307 0665 00       		.byte	0
 3308 0666 18       		.uleb128 0x18
 3309 0667 5C040000 		.4byte	.LASF70
 3310 066b 01       		.byte	0x1
 3311 066c C409     		.2byte	0x9c4
 3312 066e 00000000 		.4byte	.LFB28
 3313 0672 14000000 		.4byte	.LFE28-.LFB28
 3314 0676 01       		.uleb128 0x1
 3315 0677 9C       		.byte	0x9c
 3316 0678 8D060000 		.4byte	0x68d
 3317 067c 19       		.uleb128 0x19
 3318 067d 85030000 		.4byte	.LASF33
 3319 0681 01       		.byte	0x1
 3320 0682 C409     		.2byte	0x9c4
 3321 0684 6B000000 		.4byte	0x6b
 3322 0688 E1020000 		.4byte	.LLST24
 3323 068c 00       		.byte	0
 3324 068d 18       		.uleb128 0x18
 3325 068e DE050000 		.4byte	.LASF71
 3326 0692 01       		.byte	0x1
 3327 0693 D309     		.2byte	0x9d3
 3328 0695 00000000 		.4byte	.LFB29
 3329 0699 04000000 		.4byte	.LFE29-.LFB29
 3330 069d 01       		.uleb128 0x1
 3331 069e 9C       		.byte	0x9c
 3332 069f B2060000 		.4byte	0x6b2
 3333 06a3 1B       		.uleb128 0x1b
 3334 06a4 10060000 		.4byte	.LASF53
 3335 06a8 01       		.byte	0x1
 3336 06a9 D309     		.2byte	0x9d3
 3337 06ab 6B000000 		.4byte	0x6b
 3338 06af 01       		.uleb128 0x1
 3339 06b0 50       		.byte	0x50
 3340 06b1 00       		.byte	0
 3341 06b2 14       		.uleb128 0x14
 3342 06b3 A6000000 		.4byte	.LASF72
 3343 06b7 01       		.byte	0x1
 3344 06b8 EB09     		.2byte	0x9eb
 3345 06ba 00000000 		.4byte	.LFB30
 3346 06be 18000000 		.4byte	.LFE30-.LFB30
 3347 06c2 01       		.uleb128 0x1
 3348 06c3 9C       		.byte	0x9c
 3349 06c4 18       		.uleb128 0x18
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 119


 3350 06c5 FB060000 		.4byte	.LASF73
 3351 06c9 01       		.byte	0x1
 3352 06ca FF09     		.2byte	0x9ff
 3353 06cc 00000000 		.4byte	.LFB31
 3354 06d0 2C000000 		.4byte	.LFE31-.LFB31
 3355 06d4 01       		.uleb128 0x1
 3356 06d5 9C       		.byte	0x9c
 3357 06d6 FD060000 		.4byte	0x6fd
 3358 06da 19       		.uleb128 0x19
 3359 06db B4050000 		.4byte	.LASF74
 3360 06df 01       		.byte	0x1
 3361 06e0 FF09     		.2byte	0x9ff
 3362 06e2 83000000 		.4byte	0x83
 3363 06e6 02030000 		.4byte	.LLST25
 3364 06ea 16       		.uleb128 0x16
 3365 06eb 14000000 		.4byte	.LVL58
 3366 06ef B60D0000 		.4byte	0xdb6
 3367 06f3 16       		.uleb128 0x16
 3368 06f4 22000000 		.4byte	.LVL60
 3369 06f8 B60D0000 		.4byte	0xdb6
 3370 06fc 00       		.byte	0
 3371 06fd 1F       		.uleb128 0x1f
 3372 06fe F2000000 		.4byte	0xf2
 3373 0702 00000000 		.4byte	.LFB3
 3374 0706 D4000000 		.4byte	.LFE3-.LFB3
 3375 070a 01       		.uleb128 0x1
 3376 070b 9C       		.byte	0x9c
 3377 070c BC070000 		.4byte	0x7bc
 3378 0710 25       		.uleb128 0x25
 3379 0711 FE000000 		.4byte	0xfe
 3380 0715 25       		.uleb128 0x25
 3381 0716 07010000 		.4byte	0x107
 3382 071a 25       		.uleb128 0x25
 3383 071b 12010000 		.4byte	0x112
 3384 071f 25       		.uleb128 0x25
 3385 0720 1D010000 		.4byte	0x11d
 3386 0724 26       		.uleb128 0x26
 3387 0725 28010000 		.4byte	0x128
 3388 0729 00       		.byte	0
 3389 072a 25       		.uleb128 0x25
 3390 072b 33010000 		.4byte	0x133
 3391 072f 27       		.uleb128 0x27
 3392 0730 0A000000 		.4byte	.LBB15
 3393 0734 A0000000 		.4byte	.LBE15-.LBB15
 3394 0738 B2070000 		.4byte	0x7b2
 3395 073c 28       		.uleb128 0x28
 3396 073d FE000000 		.4byte	0xfe
 3397 0741 20030000 		.4byte	.LLST26
 3398 0745 28       		.uleb128 0x28
 3399 0746 07010000 		.4byte	0x107
 3400 074a 57030000 		.4byte	.LLST27
 3401 074e 28       		.uleb128 0x28
 3402 074f 12010000 		.4byte	0x112
 3403 0753 9E030000 		.4byte	.LLST28
 3404 0757 28       		.uleb128 0x28
 3405 0758 1D010000 		.4byte	0x11d
 3406 075c B1030000 		.4byte	.LLST29
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 120


 3407 0760 28       		.uleb128 0x28
 3408 0761 28010000 		.4byte	0x128
 3409 0765 EC030000 		.4byte	.LLST30
 3410 0769 22       		.uleb128 0x22
 3411 076a 33010000 		.4byte	0x133
 3412 076e 02       		.uleb128 0x2
 3413 076f 91       		.byte	0x91
 3414 0770 64       		.sleb128 -28
 3415 0771 16       		.uleb128 0x16
 3416 0772 0E000000 		.4byte	.LVL64
 3417 0776 A00D0000 		.4byte	0xda0
 3418 077a 29       		.uleb128 0x29
 3419 077b 8E000000 		.4byte	.LVL80
 3420 077f C10D0000 		.4byte	0xdc1
 3421 0783 8E070000 		.4byte	0x78e
 3422 0787 2A       		.uleb128 0x2a
 3423 0788 01       		.uleb128 0x1
 3424 0789 50       		.byte	0x50
 3425 078a 02       		.uleb128 0x2
 3426 078b 08       		.byte	0x8
 3427 078c 30       		.byte	0x30
 3428 078d 00       		.byte	0
 3429 078e 29       		.uleb128 0x29
 3430 078f A0000000 		.4byte	.LVL81
 3431 0793 C4060000 		.4byte	0x6c4
 3432 0797 A1070000 		.4byte	0x7a1
 3433 079b 2A       		.uleb128 0x2a
 3434 079c 01       		.uleb128 0x1
 3435 079d 50       		.byte	0x50
 3436 079e 01       		.uleb128 0x1
 3437 079f 44       		.byte	0x44
 3438 07a0 00       		.byte	0
 3439 07a1 2B       		.uleb128 0x2b
 3440 07a2 AA000000 		.4byte	.LVL82
 3441 07a6 AB0D0000 		.4byte	0xdab
 3442 07aa 2A       		.uleb128 0x2a
 3443 07ab 01       		.uleb128 0x1
 3444 07ac 50       		.byte	0x50
 3445 07ad 02       		.uleb128 0x2
 3446 07ae 74       		.byte	0x74
 3447 07af 00       		.sleb128 0
 3448 07b0 00       		.byte	0
 3449 07b1 00       		.byte	0
 3450 07b2 16       		.uleb128 0x16
 3451 07b3 06000000 		.4byte	.LVL63
 3452 07b7 CC0D0000 		.4byte	0xdcc
 3453 07bb 00       		.byte	0
 3454 07bc 18       		.uleb128 0x18
 3455 07bd 95030000 		.4byte	.LASF75
 3456 07c1 01       		.byte	0x1
 3457 07c2 6F02     		.2byte	0x26f
 3458 07c4 00000000 		.4byte	.LFB10
 3459 07c8 80000000 		.4byte	.LFE10-.LFB10
 3460 07cc 01       		.uleb128 0x1
 3461 07cd 9C       		.byte	0x9c
 3462 07ce 55080000 		.4byte	0x855
 3463 07d2 19       		.uleb128 0x19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 121


 3464 07d3 F7000000 		.4byte	.LASF21
 3465 07d7 01       		.byte	0x1
 3466 07d8 6F02     		.2byte	0x26f
 3467 07da 83000000 		.4byte	0x83
 3468 07de 17040000 		.4byte	.LLST31
 3469 07e2 1E       		.uleb128 0x1e
 3470 07e3 7E000000 		.4byte	.LASF76
 3471 07e7 01       		.byte	0x1
 3472 07e8 7202     		.2byte	0x272
 3473 07ea 65080000 		.4byte	0x865
 3474 07ee 02       		.uleb128 0x2
 3475 07ef 91       		.byte	0x91
 3476 07f0 58       		.sleb128 -40
 3477 07f1 1E       		.uleb128 0x1e
 3478 07f2 66010000 		.4byte	.LASF77
 3479 07f6 01       		.byte	0x1
 3480 07f7 7302     		.2byte	0x273
 3481 07f9 7A080000 		.4byte	0x87a
 3482 07fd 02       		.uleb128 0x2
 3483 07fe 91       		.byte	0x91
 3484 07ff 60       		.sleb128 -32
 3485 0800 1A       		.uleb128 0x1a
 3486 0801 48010000 		.4byte	.LASF78
 3487 0805 01       		.byte	0x1
 3488 0806 7D02     		.2byte	0x27d
 3489 0808 83000000 		.4byte	0x83
 3490 080c 43040000 		.4byte	.LLST32
 3491 0810 1A       		.uleb128 0x1a
 3492 0811 08010000 		.4byte	.LASF22
 3493 0815 01       		.byte	0x1
 3494 0816 8402     		.2byte	0x284
 3495 0818 6B000000 		.4byte	0x6b
 3496 081c 6E040000 		.4byte	.LLST33
 3497 0820 16       		.uleb128 0x16
 3498 0821 0A000000 		.4byte	.LVL84
 3499 0825 A00D0000 		.4byte	0xda0
 3500 0829 16       		.uleb128 0x16
 3501 082a 10000000 		.4byte	.LVL86
 3502 082e 27020000 		.4byte	0x227
 3503 0832 16       		.uleb128 0x16
 3504 0833 1A000000 		.4byte	.LVL88
 3505 0837 F6010000 		.4byte	0x1f6
 3506 083b 16       		.uleb128 0x16
 3507 083c 56000000 		.4byte	.LVL91
 3508 0840 F2000000 		.4byte	0xf2
 3509 0844 2B       		.uleb128 0x2b
 3510 0845 5C000000 		.4byte	.LVL92
 3511 0849 AB0D0000 		.4byte	0xdab
 3512 084d 2A       		.uleb128 0x2a
 3513 084e 01       		.uleb128 0x1
 3514 084f 50       		.byte	0x50
 3515 0850 02       		.uleb128 0x2
 3516 0851 75       		.byte	0x75
 3517 0852 00       		.sleb128 0
 3518 0853 00       		.byte	0
 3519 0854 00       		.byte	0
 3520 0855 2C       		.uleb128 0x2c
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 122


 3521 0856 C1000000 		.4byte	0xc1
 3522 085a 65080000 		.4byte	0x865
 3523 085e 2D       		.uleb128 0x2d
 3524 085f E0000000 		.4byte	0xe0
 3525 0863 01       		.byte	0x1
 3526 0864 00       		.byte	0
 3527 0865 05       		.uleb128 0x5
 3528 0866 55080000 		.4byte	0x855
 3529 086a 2C       		.uleb128 0x2c
 3530 086b C1000000 		.4byte	0xc1
 3531 086f 7A080000 		.4byte	0x87a
 3532 0873 2D       		.uleb128 0x2d
 3533 0874 E0000000 		.4byte	0xe0
 3534 0878 03       		.byte	0x3
 3535 0879 00       		.byte	0
 3536 087a 05       		.uleb128 0x5
 3537 087b 6A080000 		.4byte	0x86a
 3538 087f 18       		.uleb128 0x18
 3539 0880 49060000 		.4byte	.LASF79
 3540 0884 01       		.byte	0x1
 3541 0885 160A     		.2byte	0xa16
 3542 0887 00000000 		.4byte	.LFB32
 3543 088b 14000000 		.4byte	.LFE32-.LFB32
 3544 088f 01       		.uleb128 0x1
 3545 0890 9C       		.byte	0x9c
 3546 0891 AF080000 		.4byte	0x8af
 3547 0895 19       		.uleb128 0x19
 3548 0896 E3070000 		.4byte	.LASF80
 3549 089a 01       		.byte	0x1
 3550 089b 160A     		.2byte	0xa16
 3551 089d 77000000 		.4byte	0x77
 3552 08a1 81040000 		.4byte	.LLST34
 3553 08a5 16       		.uleb128 0x16
 3554 08a6 0C000000 		.4byte	.LVL96
 3555 08aa B60D0000 		.4byte	0xdb6
 3556 08ae 00       		.byte	0
 3557 08af 18       		.uleb128 0x18
 3558 08b0 84050000 		.4byte	.LASF81
 3559 08b4 01       		.byte	0x1
 3560 08b5 4608     		.2byte	0x846
 3561 08b7 00000000 		.4byte	.LFB11
 3562 08bb 44000000 		.4byte	.LFE11-.LFB11
 3563 08bf 01       		.uleb128 0x1
 3564 08c0 9C       		.byte	0x9c
 3565 08c1 F7080000 		.4byte	0x8f7
 3566 08c5 19       		.uleb128 0x19
 3567 08c6 D4050000 		.4byte	.LASF82
 3568 08ca 01       		.byte	0x1
 3569 08cb 4608     		.2byte	0x846
 3570 08cd 83000000 		.4byte	0x83
 3571 08d1 A2040000 		.4byte	.LLST35
 3572 08d5 2E       		.uleb128 0x2e
 3573 08d6 3F010000 		.4byte	0x13f
 3574 08da 2C000000 		.4byte	.LBB16
 3575 08de 00000000 		.4byte	.Ldebug_ranges0+0
 3576 08e2 01       		.byte	0x1
 3577 08e3 5608     		.2byte	0x856
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 123


 3578 08e5 2B       		.uleb128 0x2b
 3579 08e6 2C000000 		.4byte	.LVL99
 3580 08ea 7F080000 		.4byte	0x87f
 3581 08ee 2A       		.uleb128 0x2a
 3582 08ef 01       		.uleb128 0x1
 3583 08f0 50       		.byte	0x50
 3584 08f1 03       		.uleb128 0x3
 3585 08f2 0A       		.byte	0xa
 3586 08f3 E803     		.2byte	0x3e8
 3587 08f5 00       		.byte	0
 3588 08f6 00       		.byte	0
 3589 08f7 2F       		.uleb128 0x2f
 3590 08f8 FC000000 		.4byte	.LASF83
 3591 08fc 01       		.byte	0x1
 3592 08fd 240A     		.2byte	0xa24
 3593 08ff 00000000 		.4byte	.LFB33
 3594 0903 48000000 		.4byte	.LFE33-.LFB33
 3595 0907 01       		.uleb128 0x1
 3596 0908 9C       		.byte	0x9c
 3597 0909 1E090000 		.4byte	0x91e
 3598 090d 19       		.uleb128 0x19
 3599 090e F7000000 		.4byte	.LASF21
 3600 0912 01       		.byte	0x1
 3601 0913 240A     		.2byte	0xa24
 3602 0915 83000000 		.4byte	0x83
 3603 0919 C3040000 		.4byte	.LLST36
 3604 091d 00       		.byte	0
 3605 091e 2F       		.uleb128 0x2f
 3606 091f 57020000 		.4byte	.LASF84
 3607 0923 01       		.byte	0x1
 3608 0924 610A     		.2byte	0xa61
 3609 0926 00000000 		.4byte	.LFB35
 3610 092a 54000000 		.4byte	.LFE35-.LFB35
 3611 092e 01       		.uleb128 0x1
 3612 092f 9C       		.byte	0x9c
 3613 0930 DD090000 		.4byte	0x9dd
 3614 0934 30       		.uleb128 0x30
 3615 0935 6900     		.ascii	"i\000"
 3616 0937 01       		.byte	0x1
 3617 0938 630A     		.2byte	0xa63
 3618 093a 83000000 		.4byte	0x83
 3619 093e E4040000 		.4byte	.LLST37
 3620 0942 31       		.uleb128 0x31
 3621 0943 48010000 		.4byte	0x148
 3622 0947 04000000 		.4byte	.LBB30
 3623 094b 18000000 		.4byte	.Ldebug_ranges0+0x18
 3624 094f 01       		.byte	0x1
 3625 0950 6D0A     		.2byte	0xa6d
 3626 0952 6F090000 		.4byte	0x96f
 3627 0956 20       		.uleb128 0x20
 3628 0957 55010000 		.4byte	0x155
 3629 095b 28050000 		.4byte	.LLST38
 3630 095f 32       		.uleb128 0x32
 3631 0960 18000000 		.4byte	.Ldebug_ranges0+0x18
 3632 0964 20       		.uleb128 0x20
 3633 0965 55010000 		.4byte	0x155
 3634 0969 28050000 		.4byte	.LLST38
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 124


 3635 096d 00       		.byte	0
 3636 096e 00       		.byte	0
 3637 096f 31       		.uleb128 0x31
 3638 0970 9D010000 		.4byte	0x19d
 3639 0974 08000000 		.4byte	.LBB37
 3640 0978 38000000 		.4byte	.Ldebug_ranges0+0x38
 3641 097c 01       		.byte	0x1
 3642 097d 6A0A     		.2byte	0xa6a
 3643 097f AE090000 		.4byte	0x9ae
 3644 0983 20       		.uleb128 0x20
 3645 0984 BA010000 		.4byte	0x1ba
 3646 0988 3C050000 		.4byte	.LLST40
 3647 098c 20       		.uleb128 0x20
 3648 098d AE010000 		.4byte	0x1ae
 3649 0991 54050000 		.4byte	.LLST41
 3650 0995 32       		.uleb128 0x32
 3651 0996 38000000 		.4byte	.Ldebug_ranges0+0x38
 3652 099a 28       		.uleb128 0x28
 3653 099b C6010000 		.4byte	0x1c6
 3654 099f 68050000 		.4byte	.LLST42
 3655 09a3 23       		.uleb128 0x23
 3656 09a4 D2010000 		.4byte	0x1d2
 3657 09a8 00000020 		.4byte	0x20000000
 3658 09ac 00       		.byte	0
 3659 09ad 00       		.byte	0
 3660 09ae 33       		.uleb128 0x33
 3661 09af 83010000 		.4byte	0x183
 3662 09b3 2C000000 		.4byte	.LBB45
 3663 09b7 04000000 		.4byte	.LBE45-.LBB45
 3664 09bb 01       		.byte	0x1
 3665 09bc 700A     		.2byte	0xa70
 3666 09be CC090000 		.4byte	0x9cc
 3667 09c2 20       		.uleb128 0x20
 3668 09c3 90010000 		.4byte	0x190
 3669 09c7 8B050000 		.4byte	.LLST43
 3670 09cb 00       		.byte	0
 3671 09cc 34       		.uleb128 0x34
 3672 09cd 7A010000 		.4byte	0x17a
 3673 09d1 30000000 		.4byte	.LBB47
 3674 09d5 04000000 		.4byte	.LBE47-.LBB47
 3675 09d9 01       		.byte	0x1
 3676 09da 710A     		.2byte	0xa71
 3677 09dc 00       		.byte	0
 3678 09dd 14       		.uleb128 0x14
 3679 09de 85070000 		.4byte	.LASF85
 3680 09e2 01       		.byte	0x1
 3681 09e3 900A     		.2byte	0xa90
 3682 09e5 00000000 		.4byte	.LFB37
 3683 09e9 10000000 		.4byte	.LFE37-.LFB37
 3684 09ed 01       		.uleb128 0x1
 3685 09ee 9C       		.byte	0x9c
 3686 09ef 14       		.uleb128 0x14
 3687 09f0 B6000000 		.4byte	.LASF86
 3688 09f4 01       		.byte	0x1
 3689 09f5 A00A     		.2byte	0xaa0
 3690 09f7 00000000 		.4byte	.LFB38
 3691 09fb 10000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 125


 3692 09ff 01       		.uleb128 0x1
 3693 0a00 9C       		.byte	0x9c
 3694 0a01 18       		.uleb128 0x18
 3695 0a02 97060000 		.4byte	.LASF87
 3696 0a06 01       		.byte	0x1
 3697 0a07 7F0A     		.2byte	0xa7f
 3698 0a09 00000000 		.4byte	.LFB36
 3699 0a0d 18000000 		.4byte	.LFE36-.LFB36
 3700 0a11 01       		.uleb128 0x1
 3701 0a12 9C       		.byte	0x9c
 3702 0a13 210A0000 		.4byte	0xa21
 3703 0a17 16       		.uleb128 0x16
 3704 0a18 06000000 		.4byte	.LVL114
 3705 0a1c EF090000 		.4byte	0x9ef
 3706 0a20 00       		.byte	0
 3707 0a21 18       		.uleb128 0x18
 3708 0a22 FB030000 		.4byte	.LASF88
 3709 0a26 01       		.byte	0x1
 3710 0a27 440A     		.2byte	0xa44
 3711 0a29 00000000 		.4byte	.LFB34
 3712 0a2d 1C000000 		.4byte	.LFE34-.LFB34
 3713 0a31 01       		.uleb128 0x1
 3714 0a32 9C       		.byte	0x9c
 3715 0a33 4A0A0000 		.4byte	0xa4a
 3716 0a37 16       		.uleb128 0x16
 3717 0a38 0E000000 		.4byte	.LVL115
 3718 0a3c 1E090000 		.4byte	0x91e
 3719 0a40 16       		.uleb128 0x16
 3720 0a41 16000000 		.4byte	.LVL116
 3721 0a45 010A0000 		.4byte	0xa01
 3722 0a49 00       		.byte	0
 3723 0a4a 14       		.uleb128 0x14
 3724 0a4b 1B070000 		.4byte	.LASF89
 3725 0a4f 01       		.byte	0x1
 3726 0a50 B00A     		.2byte	0xab0
 3727 0a52 00000000 		.4byte	.LFB39
 3728 0a56 10000000 		.4byte	.LFE39-.LFB39
 3729 0a5a 01       		.uleb128 0x1
 3730 0a5b 9C       		.byte	0x9c
 3731 0a5c 1F       		.uleb128 0x1f
 3732 0a5d 83010000 		.4byte	0x183
 3733 0a61 00000000 		.4byte	.LFB40
 3734 0a65 10000000 		.4byte	.LFE40-.LFB40
 3735 0a69 01       		.uleb128 0x1
 3736 0a6a 9C       		.byte	0x9c
 3737 0a6b 790A0000 		.4byte	0xa79
 3738 0a6f 20       		.uleb128 0x20
 3739 0a70 90010000 		.4byte	0x190
 3740 0a74 9E050000 		.4byte	.LLST44
 3741 0a78 00       		.byte	0
 3742 0a79 17       		.uleb128 0x17
 3743 0a7a 1F010000 		.4byte	.LASF90
 3744 0a7e 01       		.byte	0x1
 3745 0a7f D10A     		.2byte	0xad1
 3746 0a81 83000000 		.4byte	0x83
 3747 0a85 00000000 		.4byte	.LFB41
 3748 0a89 10000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 126


 3749 0a8d 01       		.uleb128 0x1
 3750 0a8e 9C       		.byte	0x9c
 3751 0a8f 17       		.uleb128 0x17
 3752 0a90 37050000 		.4byte	.LASF91
 3753 0a94 01       		.byte	0x1
 3754 0a95 E10A     		.2byte	0xae1
 3755 0a97 83000000 		.4byte	0x83
 3756 0a9b 00000000 		.4byte	.LFB42
 3757 0a9f 10000000 		.4byte	.LFE42-.LFB42
 3758 0aa3 01       		.uleb128 0x1
 3759 0aa4 9C       		.byte	0x9c
 3760 0aa5 1F       		.uleb128 0x1f
 3761 0aa6 48010000 		.4byte	0x148
 3762 0aaa 00000000 		.4byte	.LFB43
 3763 0aae 18000000 		.4byte	.LFE43-.LFB43
 3764 0ab2 01       		.uleb128 0x1
 3765 0ab3 9C       		.byte	0x9c
 3766 0ab4 CF0A0000 		.4byte	0xacf
 3767 0ab8 21       		.uleb128 0x21
 3768 0ab9 55010000 		.4byte	0x155
 3769 0abd 01       		.uleb128 0x1
 3770 0abe 50       		.byte	0x50
 3771 0abf 32       		.uleb128 0x32
 3772 0ac0 58000000 		.4byte	.Ldebug_ranges0+0x58
 3773 0ac4 20       		.uleb128 0x20
 3774 0ac5 55010000 		.4byte	0x155
 3775 0ac9 BF050000 		.4byte	.LLST45
 3776 0acd 00       		.byte	0
 3777 0ace 00       		.byte	0
 3778 0acf 17       		.uleb128 0x17
 3779 0ad0 03070000 		.4byte	.LASF92
 3780 0ad4 01       		.byte	0x1
 3781 0ad5 1A0B     		.2byte	0xb1a
 3782 0ad7 83000000 		.4byte	0x83
 3783 0adb 00000000 		.4byte	.LFB44
 3784 0adf 10000000 		.4byte	.LFE44-.LFB44
 3785 0ae3 01       		.uleb128 0x1
 3786 0ae4 9C       		.byte	0x9c
 3787 0ae5 17       		.uleb128 0x17
 3788 0ae6 85020000 		.4byte	.LASF93
 3789 0aea 01       		.byte	0x1
 3790 0aeb 310B     		.2byte	0xb31
 3791 0aed 83000000 		.4byte	0x83
 3792 0af1 00000000 		.4byte	.LFB45
 3793 0af5 10000000 		.4byte	.LFE45-.LFB45
 3794 0af9 01       		.uleb128 0x1
 3795 0afa 9C       		.byte	0x9c
 3796 0afb 35       		.uleb128 0x35
 3797 0afc 62010000 		.4byte	0x162
 3798 0b00 00000000 		.4byte	.LFB49
 3799 0b04 24000000 		.4byte	.LFE49-.LFB49
 3800 0b08 01       		.uleb128 0x1
 3801 0b09 9C       		.byte	0x9c
 3802 0b0a 300B0000 		.4byte	0xb30
 3803 0b0e 25       		.uleb128 0x25
 3804 0b0f 6F010000 		.4byte	0x16f
 3805 0b13 27       		.uleb128 0x27
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 127


 3806 0b14 0C000000 		.4byte	.LBB57
 3807 0b18 10000000 		.4byte	.LBE57-.LBB57
 3808 0b1c 260B0000 		.4byte	0xb26
 3809 0b20 25       		.uleb128 0x25
 3810 0b21 6F010000 		.4byte	0x16f
 3811 0b25 00       		.byte	0
 3812 0b26 16       		.uleb128 0x16
 3813 0b27 06000000 		.4byte	.LVL122
 3814 0b2b E50A0000 		.4byte	0xae5
 3815 0b2f 00       		.byte	0
 3816 0b30 1D       		.uleb128 0x1d
 3817 0b31 7A010000 		.4byte	0x17a
 3818 0b35 00000000 		.4byte	.LFB46
 3819 0b39 0C000000 		.4byte	.LFE46-.LFB46
 3820 0b3d 01       		.uleb128 0x1
 3821 0b3e 9C       		.byte	0x9c
 3822 0b3f 1C       		.uleb128 0x1c
 3823 0b40 BE060000 		.4byte	.LASF94
 3824 0b44 01       		.byte	0x1
 3825 0b45 610B     		.2byte	0xb61
 3826 0b47 E7000000 		.4byte	0xe7
 3827 0b4b 00000000 		.4byte	.LFB47
 3828 0b4f 10000000 		.4byte	.LFE47-.LFB47
 3829 0b53 01       		.uleb128 0x1
 3830 0b54 9C       		.byte	0x9c
 3831 0b55 860B0000 		.4byte	0xb86
 3832 0b59 19       		.uleb128 0x19
 3833 0b5a 85030000 		.4byte	.LASF33
 3834 0b5e 01       		.byte	0x1
 3835 0b5f 610B     		.2byte	0xb61
 3836 0b61 83000000 		.4byte	0x83
 3837 0b65 D3050000 		.4byte	.LLST46
 3838 0b69 1B       		.uleb128 0x1b
 3839 0b6a 1D050000 		.4byte	.LASF95
 3840 0b6e 01       		.byte	0x1
 3841 0b6f 610B     		.2byte	0xb61
 3842 0b71 E7000000 		.4byte	0xe7
 3843 0b75 01       		.uleb128 0x1
 3844 0b76 51       		.byte	0x51
 3845 0b77 1E       		.uleb128 0x1e
 3846 0b78 52000000 		.4byte	.LASF96
 3847 0b7c 01       		.byte	0x1
 3848 0b7d 630B     		.2byte	0xb63
 3849 0b7f E7000000 		.4byte	0xe7
 3850 0b83 01       		.uleb128 0x1
 3851 0b84 50       		.byte	0x50
 3852 0b85 00       		.byte	0
 3853 0b86 1C       		.uleb128 0x1c
 3854 0b87 1B030000 		.4byte	.LASF97
 3855 0b8b 01       		.byte	0x1
 3856 0b8c 790B     		.2byte	0xb79
 3857 0b8e E7000000 		.4byte	0xe7
 3858 0b92 00000000 		.4byte	.LFB48
 3859 0b96 0C000000 		.4byte	.LFE48-.LFB48
 3860 0b9a 01       		.uleb128 0x1
 3861 0b9b 9C       		.byte	0x9c
 3862 0b9c B10B0000 		.4byte	0xbb1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 128


 3863 0ba0 19       		.uleb128 0x19
 3864 0ba1 85030000 		.4byte	.LASF33
 3865 0ba5 01       		.byte	0x1
 3866 0ba6 790B     		.2byte	0xb79
 3867 0ba8 83000000 		.4byte	0x83
 3868 0bac F4050000 		.4byte	.LLST47
 3869 0bb0 00       		.byte	0
 3870 0bb1 18       		.uleb128 0x18
 3871 0bb2 77020000 		.4byte	.LASF98
 3872 0bb6 01       		.byte	0x1
 3873 0bb7 A60B     		.2byte	0xba6
 3874 0bb9 00000000 		.4byte	.LFB50
 3875 0bbd 74000000 		.4byte	.LFE50-.LFB50
 3876 0bc1 01       		.uleb128 0x1
 3877 0bc2 9C       		.byte	0x9c
 3878 0bc3 D60B0000 		.4byte	0xbd6
 3879 0bc7 1B       		.uleb128 0x1b
 3880 0bc8 E6060000 		.4byte	.LASF99
 3881 0bcc 01       		.byte	0x1
 3882 0bcd A60B     		.2byte	0xba6
 3883 0bcf D60B0000 		.4byte	0xbd6
 3884 0bd3 01       		.uleb128 0x1
 3885 0bd4 50       		.byte	0x50
 3886 0bd5 00       		.byte	0
 3887 0bd6 06       		.uleb128 0x6
 3888 0bd7 04       		.byte	0x4
 3889 0bd8 83000000 		.4byte	0x83
 3890 0bdc 18       		.uleb128 0x18
 3891 0bdd E5050000 		.4byte	.LASF100
 3892 0be1 01       		.byte	0x1
 3893 0be2 D20B     		.2byte	0xbd2
 3894 0be4 00000000 		.4byte	.LFB51
 3895 0be8 20000000 		.4byte	.LFE51-.LFB51
 3896 0bec 01       		.uleb128 0x1
 3897 0bed 9C       		.byte	0x9c
 3898 0bee 130C0000 		.4byte	0xc13
 3899 0bf2 19       		.uleb128 0x19
 3900 0bf3 17040000 		.4byte	.LASF101
 3901 0bf7 01       		.byte	0x1
 3902 0bf8 D20B     		.2byte	0xbd2
 3903 0bfa 83000000 		.4byte	0x83
 3904 0bfe 15060000 		.4byte	.LLST48
 3905 0c02 1A       		.uleb128 0x1a
 3906 0c03 57030000 		.4byte	.LASF23
 3907 0c07 01       		.byte	0x1
 3908 0c08 D40B     		.2byte	0xbd4
 3909 0c0a 83000000 		.4byte	0x83
 3910 0c0e 36060000 		.4byte	.LLST49
 3911 0c12 00       		.byte	0
 3912 0c13 18       		.uleb128 0x18
 3913 0c14 AA030000 		.4byte	.LASF102
 3914 0c18 01       		.byte	0x1
 3915 0c19 ED0B     		.2byte	0xbed
 3916 0c1b 00000000 		.4byte	.LFB52
 3917 0c1f 20000000 		.4byte	.LFE52-.LFB52
 3918 0c23 01       		.uleb128 0x1
 3919 0c24 9C       		.byte	0x9c
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 129


 3920 0c25 4A0C0000 		.4byte	0xc4a
 3921 0c29 19       		.uleb128 0x19
 3922 0c2a 17040000 		.4byte	.LASF101
 3923 0c2e 01       		.byte	0x1
 3924 0c2f ED0B     		.2byte	0xbed
 3925 0c31 83000000 		.4byte	0x83
 3926 0c35 54060000 		.4byte	.LLST50
 3927 0c39 1A       		.uleb128 0x1a
 3928 0c3a 57030000 		.4byte	.LASF23
 3929 0c3e 01       		.byte	0x1
 3930 0c3f EF0B     		.2byte	0xbef
 3931 0c41 83000000 		.4byte	0x83
 3932 0c45 75060000 		.4byte	.LLST51
 3933 0c49 00       		.byte	0
 3934 0c4a 18       		.uleb128 0x18
 3935 0c4b 67070000 		.4byte	.LASF103
 3936 0c4f 01       		.byte	0x1
 3937 0c50 080C     		.2byte	0xc08
 3938 0c52 00000000 		.4byte	.LFB53
 3939 0c56 20000000 		.4byte	.LFE53-.LFB53
 3940 0c5a 01       		.uleb128 0x1
 3941 0c5b 9C       		.byte	0x9c
 3942 0c5c 810C0000 		.4byte	0xc81
 3943 0c60 19       		.uleb128 0x19
 3944 0c61 17040000 		.4byte	.LASF101
 3945 0c65 01       		.byte	0x1
 3946 0c66 080C     		.2byte	0xc08
 3947 0c68 83000000 		.4byte	0x83
 3948 0c6c 93060000 		.4byte	.LLST52
 3949 0c70 1A       		.uleb128 0x1a
 3950 0c71 57030000 		.4byte	.LASF23
 3951 0c75 01       		.byte	0x1
 3952 0c76 0A0C     		.2byte	0xc0a
 3953 0c78 83000000 		.4byte	0x83
 3954 0c7c B4060000 		.4byte	.LLST53
 3955 0c80 00       		.byte	0
 3956 0c81 18       		.uleb128 0x18
 3957 0c82 38040000 		.4byte	.LASF104
 3958 0c86 01       		.byte	0x1
 3959 0c87 250C     		.2byte	0xc25
 3960 0c89 00000000 		.4byte	.LFB54
 3961 0c8d 3C000000 		.4byte	.LFE54-.LFB54
 3962 0c91 01       		.uleb128 0x1
 3963 0c92 9C       		.byte	0x9c
 3964 0c93 C80C0000 		.4byte	0xcc8
 3965 0c97 19       		.uleb128 0x19
 3966 0c98 96000000 		.4byte	.LASF105
 3967 0c9c 01       		.byte	0x1
 3968 0c9d 250C     		.2byte	0xc25
 3969 0c9f 83000000 		.4byte	0x83
 3970 0ca3 D2060000 		.4byte	.LLST54
 3971 0ca7 19       		.uleb128 0x19
 3972 0ca8 17040000 		.4byte	.LASF101
 3973 0cac 01       		.byte	0x1
 3974 0cad 250C     		.2byte	0xc25
 3975 0caf 83000000 		.4byte	0x83
 3976 0cb3 25070000 		.4byte	.LLST55
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 130


 3977 0cb7 1A       		.uleb128 0x1a
 3978 0cb8 57030000 		.4byte	.LASF23
 3979 0cbc 01       		.byte	0x1
 3980 0cbd 270C     		.2byte	0xc27
 3981 0cbf 83000000 		.4byte	0x83
 3982 0cc3 46070000 		.4byte	.LLST56
 3983 0cc7 00       		.byte	0
 3984 0cc8 2C       		.uleb128 0x2c
 3985 0cc9 E7000000 		.4byte	0xe7
 3986 0ccd D80C0000 		.4byte	0xcd8
 3987 0cd1 2D       		.uleb128 0x2d
 3988 0cd2 E0000000 		.4byte	0xe0
 3989 0cd6 04       		.byte	0x4
 3990 0cd7 00       		.byte	0
 3991 0cd8 36       		.uleb128 0x36
 3992 0cd9 D3060000 		.4byte	.LASF106
 3993 0cdd 01       		.byte	0x1
 3994 0cde 22       		.byte	0x22
 3995 0cdf C80C0000 		.4byte	0xcc8
 3996 0ce3 05       		.uleb128 0x5
 3997 0ce4 03       		.byte	0x3
 3998 0ce5 00000000 		.4byte	CySysTickCallbacks
 3999 0ce9 37       		.uleb128 0x37
 4000 0cea 49050000 		.4byte	.LASF107
 4001 0cee 01       		.byte	0x1
 4002 0cef 1B       		.byte	0x1b
 4003 0cf0 83000000 		.4byte	0x83
 4004 0cf4 05       		.uleb128 0x5
 4005 0cf5 03       		.byte	0x3
 4006 0cf6 00000000 		.4byte	cydelayFreqHz
 4007 0cfa 37       		.uleb128 0x37
 4008 0cfb 8B010000 		.4byte	.LASF108
 4009 0cff 01       		.byte	0x1
 4010 0d00 1C       		.byte	0x1c
 4011 0d01 83000000 		.4byte	0x83
 4012 0d05 05       		.uleb128 0x5
 4013 0d06 03       		.byte	0x3
 4014 0d07 00000000 		.4byte	cydelayFreqKhz
 4015 0d0b 37       		.uleb128 0x37
 4016 0d0c 45070000 		.4byte	.LASF109
 4017 0d10 01       		.byte	0x1
 4018 0d11 1D       		.byte	0x1d
 4019 0d12 6B000000 		.4byte	0x6b
 4020 0d16 05       		.uleb128 0x5
 4021 0d17 03       		.byte	0x3
 4022 0d18 00000000 		.4byte	cydelayFreqMhz
 4023 0d1c 37       		.uleb128 0x37
 4024 0d1d 4A020000 		.4byte	.LASF110
 4025 0d21 01       		.byte	0x1
 4026 0d22 1E       		.byte	0x1e
 4027 0d23 83000000 		.4byte	0x83
 4028 0d27 05       		.uleb128 0x5
 4029 0d28 03       		.byte	0x3
 4030 0d29 00000000 		.4byte	cydelay32kMs
 4031 0d2d 37       		.uleb128 0x37
 4032 0d2e 27040000 		.4byte	.LASF111
 4033 0d32 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 131


 4034 0d33 36       		.byte	0x36
 4035 0d34 83000000 		.4byte	0x83
 4036 0d38 05       		.uleb128 0x5
 4037 0d39 03       		.byte	0x3
 4038 0d3a 00000000 		.4byte	CySysTickInitVar
 4039 0d3e 2C       		.uleb128 0x2c
 4040 0d3f 4E0D0000 		.4byte	0xd4e
 4041 0d43 4E0D0000 		.4byte	0xd4e
 4042 0d47 2D       		.uleb128 0x2d
 4043 0d48 E0000000 		.4byte	0xe0
 4044 0d4c 2D       		.byte	0x2d
 4045 0d4d 00       		.byte	0
 4046 0d4e 38       		.uleb128 0x38
 4047 0d4f 6B000000 		.4byte	0x6b
 4048 0d53 37       		.uleb128 0x37
 4049 0d54 26050000 		.4byte	.LASF112
 4050 0d58 01       		.byte	0x1
 4051 0d59 3B       		.byte	0x3b
 4052 0d5a 640D0000 		.4byte	0xd64
 4053 0d5e 05       		.uleb128 0x5
 4054 0d5f 03       		.byte	0x3
 4055 0d60 00000000 		.4byte	cyImoFreqMhz2Reg
 4056 0d64 38       		.uleb128 0x38
 4057 0d65 3E0D0000 		.4byte	0xd3e
 4058 0d69 2C       		.uleb128 0x2c
 4059 0d6a 4E0D0000 		.4byte	0xd4e
 4060 0d6e 790D0000 		.4byte	0xd79
 4061 0d72 2D       		.uleb128 0x2d
 4062 0d73 E0000000 		.4byte	0xe0
 4063 0d77 16       		.byte	0x16
 4064 0d78 00       		.byte	0
 4065 0d79 37       		.uleb128 0x37
 4066 0d7a 72060000 		.4byte	.LASF113
 4067 0d7e 01       		.byte	0x1
 4068 0d7f 4C       		.byte	0x4c
 4069 0d80 8A0D0000 		.4byte	0xd8a
 4070 0d84 05       		.uleb128 0x5
 4071 0d85 03       		.byte	0x3
 4072 0d86 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4073 0d8a 38       		.uleb128 0x38
 4074 0d8b 690D0000 		.4byte	0xd69
 4075 0d8f 37       		.uleb128 0x37
 4076 0d90 38000000 		.4byte	.LASF114
 4077 0d94 01       		.byte	0x1
 4078 0d95 5B       		.byte	0x5b
 4079 0d96 83000000 		.4byte	0x83
 4080 0d9a 05       		.uleb128 0x5
 4081 0d9b 03       		.byte	0x3
 4082 0d9c 00000000 		.4byte	CySysClkPumpConfig
 4083 0da0 39       		.uleb128 0x39
 4084 0da1 F4020000 		.4byte	.LASF115
 4085 0da5 F4020000 		.4byte	.LASF115
 4086 0da9 03       		.byte	0x3
 4087 0daa E5       		.byte	0xe5
 4088 0dab 39       		.uleb128 0x39
 4089 0dac 6E050000 		.4byte	.LASF116
 4090 0db0 6E050000 		.4byte	.LASF116
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 132


 4091 0db4 03       		.byte	0x3
 4092 0db5 E6       		.byte	0xe6
 4093 0db6 39       		.uleb128 0x39
 4094 0db7 C1050000 		.4byte	.LASF117
 4095 0dbb C1050000 		.4byte	.LASF117
 4096 0dbf 03       		.byte	0x3
 4097 0dc0 DC       		.byte	0xdc
 4098 0dc1 39       		.uleb128 0x39
 4099 0dc2 AC070000 		.4byte	.LASF118
 4100 0dc6 AC070000 		.4byte	.LASF118
 4101 0dca 04       		.byte	0x4
 4102 0dcb 52       		.byte	0x52
 4103 0dcc 39       		.uleb128 0x39
 4104 0dcd 54070000 		.4byte	.LASF119
 4105 0dd1 54070000 		.4byte	.LASF119
 4106 0dd5 05       		.byte	0x5
 4107 0dd6 54       		.byte	0x54
 4108 0dd7 00       		.byte	0
 4109              		.section	.debug_abbrev,"",%progbits
 4110              	.Ldebug_abbrev0:
 4111 0000 01       		.uleb128 0x1
 4112 0001 11       		.uleb128 0x11
 4113 0002 01       		.byte	0x1
 4114 0003 25       		.uleb128 0x25
 4115 0004 0E       		.uleb128 0xe
 4116 0005 13       		.uleb128 0x13
 4117 0006 0B       		.uleb128 0xb
 4118 0007 03       		.uleb128 0x3
 4119 0008 0E       		.uleb128 0xe
 4120 0009 1B       		.uleb128 0x1b
 4121 000a 0E       		.uleb128 0xe
 4122 000b 55       		.uleb128 0x55
 4123 000c 17       		.uleb128 0x17
 4124 000d 11       		.uleb128 0x11
 4125 000e 01       		.uleb128 0x1
 4126 000f 10       		.uleb128 0x10
 4127 0010 17       		.uleb128 0x17
 4128 0011 00       		.byte	0
 4129 0012 00       		.byte	0
 4130 0013 02       		.uleb128 0x2
 4131 0014 24       		.uleb128 0x24
 4132 0015 00       		.byte	0
 4133 0016 0B       		.uleb128 0xb
 4134 0017 0B       		.uleb128 0xb
 4135 0018 3E       		.uleb128 0x3e
 4136 0019 0B       		.uleb128 0xb
 4137 001a 03       		.uleb128 0x3
 4138 001b 0E       		.uleb128 0xe
 4139 001c 00       		.byte	0
 4140 001d 00       		.byte	0
 4141 001e 03       		.uleb128 0x3
 4142 001f 24       		.uleb128 0x24
 4143 0020 00       		.byte	0
 4144 0021 0B       		.uleb128 0xb
 4145 0022 0B       		.uleb128 0xb
 4146 0023 3E       		.uleb128 0x3e
 4147 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 133


 4148 0025 03       		.uleb128 0x3
 4149 0026 08       		.uleb128 0x8
 4150 0027 00       		.byte	0
 4151 0028 00       		.byte	0
 4152 0029 04       		.uleb128 0x4
 4153 002a 16       		.uleb128 0x16
 4154 002b 00       		.byte	0
 4155 002c 03       		.uleb128 0x3
 4156 002d 0E       		.uleb128 0xe
 4157 002e 3A       		.uleb128 0x3a
 4158 002f 0B       		.uleb128 0xb
 4159 0030 3B       		.uleb128 0x3b
 4160 0031 05       		.uleb128 0x5
 4161 0032 49       		.uleb128 0x49
 4162 0033 13       		.uleb128 0x13
 4163 0034 00       		.byte	0
 4164 0035 00       		.byte	0
 4165 0036 05       		.uleb128 0x5
 4166 0037 35       		.uleb128 0x35
 4167 0038 00       		.byte	0
 4168 0039 49       		.uleb128 0x49
 4169 003a 13       		.uleb128 0x13
 4170 003b 00       		.byte	0
 4171 003c 00       		.byte	0
 4172 003d 06       		.uleb128 0x6
 4173 003e 0F       		.uleb128 0xf
 4174 003f 00       		.byte	0
 4175 0040 0B       		.uleb128 0xb
 4176 0041 0B       		.uleb128 0xb
 4177 0042 49       		.uleb128 0x49
 4178 0043 13       		.uleb128 0x13
 4179 0044 00       		.byte	0
 4180 0045 00       		.byte	0
 4181 0046 07       		.uleb128 0x7
 4182 0047 15       		.uleb128 0x15
 4183 0048 00       		.byte	0
 4184 0049 27       		.uleb128 0x27
 4185 004a 19       		.uleb128 0x19
 4186 004b 00       		.byte	0
 4187 004c 00       		.byte	0
 4188 004d 08       		.uleb128 0x8
 4189 004e 16       		.uleb128 0x16
 4190 004f 00       		.byte	0
 4191 0050 03       		.uleb128 0x3
 4192 0051 0E       		.uleb128 0xe
 4193 0052 3A       		.uleb128 0x3a
 4194 0053 0B       		.uleb128 0xb
 4195 0054 3B       		.uleb128 0x3b
 4196 0055 0B       		.uleb128 0xb
 4197 0056 49       		.uleb128 0x49
 4198 0057 13       		.uleb128 0x13
 4199 0058 00       		.byte	0
 4200 0059 00       		.byte	0
 4201 005a 09       		.uleb128 0x9
 4202 005b 2E       		.uleb128 0x2e
 4203 005c 01       		.byte	0x1
 4204 005d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 134


 4205 005e 19       		.uleb128 0x19
 4206 005f 03       		.uleb128 0x3
 4207 0060 0E       		.uleb128 0xe
 4208 0061 3A       		.uleb128 0x3a
 4209 0062 0B       		.uleb128 0xb
 4210 0063 3B       		.uleb128 0x3b
 4211 0064 0B       		.uleb128 0xb
 4212 0065 27       		.uleb128 0x27
 4213 0066 19       		.uleb128 0x19
 4214 0067 20       		.uleb128 0x20
 4215 0068 0B       		.uleb128 0xb
 4216 0069 01       		.uleb128 0x1
 4217 006a 13       		.uleb128 0x13
 4218 006b 00       		.byte	0
 4219 006c 00       		.byte	0
 4220 006d 0A       		.uleb128 0xa
 4221 006e 34       		.uleb128 0x34
 4222 006f 00       		.byte	0
 4223 0070 03       		.uleb128 0x3
 4224 0071 08       		.uleb128 0x8
 4225 0072 3A       		.uleb128 0x3a
 4226 0073 0B       		.uleb128 0xb
 4227 0074 3B       		.uleb128 0x3b
 4228 0075 0B       		.uleb128 0xb
 4229 0076 49       		.uleb128 0x49
 4230 0077 13       		.uleb128 0x13
 4231 0078 00       		.byte	0
 4232 0079 00       		.byte	0
 4233 007a 0B       		.uleb128 0xb
 4234 007b 34       		.uleb128 0x34
 4235 007c 00       		.byte	0
 4236 007d 03       		.uleb128 0x3
 4237 007e 0E       		.uleb128 0xe
 4238 007f 3A       		.uleb128 0x3a
 4239 0080 0B       		.uleb128 0xb
 4240 0081 3B       		.uleb128 0x3b
 4241 0082 0B       		.uleb128 0xb
 4242 0083 49       		.uleb128 0x49
 4243 0084 13       		.uleb128 0x13
 4244 0085 00       		.byte	0
 4245 0086 00       		.byte	0
 4246 0087 0C       		.uleb128 0xc
 4247 0088 2E       		.uleb128 0x2e
 4248 0089 00       		.byte	0
 4249 008a 3F       		.uleb128 0x3f
 4250 008b 19       		.uleb128 0x19
 4251 008c 03       		.uleb128 0x3
 4252 008d 0E       		.uleb128 0xe
 4253 008e 3A       		.uleb128 0x3a
 4254 008f 0B       		.uleb128 0xb
 4255 0090 3B       		.uleb128 0x3b
 4256 0091 05       		.uleb128 0x5
 4257 0092 27       		.uleb128 0x27
 4258 0093 19       		.uleb128 0x19
 4259 0094 20       		.uleb128 0x20
 4260 0095 0B       		.uleb128 0xb
 4261 0096 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 135


 4262 0097 00       		.byte	0
 4263 0098 0D       		.uleb128 0xd
 4264 0099 2E       		.uleb128 0x2e
 4265 009a 01       		.byte	0x1
 4266 009b 3F       		.uleb128 0x3f
 4267 009c 19       		.uleb128 0x19
 4268 009d 03       		.uleb128 0x3
 4269 009e 0E       		.uleb128 0xe
 4270 009f 3A       		.uleb128 0x3a
 4271 00a0 0B       		.uleb128 0xb
 4272 00a1 3B       		.uleb128 0x3b
 4273 00a2 05       		.uleb128 0x5
 4274 00a3 27       		.uleb128 0x27
 4275 00a4 19       		.uleb128 0x19
 4276 00a5 20       		.uleb128 0x20
 4277 00a6 0B       		.uleb128 0xb
 4278 00a7 01       		.uleb128 0x1
 4279 00a8 13       		.uleb128 0x13
 4280 00a9 00       		.byte	0
 4281 00aa 00       		.byte	0
 4282 00ab 0E       		.uleb128 0xe
 4283 00ac 05       		.uleb128 0x5
 4284 00ad 00       		.byte	0
 4285 00ae 03       		.uleb128 0x3
 4286 00af 0E       		.uleb128 0xe
 4287 00b0 3A       		.uleb128 0x3a
 4288 00b1 0B       		.uleb128 0xb
 4289 00b2 3B       		.uleb128 0x3b
 4290 00b3 05       		.uleb128 0x5
 4291 00b4 49       		.uleb128 0x49
 4292 00b5 13       		.uleb128 0x13
 4293 00b6 00       		.byte	0
 4294 00b7 00       		.byte	0
 4295 00b8 0F       		.uleb128 0xf
 4296 00b9 2E       		.uleb128 0x2e
 4297 00ba 01       		.byte	0x1
 4298 00bb 03       		.uleb128 0x3
 4299 00bc 0E       		.uleb128 0xe
 4300 00bd 3A       		.uleb128 0x3a
 4301 00be 0B       		.uleb128 0xb
 4302 00bf 3B       		.uleb128 0x3b
 4303 00c0 05       		.uleb128 0x5
 4304 00c1 27       		.uleb128 0x27
 4305 00c2 19       		.uleb128 0x19
 4306 00c3 20       		.uleb128 0x20
 4307 00c4 0B       		.uleb128 0xb
 4308 00c5 01       		.uleb128 0x1
 4309 00c6 13       		.uleb128 0x13
 4310 00c7 00       		.byte	0
 4311 00c8 00       		.byte	0
 4312 00c9 10       		.uleb128 0x10
 4313 00ca 34       		.uleb128 0x34
 4314 00cb 00       		.byte	0
 4315 00cc 03       		.uleb128 0x3
 4316 00cd 08       		.uleb128 0x8
 4317 00ce 3A       		.uleb128 0x3a
 4318 00cf 0B       		.uleb128 0xb
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 136


 4319 00d0 3B       		.uleb128 0x3b
 4320 00d1 05       		.uleb128 0x5
 4321 00d2 49       		.uleb128 0x49
 4322 00d3 13       		.uleb128 0x13
 4323 00d4 00       		.byte	0
 4324 00d5 00       		.byte	0
 4325 00d6 11       		.uleb128 0x11
 4326 00d7 2E       		.uleb128 0x2e
 4327 00d8 01       		.byte	0x1
 4328 00d9 3F       		.uleb128 0x3f
 4329 00da 19       		.uleb128 0x19
 4330 00db 03       		.uleb128 0x3
 4331 00dc 0E       		.uleb128 0xe
 4332 00dd 3A       		.uleb128 0x3a
 4333 00de 0B       		.uleb128 0xb
 4334 00df 3B       		.uleb128 0x3b
 4335 00e0 05       		.uleb128 0x5
 4336 00e1 27       		.uleb128 0x27
 4337 00e2 19       		.uleb128 0x19
 4338 00e3 49       		.uleb128 0x49
 4339 00e4 13       		.uleb128 0x13
 4340 00e5 20       		.uleb128 0x20
 4341 00e6 0B       		.uleb128 0xb
 4342 00e7 01       		.uleb128 0x1
 4343 00e8 13       		.uleb128 0x13
 4344 00e9 00       		.byte	0
 4345 00ea 00       		.byte	0
 4346 00eb 12       		.uleb128 0x12
 4347 00ec 34       		.uleb128 0x34
 4348 00ed 00       		.byte	0
 4349 00ee 03       		.uleb128 0x3
 4350 00ef 0E       		.uleb128 0xe
 4351 00f0 3A       		.uleb128 0x3a
 4352 00f1 0B       		.uleb128 0xb
 4353 00f2 3B       		.uleb128 0x3b
 4354 00f3 05       		.uleb128 0x5
 4355 00f4 49       		.uleb128 0x49
 4356 00f5 13       		.uleb128 0x13
 4357 00f6 00       		.byte	0
 4358 00f7 00       		.byte	0
 4359 00f8 13       		.uleb128 0x13
 4360 00f9 2E       		.uleb128 0x2e
 4361 00fa 00       		.byte	0
 4362 00fb 3F       		.uleb128 0x3f
 4363 00fc 19       		.uleb128 0x19
 4364 00fd 03       		.uleb128 0x3
 4365 00fe 0E       		.uleb128 0xe
 4366 00ff 3A       		.uleb128 0x3a
 4367 0100 0B       		.uleb128 0xb
 4368 0101 3B       		.uleb128 0x3b
 4369 0102 0B       		.uleb128 0xb
 4370 0103 27       		.uleb128 0x27
 4371 0104 19       		.uleb128 0x19
 4372 0105 11       		.uleb128 0x11
 4373 0106 01       		.uleb128 0x1
 4374 0107 12       		.uleb128 0x12
 4375 0108 06       		.uleb128 0x6
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 137


 4376 0109 40       		.uleb128 0x40
 4377 010a 18       		.uleb128 0x18
 4378 010b 9742     		.uleb128 0x2117
 4379 010d 19       		.uleb128 0x19
 4380 010e 00       		.byte	0
 4381 010f 00       		.byte	0
 4382 0110 14       		.uleb128 0x14
 4383 0111 2E       		.uleb128 0x2e
 4384 0112 00       		.byte	0
 4385 0113 3F       		.uleb128 0x3f
 4386 0114 19       		.uleb128 0x19
 4387 0115 03       		.uleb128 0x3
 4388 0116 0E       		.uleb128 0xe
 4389 0117 3A       		.uleb128 0x3a
 4390 0118 0B       		.uleb128 0xb
 4391 0119 3B       		.uleb128 0x3b
 4392 011a 05       		.uleb128 0x5
 4393 011b 27       		.uleb128 0x27
 4394 011c 19       		.uleb128 0x19
 4395 011d 11       		.uleb128 0x11
 4396 011e 01       		.uleb128 0x1
 4397 011f 12       		.uleb128 0x12
 4398 0120 06       		.uleb128 0x6
 4399 0121 40       		.uleb128 0x40
 4400 0122 18       		.uleb128 0x18
 4401 0123 9742     		.uleb128 0x2117
 4402 0125 19       		.uleb128 0x19
 4403 0126 00       		.byte	0
 4404 0127 00       		.byte	0
 4405 0128 15       		.uleb128 0x15
 4406 0129 2E       		.uleb128 0x2e
 4407 012a 01       		.byte	0x1
 4408 012b 3F       		.uleb128 0x3f
 4409 012c 19       		.uleb128 0x19
 4410 012d 03       		.uleb128 0x3
 4411 012e 0E       		.uleb128 0xe
 4412 012f 3A       		.uleb128 0x3a
 4413 0130 0B       		.uleb128 0xb
 4414 0131 3B       		.uleb128 0x3b
 4415 0132 0B       		.uleb128 0xb
 4416 0133 27       		.uleb128 0x27
 4417 0134 19       		.uleb128 0x19
 4418 0135 11       		.uleb128 0x11
 4419 0136 01       		.uleb128 0x1
 4420 0137 12       		.uleb128 0x12
 4421 0138 06       		.uleb128 0x6
 4422 0139 40       		.uleb128 0x40
 4423 013a 18       		.uleb128 0x18
 4424 013b 9742     		.uleb128 0x2117
 4425 013d 19       		.uleb128 0x19
 4426 013e 01       		.uleb128 0x1
 4427 013f 13       		.uleb128 0x13
 4428 0140 00       		.byte	0
 4429 0141 00       		.byte	0
 4430 0142 16       		.uleb128 0x16
 4431 0143 898201   		.uleb128 0x4109
 4432 0146 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 138


 4433 0147 11       		.uleb128 0x11
 4434 0148 01       		.uleb128 0x1
 4435 0149 31       		.uleb128 0x31
 4436 014a 13       		.uleb128 0x13
 4437 014b 00       		.byte	0
 4438 014c 00       		.byte	0
 4439 014d 17       		.uleb128 0x17
 4440 014e 2E       		.uleb128 0x2e
 4441 014f 00       		.byte	0
 4442 0150 3F       		.uleb128 0x3f
 4443 0151 19       		.uleb128 0x19
 4444 0152 03       		.uleb128 0x3
 4445 0153 0E       		.uleb128 0xe
 4446 0154 3A       		.uleb128 0x3a
 4447 0155 0B       		.uleb128 0xb
 4448 0156 3B       		.uleb128 0x3b
 4449 0157 05       		.uleb128 0x5
 4450 0158 27       		.uleb128 0x27
 4451 0159 19       		.uleb128 0x19
 4452 015a 49       		.uleb128 0x49
 4453 015b 13       		.uleb128 0x13
 4454 015c 11       		.uleb128 0x11
 4455 015d 01       		.uleb128 0x1
 4456 015e 12       		.uleb128 0x12
 4457 015f 06       		.uleb128 0x6
 4458 0160 40       		.uleb128 0x40
 4459 0161 18       		.uleb128 0x18
 4460 0162 9742     		.uleb128 0x2117
 4461 0164 19       		.uleb128 0x19
 4462 0165 00       		.byte	0
 4463 0166 00       		.byte	0
 4464 0167 18       		.uleb128 0x18
 4465 0168 2E       		.uleb128 0x2e
 4466 0169 01       		.byte	0x1
 4467 016a 3F       		.uleb128 0x3f
 4468 016b 19       		.uleb128 0x19
 4469 016c 03       		.uleb128 0x3
 4470 016d 0E       		.uleb128 0xe
 4471 016e 3A       		.uleb128 0x3a
 4472 016f 0B       		.uleb128 0xb
 4473 0170 3B       		.uleb128 0x3b
 4474 0171 05       		.uleb128 0x5
 4475 0172 27       		.uleb128 0x27
 4476 0173 19       		.uleb128 0x19
 4477 0174 11       		.uleb128 0x11
 4478 0175 01       		.uleb128 0x1
 4479 0176 12       		.uleb128 0x12
 4480 0177 06       		.uleb128 0x6
 4481 0178 40       		.uleb128 0x40
 4482 0179 18       		.uleb128 0x18
 4483 017a 9742     		.uleb128 0x2117
 4484 017c 19       		.uleb128 0x19
 4485 017d 01       		.uleb128 0x1
 4486 017e 13       		.uleb128 0x13
 4487 017f 00       		.byte	0
 4488 0180 00       		.byte	0
 4489 0181 19       		.uleb128 0x19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 139


 4490 0182 05       		.uleb128 0x5
 4491 0183 00       		.byte	0
 4492 0184 03       		.uleb128 0x3
 4493 0185 0E       		.uleb128 0xe
 4494 0186 3A       		.uleb128 0x3a
 4495 0187 0B       		.uleb128 0xb
 4496 0188 3B       		.uleb128 0x3b
 4497 0189 05       		.uleb128 0x5
 4498 018a 49       		.uleb128 0x49
 4499 018b 13       		.uleb128 0x13
 4500 018c 02       		.uleb128 0x2
 4501 018d 17       		.uleb128 0x17
 4502 018e 00       		.byte	0
 4503 018f 00       		.byte	0
 4504 0190 1A       		.uleb128 0x1a
 4505 0191 34       		.uleb128 0x34
 4506 0192 00       		.byte	0
 4507 0193 03       		.uleb128 0x3
 4508 0194 0E       		.uleb128 0xe
 4509 0195 3A       		.uleb128 0x3a
 4510 0196 0B       		.uleb128 0xb
 4511 0197 3B       		.uleb128 0x3b
 4512 0198 05       		.uleb128 0x5
 4513 0199 49       		.uleb128 0x49
 4514 019a 13       		.uleb128 0x13
 4515 019b 02       		.uleb128 0x2
 4516 019c 17       		.uleb128 0x17
 4517 019d 00       		.byte	0
 4518 019e 00       		.byte	0
 4519 019f 1B       		.uleb128 0x1b
 4520 01a0 05       		.uleb128 0x5
 4521 01a1 00       		.byte	0
 4522 01a2 03       		.uleb128 0x3
 4523 01a3 0E       		.uleb128 0xe
 4524 01a4 3A       		.uleb128 0x3a
 4525 01a5 0B       		.uleb128 0xb
 4526 01a6 3B       		.uleb128 0x3b
 4527 01a7 05       		.uleb128 0x5
 4528 01a8 49       		.uleb128 0x49
 4529 01a9 13       		.uleb128 0x13
 4530 01aa 02       		.uleb128 0x2
 4531 01ab 18       		.uleb128 0x18
 4532 01ac 00       		.byte	0
 4533 01ad 00       		.byte	0
 4534 01ae 1C       		.uleb128 0x1c
 4535 01af 2E       		.uleb128 0x2e
 4536 01b0 01       		.byte	0x1
 4537 01b1 3F       		.uleb128 0x3f
 4538 01b2 19       		.uleb128 0x19
 4539 01b3 03       		.uleb128 0x3
 4540 01b4 0E       		.uleb128 0xe
 4541 01b5 3A       		.uleb128 0x3a
 4542 01b6 0B       		.uleb128 0xb
 4543 01b7 3B       		.uleb128 0x3b
 4544 01b8 05       		.uleb128 0x5
 4545 01b9 27       		.uleb128 0x27
 4546 01ba 19       		.uleb128 0x19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 140


 4547 01bb 49       		.uleb128 0x49
 4548 01bc 13       		.uleb128 0x13
 4549 01bd 11       		.uleb128 0x11
 4550 01be 01       		.uleb128 0x1
 4551 01bf 12       		.uleb128 0x12
 4552 01c0 06       		.uleb128 0x6
 4553 01c1 40       		.uleb128 0x40
 4554 01c2 18       		.uleb128 0x18
 4555 01c3 9742     		.uleb128 0x2117
 4556 01c5 19       		.uleb128 0x19
 4557 01c6 01       		.uleb128 0x1
 4558 01c7 13       		.uleb128 0x13
 4559 01c8 00       		.byte	0
 4560 01c9 00       		.byte	0
 4561 01ca 1D       		.uleb128 0x1d
 4562 01cb 2E       		.uleb128 0x2e
 4563 01cc 00       		.byte	0
 4564 01cd 31       		.uleb128 0x31
 4565 01ce 13       		.uleb128 0x13
 4566 01cf 11       		.uleb128 0x11
 4567 01d0 01       		.uleb128 0x1
 4568 01d1 12       		.uleb128 0x12
 4569 01d2 06       		.uleb128 0x6
 4570 01d3 40       		.uleb128 0x40
 4571 01d4 18       		.uleb128 0x18
 4572 01d5 9742     		.uleb128 0x2117
 4573 01d7 19       		.uleb128 0x19
 4574 01d8 00       		.byte	0
 4575 01d9 00       		.byte	0
 4576 01da 1E       		.uleb128 0x1e
 4577 01db 34       		.uleb128 0x34
 4578 01dc 00       		.byte	0
 4579 01dd 03       		.uleb128 0x3
 4580 01de 0E       		.uleb128 0xe
 4581 01df 3A       		.uleb128 0x3a
 4582 01e0 0B       		.uleb128 0xb
 4583 01e1 3B       		.uleb128 0x3b
 4584 01e2 05       		.uleb128 0x5
 4585 01e3 49       		.uleb128 0x49
 4586 01e4 13       		.uleb128 0x13
 4587 01e5 02       		.uleb128 0x2
 4588 01e6 18       		.uleb128 0x18
 4589 01e7 00       		.byte	0
 4590 01e8 00       		.byte	0
 4591 01e9 1F       		.uleb128 0x1f
 4592 01ea 2E       		.uleb128 0x2e
 4593 01eb 01       		.byte	0x1
 4594 01ec 31       		.uleb128 0x31
 4595 01ed 13       		.uleb128 0x13
 4596 01ee 11       		.uleb128 0x11
 4597 01ef 01       		.uleb128 0x1
 4598 01f0 12       		.uleb128 0x12
 4599 01f1 06       		.uleb128 0x6
 4600 01f2 40       		.uleb128 0x40
 4601 01f3 18       		.uleb128 0x18
 4602 01f4 9742     		.uleb128 0x2117
 4603 01f6 19       		.uleb128 0x19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 141


 4604 01f7 01       		.uleb128 0x1
 4605 01f8 13       		.uleb128 0x13
 4606 01f9 00       		.byte	0
 4607 01fa 00       		.byte	0
 4608 01fb 20       		.uleb128 0x20
 4609 01fc 05       		.uleb128 0x5
 4610 01fd 00       		.byte	0
 4611 01fe 31       		.uleb128 0x31
 4612 01ff 13       		.uleb128 0x13
 4613 0200 02       		.uleb128 0x2
 4614 0201 17       		.uleb128 0x17
 4615 0202 00       		.byte	0
 4616 0203 00       		.byte	0
 4617 0204 21       		.uleb128 0x21
 4618 0205 05       		.uleb128 0x5
 4619 0206 00       		.byte	0
 4620 0207 31       		.uleb128 0x31
 4621 0208 13       		.uleb128 0x13
 4622 0209 02       		.uleb128 0x2
 4623 020a 18       		.uleb128 0x18
 4624 020b 00       		.byte	0
 4625 020c 00       		.byte	0
 4626 020d 22       		.uleb128 0x22
 4627 020e 34       		.uleb128 0x34
 4628 020f 00       		.byte	0
 4629 0210 31       		.uleb128 0x31
 4630 0211 13       		.uleb128 0x13
 4631 0212 02       		.uleb128 0x2
 4632 0213 18       		.uleb128 0x18
 4633 0214 00       		.byte	0
 4634 0215 00       		.byte	0
 4635 0216 23       		.uleb128 0x23
 4636 0217 34       		.uleb128 0x34
 4637 0218 00       		.byte	0
 4638 0219 31       		.uleb128 0x31
 4639 021a 13       		.uleb128 0x13
 4640 021b 1C       		.uleb128 0x1c
 4641 021c 06       		.uleb128 0x6
 4642 021d 00       		.byte	0
 4643 021e 00       		.byte	0
 4644 021f 24       		.uleb128 0x24
 4645 0220 34       		.uleb128 0x34
 4646 0221 00       		.byte	0
 4647 0222 03       		.uleb128 0x3
 4648 0223 0E       		.uleb128 0xe
 4649 0224 3A       		.uleb128 0x3a
 4650 0225 0B       		.uleb128 0xb
 4651 0226 3B       		.uleb128 0x3b
 4652 0227 05       		.uleb128 0x5
 4653 0228 49       		.uleb128 0x49
 4654 0229 13       		.uleb128 0x13
 4655 022a 1C       		.uleb128 0x1c
 4656 022b 06       		.uleb128 0x6
 4657 022c 00       		.byte	0
 4658 022d 00       		.byte	0
 4659 022e 25       		.uleb128 0x25
 4660 022f 34       		.uleb128 0x34
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 142


 4661 0230 00       		.byte	0
 4662 0231 31       		.uleb128 0x31
 4663 0232 13       		.uleb128 0x13
 4664 0233 00       		.byte	0
 4665 0234 00       		.byte	0
 4666 0235 26       		.uleb128 0x26
 4667 0236 34       		.uleb128 0x34
 4668 0237 00       		.byte	0
 4669 0238 31       		.uleb128 0x31
 4670 0239 13       		.uleb128 0x13
 4671 023a 1C       		.uleb128 0x1c
 4672 023b 0B       		.uleb128 0xb
 4673 023c 00       		.byte	0
 4674 023d 00       		.byte	0
 4675 023e 27       		.uleb128 0x27
 4676 023f 0B       		.uleb128 0xb
 4677 0240 01       		.byte	0x1
 4678 0241 11       		.uleb128 0x11
 4679 0242 01       		.uleb128 0x1
 4680 0243 12       		.uleb128 0x12
 4681 0244 06       		.uleb128 0x6
 4682 0245 01       		.uleb128 0x1
 4683 0246 13       		.uleb128 0x13
 4684 0247 00       		.byte	0
 4685 0248 00       		.byte	0
 4686 0249 28       		.uleb128 0x28
 4687 024a 34       		.uleb128 0x34
 4688 024b 00       		.byte	0
 4689 024c 31       		.uleb128 0x31
 4690 024d 13       		.uleb128 0x13
 4691 024e 02       		.uleb128 0x2
 4692 024f 17       		.uleb128 0x17
 4693 0250 00       		.byte	0
 4694 0251 00       		.byte	0
 4695 0252 29       		.uleb128 0x29
 4696 0253 898201   		.uleb128 0x4109
 4697 0256 01       		.byte	0x1
 4698 0257 11       		.uleb128 0x11
 4699 0258 01       		.uleb128 0x1
 4700 0259 31       		.uleb128 0x31
 4701 025a 13       		.uleb128 0x13
 4702 025b 01       		.uleb128 0x1
 4703 025c 13       		.uleb128 0x13
 4704 025d 00       		.byte	0
 4705 025e 00       		.byte	0
 4706 025f 2A       		.uleb128 0x2a
 4707 0260 8A8201   		.uleb128 0x410a
 4708 0263 00       		.byte	0
 4709 0264 02       		.uleb128 0x2
 4710 0265 18       		.uleb128 0x18
 4711 0266 9142     		.uleb128 0x2111
 4712 0268 18       		.uleb128 0x18
 4713 0269 00       		.byte	0
 4714 026a 00       		.byte	0
 4715 026b 2B       		.uleb128 0x2b
 4716 026c 898201   		.uleb128 0x4109
 4717 026f 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 143


 4718 0270 11       		.uleb128 0x11
 4719 0271 01       		.uleb128 0x1
 4720 0272 31       		.uleb128 0x31
 4721 0273 13       		.uleb128 0x13
 4722 0274 00       		.byte	0
 4723 0275 00       		.byte	0
 4724 0276 2C       		.uleb128 0x2c
 4725 0277 01       		.uleb128 0x1
 4726 0278 01       		.byte	0x1
 4727 0279 49       		.uleb128 0x49
 4728 027a 13       		.uleb128 0x13
 4729 027b 01       		.uleb128 0x1
 4730 027c 13       		.uleb128 0x13
 4731 027d 00       		.byte	0
 4732 027e 00       		.byte	0
 4733 027f 2D       		.uleb128 0x2d
 4734 0280 21       		.uleb128 0x21
 4735 0281 00       		.byte	0
 4736 0282 49       		.uleb128 0x49
 4737 0283 13       		.uleb128 0x13
 4738 0284 2F       		.uleb128 0x2f
 4739 0285 0B       		.uleb128 0xb
 4740 0286 00       		.byte	0
 4741 0287 00       		.byte	0
 4742 0288 2E       		.uleb128 0x2e
 4743 0289 1D       		.uleb128 0x1d
 4744 028a 00       		.byte	0
 4745 028b 31       		.uleb128 0x31
 4746 028c 13       		.uleb128 0x13
 4747 028d 52       		.uleb128 0x52
 4748 028e 01       		.uleb128 0x1
 4749 028f 55       		.uleb128 0x55
 4750 0290 17       		.uleb128 0x17
 4751 0291 58       		.uleb128 0x58
 4752 0292 0B       		.uleb128 0xb
 4753 0293 59       		.uleb128 0x59
 4754 0294 05       		.uleb128 0x5
 4755 0295 00       		.byte	0
 4756 0296 00       		.byte	0
 4757 0297 2F       		.uleb128 0x2f
 4758 0298 2E       		.uleb128 0x2e
 4759 0299 01       		.byte	0x1
 4760 029a 3F       		.uleb128 0x3f
 4761 029b 19       		.uleb128 0x19
 4762 029c 03       		.uleb128 0x3
 4763 029d 0E       		.uleb128 0xe
 4764 029e 3A       		.uleb128 0x3a
 4765 029f 0B       		.uleb128 0xb
 4766 02a0 3B       		.uleb128 0x3b
 4767 02a1 05       		.uleb128 0x5
 4768 02a2 27       		.uleb128 0x27
 4769 02a3 19       		.uleb128 0x19
 4770 02a4 11       		.uleb128 0x11
 4771 02a5 01       		.uleb128 0x1
 4772 02a6 12       		.uleb128 0x12
 4773 02a7 06       		.uleb128 0x6
 4774 02a8 40       		.uleb128 0x40
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 144


 4775 02a9 18       		.uleb128 0x18
 4776 02aa 9642     		.uleb128 0x2116
 4777 02ac 19       		.uleb128 0x19
 4778 02ad 01       		.uleb128 0x1
 4779 02ae 13       		.uleb128 0x13
 4780 02af 00       		.byte	0
 4781 02b0 00       		.byte	0
 4782 02b1 30       		.uleb128 0x30
 4783 02b2 34       		.uleb128 0x34
 4784 02b3 00       		.byte	0
 4785 02b4 03       		.uleb128 0x3
 4786 02b5 08       		.uleb128 0x8
 4787 02b6 3A       		.uleb128 0x3a
 4788 02b7 0B       		.uleb128 0xb
 4789 02b8 3B       		.uleb128 0x3b
 4790 02b9 05       		.uleb128 0x5
 4791 02ba 49       		.uleb128 0x49
 4792 02bb 13       		.uleb128 0x13
 4793 02bc 02       		.uleb128 0x2
 4794 02bd 17       		.uleb128 0x17
 4795 02be 00       		.byte	0
 4796 02bf 00       		.byte	0
 4797 02c0 31       		.uleb128 0x31
 4798 02c1 1D       		.uleb128 0x1d
 4799 02c2 01       		.byte	0x1
 4800 02c3 31       		.uleb128 0x31
 4801 02c4 13       		.uleb128 0x13
 4802 02c5 52       		.uleb128 0x52
 4803 02c6 01       		.uleb128 0x1
 4804 02c7 55       		.uleb128 0x55
 4805 02c8 17       		.uleb128 0x17
 4806 02c9 58       		.uleb128 0x58
 4807 02ca 0B       		.uleb128 0xb
 4808 02cb 59       		.uleb128 0x59
 4809 02cc 05       		.uleb128 0x5
 4810 02cd 01       		.uleb128 0x1
 4811 02ce 13       		.uleb128 0x13
 4812 02cf 00       		.byte	0
 4813 02d0 00       		.byte	0
 4814 02d1 32       		.uleb128 0x32
 4815 02d2 0B       		.uleb128 0xb
 4816 02d3 01       		.byte	0x1
 4817 02d4 55       		.uleb128 0x55
 4818 02d5 17       		.uleb128 0x17
 4819 02d6 00       		.byte	0
 4820 02d7 00       		.byte	0
 4821 02d8 33       		.uleb128 0x33
 4822 02d9 1D       		.uleb128 0x1d
 4823 02da 01       		.byte	0x1
 4824 02db 31       		.uleb128 0x31
 4825 02dc 13       		.uleb128 0x13
 4826 02dd 11       		.uleb128 0x11
 4827 02de 01       		.uleb128 0x1
 4828 02df 12       		.uleb128 0x12
 4829 02e0 06       		.uleb128 0x6
 4830 02e1 58       		.uleb128 0x58
 4831 02e2 0B       		.uleb128 0xb
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 145


 4832 02e3 59       		.uleb128 0x59
 4833 02e4 05       		.uleb128 0x5
 4834 02e5 01       		.uleb128 0x1
 4835 02e6 13       		.uleb128 0x13
 4836 02e7 00       		.byte	0
 4837 02e8 00       		.byte	0
 4838 02e9 34       		.uleb128 0x34
 4839 02ea 1D       		.uleb128 0x1d
 4840 02eb 00       		.byte	0
 4841 02ec 31       		.uleb128 0x31
 4842 02ed 13       		.uleb128 0x13
 4843 02ee 11       		.uleb128 0x11
 4844 02ef 01       		.uleb128 0x1
 4845 02f0 12       		.uleb128 0x12
 4846 02f1 06       		.uleb128 0x6
 4847 02f2 58       		.uleb128 0x58
 4848 02f3 0B       		.uleb128 0xb
 4849 02f4 59       		.uleb128 0x59
 4850 02f5 05       		.uleb128 0x5
 4851 02f6 00       		.byte	0
 4852 02f7 00       		.byte	0
 4853 02f8 35       		.uleb128 0x35
 4854 02f9 2E       		.uleb128 0x2e
 4855 02fa 01       		.byte	0x1
 4856 02fb 31       		.uleb128 0x31
 4857 02fc 13       		.uleb128 0x13
 4858 02fd 11       		.uleb128 0x11
 4859 02fe 01       		.uleb128 0x1
 4860 02ff 12       		.uleb128 0x12
 4861 0300 06       		.uleb128 0x6
 4862 0301 40       		.uleb128 0x40
 4863 0302 18       		.uleb128 0x18
 4864 0303 9642     		.uleb128 0x2116
 4865 0305 19       		.uleb128 0x19
 4866 0306 01       		.uleb128 0x1
 4867 0307 13       		.uleb128 0x13
 4868 0308 00       		.byte	0
 4869 0309 00       		.byte	0
 4870 030a 36       		.uleb128 0x36
 4871 030b 34       		.uleb128 0x34
 4872 030c 00       		.byte	0
 4873 030d 03       		.uleb128 0x3
 4874 030e 0E       		.uleb128 0xe
 4875 030f 3A       		.uleb128 0x3a
 4876 0310 0B       		.uleb128 0xb
 4877 0311 3B       		.uleb128 0x3b
 4878 0312 0B       		.uleb128 0xb
 4879 0313 49       		.uleb128 0x49
 4880 0314 13       		.uleb128 0x13
 4881 0315 02       		.uleb128 0x2
 4882 0316 18       		.uleb128 0x18
 4883 0317 00       		.byte	0
 4884 0318 00       		.byte	0
 4885 0319 37       		.uleb128 0x37
 4886 031a 34       		.uleb128 0x34
 4887 031b 00       		.byte	0
 4888 031c 03       		.uleb128 0x3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 146


 4889 031d 0E       		.uleb128 0xe
 4890 031e 3A       		.uleb128 0x3a
 4891 031f 0B       		.uleb128 0xb
 4892 0320 3B       		.uleb128 0x3b
 4893 0321 0B       		.uleb128 0xb
 4894 0322 49       		.uleb128 0x49
 4895 0323 13       		.uleb128 0x13
 4896 0324 3F       		.uleb128 0x3f
 4897 0325 19       		.uleb128 0x19
 4898 0326 02       		.uleb128 0x2
 4899 0327 18       		.uleb128 0x18
 4900 0328 00       		.byte	0
 4901 0329 00       		.byte	0
 4902 032a 38       		.uleb128 0x38
 4903 032b 26       		.uleb128 0x26
 4904 032c 00       		.byte	0
 4905 032d 49       		.uleb128 0x49
 4906 032e 13       		.uleb128 0x13
 4907 032f 00       		.byte	0
 4908 0330 00       		.byte	0
 4909 0331 39       		.uleb128 0x39
 4910 0332 2E       		.uleb128 0x2e
 4911 0333 00       		.byte	0
 4912 0334 3F       		.uleb128 0x3f
 4913 0335 19       		.uleb128 0x19
 4914 0336 3C       		.uleb128 0x3c
 4915 0337 19       		.uleb128 0x19
 4916 0338 6E       		.uleb128 0x6e
 4917 0339 0E       		.uleb128 0xe
 4918 033a 03       		.uleb128 0x3
 4919 033b 0E       		.uleb128 0xe
 4920 033c 3A       		.uleb128 0x3a
 4921 033d 0B       		.uleb128 0xb
 4922 033e 3B       		.uleb128 0x3b
 4923 033f 0B       		.uleb128 0xb
 4924 0340 00       		.byte	0
 4925 0341 00       		.byte	0
 4926 0342 00       		.byte	0
 4927              		.section	.debug_loc,"",%progbits
 4928              	.Ldebug_loc0:
 4929              	.LLST0:
 4930 0000 00000000 		.4byte	.LVL1
 4931 0004 07000000 		.4byte	.LVL2-1
 4932 0008 0100     		.2byte	0x1
 4933 000a 50       		.byte	0x50
 4934 000b 07000000 		.4byte	.LVL2-1
 4935 000f 1A000000 		.4byte	.LVL6
 4936 0013 0100     		.2byte	0x1
 4937 0015 54       		.byte	0x54
 4938 0016 1A000000 		.4byte	.LVL6
 4939 001a 20000000 		.4byte	.LFE6
 4940 001e 0400     		.2byte	0x4
 4941 0020 F3       		.byte	0xf3
 4942 0021 01       		.uleb128 0x1
 4943 0022 50       		.byte	0x50
 4944 0023 9F       		.byte	0x9f
 4945 0024 00000000 		.4byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 147


 4946 0028 00000000 		.4byte	0
 4947              	.LLST1:
 4948 002c 08000000 		.4byte	.LVL2
 4949 0030 19000000 		.4byte	.LVL5-1
 4950 0034 0100     		.2byte	0x1
 4951 0036 50       		.byte	0x50
 4952 0037 00000000 		.4byte	0
 4953 003b 00000000 		.4byte	0
 4954              	.LLST2:
 4955 003f 10000000 		.4byte	.LVL3
 4956 0043 14000000 		.4byte	.LVL4
 4957 0047 0100     		.2byte	0x1
 4958 0049 52       		.byte	0x52
 4959 004a 14000000 		.4byte	.LVL4
 4960 004e 19000000 		.4byte	.LVL5-1
 4961 0052 0100     		.2byte	0x1
 4962 0054 53       		.byte	0x53
 4963 0055 00000000 		.4byte	0
 4964 0059 00000000 		.4byte	0
 4965              	.LLST3:
 4966 005d 06000000 		.4byte	.LVL8
 4967 0061 0D000000 		.4byte	.LVL10-1
 4968 0065 0100     		.2byte	0x1
 4969 0067 50       		.byte	0x50
 4970 0068 00000000 		.4byte	0
 4971 006c 00000000 		.4byte	0
 4972              	.LLST4:
 4973 0070 0A000000 		.4byte	.LVL9
 4974 0074 12000000 		.4byte	.LVL11
 4975 0078 0500     		.2byte	0x5
 4976 007a 74       		.byte	0x74
 4977 007b 00       		.sleb128 0
 4978 007c 37       		.byte	0x37
 4979 007d 1A       		.byte	0x1a
 4980 007e 9F       		.byte	0x9f
 4981 007f 12000000 		.4byte	.LVL11
 4982 0083 18000000 		.4byte	.LFE8
 4983 0087 0100     		.2byte	0x1
 4984 0089 50       		.byte	0x50
 4985 008a 00000000 		.4byte	0
 4986 008e 00000000 		.4byte	0
 4987              	.LLST5:
 4988 0092 00000000 		.4byte	.LVL12
 4989 0096 07000000 		.4byte	.LVL13-1
 4990 009a 0100     		.2byte	0x1
 4991 009c 50       		.byte	0x50
 4992 009d 07000000 		.4byte	.LVL13-1
 4993 00a1 0C000000 		.4byte	.LVL14
 4994 00a5 0100     		.2byte	0x1
 4995 00a7 54       		.byte	0x54
 4996 00a8 0C000000 		.4byte	.LVL14
 4997 00ac 2C000000 		.4byte	.LFE9
 4998 00b0 0400     		.2byte	0x4
 4999 00b2 F3       		.byte	0xf3
 5000 00b3 01       		.uleb128 0x1
 5001 00b4 50       		.byte	0x50
 5002 00b5 9F       		.byte	0x9f
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 148


 5003 00b6 00000000 		.4byte	0
 5004 00ba 00000000 		.4byte	0
 5005              	.LLST6:
 5006 00be 08000000 		.4byte	.LVL13
 5007 00c2 21000000 		.4byte	.LVL15-1
 5008 00c6 0100     		.2byte	0x1
 5009 00c8 50       		.byte	0x50
 5010 00c9 00000000 		.4byte	0
 5011 00cd 00000000 		.4byte	0
 5012              	.LLST7:
 5013 00d1 00000000 		.4byte	.LVL16
 5014 00d5 08000000 		.4byte	.LVL17
 5015 00d9 0100     		.2byte	0x1
 5016 00db 50       		.byte	0x50
 5017 00dc 08000000 		.4byte	.LVL17
 5018 00e0 14000000 		.4byte	.LFE15
 5019 00e4 0100     		.2byte	0x1
 5020 00e6 52       		.byte	0x52
 5021 00e7 00000000 		.4byte	0
 5022 00eb 00000000 		.4byte	0
 5023              	.LLST8:
 5024 00ef 0A000000 		.4byte	.LVL18
 5025 00f3 0C000000 		.4byte	.LVL19
 5026 00f7 0500     		.2byte	0x5
 5027 00f9 70       		.byte	0x70
 5028 00fa 00       		.sleb128 0
 5029 00fb 49       		.byte	0x49
 5030 00fc 1A       		.byte	0x1a
 5031 00fd 9F       		.byte	0x9f
 5032 00fe 0C000000 		.4byte	.LVL19
 5033 0102 14000000 		.4byte	.LFE15
 5034 0106 0100     		.2byte	0x1
 5035 0108 50       		.byte	0x50
 5036 0109 00000000 		.4byte	0
 5037 010d 00000000 		.4byte	0
 5038              	.LLST9:
 5039 0111 00000000 		.4byte	.LVL22
 5040 0115 04000000 		.4byte	.LVL23
 5041 0119 0100     		.2byte	0x1
 5042 011b 50       		.byte	0x50
 5043 011c 04000000 		.4byte	.LVL23
 5044 0120 0E000000 		.4byte	.LFE18
 5045 0124 0400     		.2byte	0x4
 5046 0126 F3       		.byte	0xf3
 5047 0127 01       		.uleb128 0x1
 5048 0128 50       		.byte	0x50
 5049 0129 9F       		.byte	0x9f
 5050 012a 00000000 		.4byte	0
 5051 012e 00000000 		.4byte	0
 5052              	.LLST10:
 5053 0132 00000000 		.4byte	.LVL25
 5054 0136 04000000 		.4byte	.LVL26
 5055 013a 0100     		.2byte	0x1
 5056 013c 50       		.byte	0x50
 5057 013d 04000000 		.4byte	.LVL26
 5058 0141 0C000000 		.4byte	.LFE19
 5059 0145 0400     		.2byte	0x4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 149


 5060 0147 F3       		.byte	0xf3
 5061 0148 01       		.uleb128 0x1
 5062 0149 50       		.byte	0x50
 5063 014a 9F       		.byte	0x9f
 5064 014b 00000000 		.4byte	0
 5065 014f 00000000 		.4byte	0
 5066              	.LLST11:
 5067 0153 00000000 		.4byte	.LVL27
 5068 0157 04000000 		.4byte	.LVL28
 5069 015b 0100     		.2byte	0x1
 5070 015d 50       		.byte	0x50
 5071 015e 04000000 		.4byte	.LVL28
 5072 0162 10000000 		.4byte	.LFE20
 5073 0166 0400     		.2byte	0x4
 5074 0168 F3       		.byte	0xf3
 5075 0169 01       		.uleb128 0x1
 5076 016a 50       		.byte	0x50
 5077 016b 9F       		.byte	0x9f
 5078 016c 00000000 		.4byte	0
 5079 0170 00000000 		.4byte	0
 5080              	.LLST12:
 5081 0174 00000000 		.4byte	.LVL30
 5082 0178 04000000 		.4byte	.LVL31
 5083 017c 0100     		.2byte	0x1
 5084 017e 50       		.byte	0x50
 5085 017f 04000000 		.4byte	.LVL31
 5086 0183 10000000 		.4byte	.LFE21
 5087 0187 0400     		.2byte	0x4
 5088 0189 F3       		.byte	0xf3
 5089 018a 01       		.uleb128 0x1
 5090 018b 50       		.byte	0x50
 5091 018c 9F       		.byte	0x9f
 5092 018d 00000000 		.4byte	0
 5093 0191 00000000 		.4byte	0
 5094              	.LLST13:
 5095 0195 00000000 		.4byte	.LVL32
 5096 0199 17000000 		.4byte	.LVL34-1
 5097 019d 0100     		.2byte	0x1
 5098 019f 50       		.byte	0x50
 5099 01a0 17000000 		.4byte	.LVL34-1
 5100 01a4 34000000 		.4byte	.LFE22
 5101 01a8 0400     		.2byte	0x4
 5102 01aa F3       		.byte	0xf3
 5103 01ab 01       		.uleb128 0x1
 5104 01ac 50       		.byte	0x50
 5105 01ad 9F       		.byte	0x9f
 5106 01ae 00000000 		.4byte	0
 5107 01b2 00000000 		.4byte	0
 5108              	.LLST14:
 5109 01b6 00000000 		.4byte	.LVL32
 5110 01ba 17000000 		.4byte	.LVL34-1
 5111 01be 0100     		.2byte	0x1
 5112 01c0 51       		.byte	0x51
 5113 01c1 17000000 		.4byte	.LVL34-1
 5114 01c5 34000000 		.4byte	.LFE22
 5115 01c9 0400     		.2byte	0x4
 5116 01cb F3       		.byte	0xf3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 150


 5117 01cc 01       		.uleb128 0x1
 5118 01cd 51       		.byte	0x51
 5119 01ce 9F       		.byte	0x9f
 5120 01cf 00000000 		.4byte	0
 5121 01d3 00000000 		.4byte	0
 5122              	.LLST15:
 5123 01d7 18000000 		.4byte	.LVL34
 5124 01db 2B000000 		.4byte	.LVL38-1
 5125 01df 0100     		.2byte	0x1
 5126 01e1 50       		.byte	0x50
 5127 01e2 00000000 		.4byte	0
 5128 01e6 00000000 		.4byte	0
 5129              	.LLST16:
 5130 01ea 10000000 		.4byte	.LVL33
 5131 01ee 2C000000 		.4byte	.LVL39
 5132 01f2 0100     		.2byte	0x1
 5133 01f4 55       		.byte	0x55
 5134 01f5 00000000 		.4byte	0
 5135 01f9 00000000 		.4byte	0
 5136              	.LLST17:
 5137 01fd 22000000 		.4byte	.LVL35
 5138 0201 26000000 		.4byte	.LVL37
 5139 0205 0100     		.2byte	0x1
 5140 0207 53       		.byte	0x53
 5141 0208 26000000 		.4byte	.LVL37
 5142 020c 2C000000 		.4byte	.LVL40
 5143 0210 0100     		.2byte	0x1
 5144 0212 57       		.byte	0x57
 5145 0213 00000000 		.4byte	0
 5146 0217 00000000 		.4byte	0
 5147              	.LLST18:
 5148 021b 00000000 		.4byte	.LVL41
 5149 021f 18000000 		.4byte	.LVL44
 5150 0223 0100     		.2byte	0x1
 5151 0225 50       		.byte	0x50
 5152 0226 18000000 		.4byte	.LVL44
 5153 022a 20000000 		.4byte	.LFE23
 5154 022e 0400     		.2byte	0x4
 5155 0230 F3       		.byte	0xf3
 5156 0231 01       		.uleb128 0x1
 5157 0232 50       		.byte	0x50
 5158 0233 9F       		.byte	0x9f
 5159 0234 00000000 		.4byte	0
 5160 0238 00000000 		.4byte	0
 5161              	.LLST19:
 5162 023c 0A000000 		.4byte	.LVL42
 5163 0240 16000000 		.4byte	.LVL43
 5164 0244 0F00     		.2byte	0xf
 5165 0246 71       		.byte	0x71
 5166 0247 00       		.sleb128 0
 5167 0248 70       		.byte	0x70
 5168 0249 00       		.sleb128 0
 5169 024a 33       		.byte	0x33
 5170 024b 1A       		.byte	0x1a
 5171 024c 08       		.byte	0x8
 5172 024d FF       		.byte	0xff
 5173 024e 1A       		.byte	0x1a
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 151


 5174 024f 33       		.byte	0x33
 5175 0250 24       		.byte	0x24
 5176 0251 23       		.byte	0x23
 5177 0252 06       		.uleb128 0x6
 5178 0253 25       		.byte	0x25
 5179 0254 9F       		.byte	0x9f
 5180 0255 00000000 		.4byte	0
 5181 0259 00000000 		.4byte	0
 5182              	.LLST20:
 5183 025d 00000000 		.4byte	.LVL45
 5184 0261 04000000 		.4byte	.LVL46
 5185 0265 0100     		.2byte	0x1
 5186 0267 50       		.byte	0x50
 5187 0268 04000000 		.4byte	.LVL46
 5188 026c 14000000 		.4byte	.LFE24
 5189 0270 0400     		.2byte	0x4
 5190 0272 F3       		.byte	0xf3
 5191 0273 01       		.uleb128 0x1
 5192 0274 50       		.byte	0x50
 5193 0275 9F       		.byte	0x9f
 5194 0276 00000000 		.4byte	0
 5195 027a 00000000 		.4byte	0
 5196              	.LLST21:
 5197 027e 00000000 		.4byte	.LVL47
 5198 0282 06000000 		.4byte	.LVL48
 5199 0286 0100     		.2byte	0x1
 5200 0288 50       		.byte	0x50
 5201 0289 06000000 		.4byte	.LVL48
 5202 028d 18000000 		.4byte	.LFE25
 5203 0291 0400     		.2byte	0x4
 5204 0293 F3       		.byte	0xf3
 5205 0294 01       		.uleb128 0x1
 5206 0295 50       		.byte	0x50
 5207 0296 9F       		.byte	0x9f
 5208 0297 00000000 		.4byte	0
 5209 029b 00000000 		.4byte	0
 5210              	.LLST22:
 5211 029f 00000000 		.4byte	.LVL49
 5212 02a3 04000000 		.4byte	.LVL50
 5213 02a7 0100     		.2byte	0x1
 5214 02a9 50       		.byte	0x50
 5215 02aa 04000000 		.4byte	.LVL50
 5216 02ae 14000000 		.4byte	.LFE26
 5217 02b2 0400     		.2byte	0x4
 5218 02b4 F3       		.byte	0xf3
 5219 02b5 01       		.uleb128 0x1
 5220 02b6 50       		.byte	0x50
 5221 02b7 9F       		.byte	0x9f
 5222 02b8 00000000 		.4byte	0
 5223 02bc 00000000 		.4byte	0
 5224              	.LLST23:
 5225 02c0 00000000 		.4byte	.LVL51
 5226 02c4 04000000 		.4byte	.LVL52
 5227 02c8 0100     		.2byte	0x1
 5228 02ca 50       		.byte	0x50
 5229 02cb 04000000 		.4byte	.LVL52
 5230 02cf 14000000 		.4byte	.LFE27
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 152


 5231 02d3 0400     		.2byte	0x4
 5232 02d5 F3       		.byte	0xf3
 5233 02d6 01       		.uleb128 0x1
 5234 02d7 50       		.byte	0x50
 5235 02d8 9F       		.byte	0x9f
 5236 02d9 00000000 		.4byte	0
 5237 02dd 00000000 		.4byte	0
 5238              	.LLST24:
 5239 02e1 00000000 		.4byte	.LVL53
 5240 02e5 04000000 		.4byte	.LVL54
 5241 02e9 0100     		.2byte	0x1
 5242 02eb 50       		.byte	0x50
 5243 02ec 04000000 		.4byte	.LVL54
 5244 02f0 14000000 		.4byte	.LFE28
 5245 02f4 0400     		.2byte	0x4
 5246 02f6 F3       		.byte	0xf3
 5247 02f7 01       		.uleb128 0x1
 5248 02f8 50       		.byte	0x50
 5249 02f9 9F       		.byte	0x9f
 5250 02fa 00000000 		.4byte	0
 5251 02fe 00000000 		.4byte	0
 5252              	.LLST25:
 5253 0302 00000000 		.4byte	.LVL56
 5254 0306 08000000 		.4byte	.LVL57
 5255 030a 0100     		.2byte	0x1
 5256 030c 50       		.byte	0x50
 5257 030d 08000000 		.4byte	.LVL57
 5258 0311 22000000 		.4byte	.LVL61
 5259 0315 0100     		.2byte	0x1
 5260 0317 54       		.byte	0x54
 5261 0318 00000000 		.4byte	0
 5262 031c 00000000 		.4byte	0
 5263              	.LLST26:
 5264 0320 14000000 		.4byte	.LVL65
 5265 0324 18000000 		.4byte	.LVL66
 5266 0328 0200     		.2byte	0x2
 5267 032a 30       		.byte	0x30
 5268 032b 9F       		.byte	0x9f
 5269 032c 18000000 		.4byte	.LVL66
 5270 0330 26000000 		.4byte	.LVL67
 5271 0334 0100     		.2byte	0x1
 5272 0336 52       		.byte	0x52
 5273 0337 26000000 		.4byte	.LVL67
 5274 033b 28000000 		.4byte	.LVL68
 5275 033f 0300     		.2byte	0x3
 5276 0341 72       		.byte	0x72
 5277 0342 7D       		.sleb128 -3
 5278 0343 9F       		.byte	0x9f
 5279 0344 28000000 		.4byte	.LVL68
 5280 0348 30000000 		.4byte	.LVL70
 5281 034c 0100     		.2byte	0x1
 5282 034e 52       		.byte	0x52
 5283 034f 00000000 		.4byte	0
 5284 0353 00000000 		.4byte	0
 5285              	.LLST27:
 5286 0357 14000000 		.4byte	.LVL65
 5287 035b 26000000 		.4byte	.LVL67
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 153


 5288 035f 0200     		.2byte	0x2
 5289 0361 33       		.byte	0x33
 5290 0362 9F       		.byte	0x9f
 5291 0363 26000000 		.4byte	.LVL67
 5292 0367 28000000 		.4byte	.LVL68
 5293 036b 0100     		.2byte	0x1
 5294 036d 52       		.byte	0x52
 5295 036e 28000000 		.4byte	.LVL68
 5296 0372 30000000 		.4byte	.LVL70
 5297 0376 0200     		.2byte	0x2
 5298 0378 33       		.byte	0x33
 5299 0379 9F       		.byte	0x9f
 5300 037a 30000000 		.4byte	.LVL70
 5301 037e 6A000000 		.4byte	.LVL73
 5302 0382 0100     		.2byte	0x1
 5303 0384 52       		.byte	0x52
 5304 0385 6A000000 		.4byte	.LVL73
 5305 0389 6E000000 		.4byte	.LVL74
 5306 038d 0700     		.2byte	0x7
 5307 038f 70       		.byte	0x70
 5308 0390 B39C8080 		.sleb128 -268431821
 5308      7F
 5309 0395 9F       		.byte	0x9f
 5310 0396 00000000 		.4byte	0
 5311 039a 00000000 		.4byte	0
 5312              	.LLST28:
 5313 039e 14000000 		.4byte	.LVL65
 5314 03a2 AA000000 		.4byte	.LVL82
 5315 03a6 0100     		.2byte	0x1
 5316 03a8 54       		.byte	0x54
 5317 03a9 00000000 		.4byte	0
 5318 03ad 00000000 		.4byte	0
 5319              	.LLST29:
 5320 03b1 50000000 		.4byte	.LVL71
 5321 03b5 5C000000 		.4byte	.LVL72
 5322 03b9 0100     		.2byte	0x1
 5323 03bb 50       		.byte	0x50
 5324 03bc 5C000000 		.4byte	.LVL72
 5325 03c0 76000000 		.4byte	.LVL76
 5326 03c4 0700     		.2byte	0x7
 5327 03c6 73       		.byte	0x73
 5328 03c7 00       		.sleb128 0
 5329 03c8 44       		.byte	0x44
 5330 03c9 40       		.byte	0x40
 5331 03ca 24       		.byte	0x24
 5332 03cb 21       		.byte	0x21
 5333 03cc 9F       		.byte	0x9f
 5334 03cd 80000000 		.4byte	.LVL77
 5335 03d1 86000000 		.4byte	.LVL78
 5336 03d5 0100     		.2byte	0x1
 5337 03d7 53       		.byte	0x53
 5338 03d8 86000000 		.4byte	.LVL78
 5339 03dc 8A000000 		.4byte	.LVL79
 5340 03e0 0200     		.2byte	0x2
 5341 03e2 71       		.byte	0x71
 5342 03e3 00       		.sleb128 0
 5343 03e4 00000000 		.4byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 154


 5344 03e8 00000000 		.4byte	0
 5345              	.LLST30:
 5346 03ec 6E000000 		.4byte	.LVL74
 5347 03f0 72000000 		.4byte	.LVL75
 5348 03f4 1900     		.2byte	0x19
 5349 03f6 70       		.byte	0x70
 5350 03f7 00       		.sleb128 0
 5351 03f8 76       		.byte	0x76
 5352 03f9 00       		.sleb128 0
 5353 03fa 22       		.byte	0x22
 5354 03fb 12       		.byte	0x12
 5355 03fc 40       		.byte	0x40
 5356 03fd 4B       		.byte	0x4b
 5357 03fe 24       		.byte	0x24
 5358 03ff 22       		.byte	0x22
 5359 0400 08       		.byte	0x8
 5360 0401 FF       		.byte	0xff
 5361 0402 16       		.byte	0x16
 5362 0403 14       		.byte	0x14
 5363 0404 40       		.byte	0x40
 5364 0405 4B       		.byte	0x4b
 5365 0406 24       		.byte	0x24
 5366 0407 22       		.byte	0x22
 5367 0408 2D       		.byte	0x2d
 5368 0409 28       		.byte	0x28
 5369 040a 0100     		.2byte	0x1
 5370 040c 16       		.byte	0x16
 5371 040d 13       		.byte	0x13
 5372 040e 9F       		.byte	0x9f
 5373 040f 00000000 		.4byte	0
 5374 0413 00000000 		.4byte	0
 5375              	.LLST31:
 5376 0417 00000000 		.4byte	.LVL83
 5377 041b 09000000 		.4byte	.LVL84-1
 5378 041f 0100     		.2byte	0x1
 5379 0421 50       		.byte	0x50
 5380 0422 09000000 		.4byte	.LVL84-1
 5381 0426 30000000 		.4byte	.LVL90
 5382 042a 0100     		.2byte	0x1
 5383 042c 54       		.byte	0x54
 5384 042d 30000000 		.4byte	.LVL90
 5385 0431 80000000 		.4byte	.LFE10
 5386 0435 0400     		.2byte	0x4
 5387 0437 F3       		.byte	0xf3
 5388 0438 01       		.uleb128 0x1
 5389 0439 50       		.byte	0x50
 5390 043a 9F       		.byte	0x9f
 5391 043b 00000000 		.4byte	0
 5392 043f 00000000 		.4byte	0
 5393              	.LLST32:
 5394 0443 00000000 		.4byte	.LVL83
 5395 0447 16000000 		.4byte	.LVL87
 5396 044b 0200     		.2byte	0x2
 5397 044d 30       		.byte	0x30
 5398 044e 9F       		.byte	0x9f
 5399 044f 16000000 		.4byte	.LVL87
 5400 0453 1C000000 		.4byte	.LVL89
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 155


 5401 0457 0200     		.2byte	0x2
 5402 0459 31       		.byte	0x31
 5403 045a 9F       		.byte	0x9f
 5404 045b 1C000000 		.4byte	.LVL89
 5405 045f 55000000 		.4byte	.LVL91-1
 5406 0463 0100     		.2byte	0x1
 5407 0465 52       		.byte	0x52
 5408 0466 00000000 		.4byte	0
 5409 046a 00000000 		.4byte	0
 5410              	.LLST33:
 5411 046e 0C000000 		.4byte	.LVL85
 5412 0472 5E000000 		.4byte	.LVL93
 5413 0476 0100     		.2byte	0x1
 5414 0478 55       		.byte	0x55
 5415 0479 00000000 		.4byte	0
 5416 047d 00000000 		.4byte	0
 5417              	.LLST34:
 5418 0481 00000000 		.4byte	.LVL94
 5419 0485 08000000 		.4byte	.LVL95
 5420 0489 0100     		.2byte	0x1
 5421 048b 50       		.byte	0x50
 5422 048c 08000000 		.4byte	.LVL95
 5423 0490 14000000 		.4byte	.LFE32
 5424 0494 0400     		.2byte	0x4
 5425 0496 F3       		.byte	0xf3
 5426 0497 01       		.uleb128 0x1
 5427 0498 50       		.byte	0x50
 5428 0499 9F       		.byte	0x9f
 5429 049a 00000000 		.4byte	0
 5430 049e 00000000 		.4byte	0
 5431              	.LLST35:
 5432 04a2 00000000 		.4byte	.LVL97
 5433 04a6 0E000000 		.4byte	.LVL98
 5434 04aa 0100     		.2byte	0x1
 5435 04ac 50       		.byte	0x50
 5436 04ad 0E000000 		.4byte	.LVL98
 5437 04b1 44000000 		.4byte	.LFE11
 5438 04b5 0400     		.2byte	0x4
 5439 04b7 F3       		.byte	0xf3
 5440 04b8 01       		.uleb128 0x1
 5441 04b9 50       		.byte	0x50
 5442 04ba 9F       		.byte	0x9f
 5443 04bb 00000000 		.4byte	0
 5444 04bf 00000000 		.4byte	0
 5445              	.LLST36:
 5446 04c3 00000000 		.4byte	.LVL100
 5447 04c7 18000000 		.4byte	.LVL101
 5448 04cb 0100     		.2byte	0x1
 5449 04cd 50       		.byte	0x50
 5450 04ce 18000000 		.4byte	.LVL101
 5451 04d2 48000000 		.4byte	.LFE33
 5452 04d6 0400     		.2byte	0x4
 5453 04d8 F3       		.byte	0xf3
 5454 04d9 01       		.uleb128 0x1
 5455 04da 50       		.byte	0x50
 5456 04db 9F       		.byte	0x9f
 5457 04dc 00000000 		.4byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 156


 5458 04e0 00000000 		.4byte	0
 5459              	.LLST37:
 5460 04e4 00000000 		.4byte	.LVL104
 5461 04e8 0C000000 		.4byte	.LVL105
 5462 04ec 0200     		.2byte	0x2
 5463 04ee 30       		.byte	0x30
 5464 04ef 9F       		.byte	0x9f
 5465 04f0 0C000000 		.4byte	.LVL105
 5466 04f4 10000000 		.4byte	.LVL106
 5467 04f8 0200     		.2byte	0x2
 5468 04fa 31       		.byte	0x31
 5469 04fb 9F       		.byte	0x9f
 5470 04fc 10000000 		.4byte	.LVL106
 5471 0500 12000000 		.4byte	.LVL107
 5472 0504 0200     		.2byte	0x2
 5473 0506 32       		.byte	0x32
 5474 0507 9F       		.byte	0x9f
 5475 0508 12000000 		.4byte	.LVL107
 5476 050c 14000000 		.4byte	.LVL108
 5477 0510 0200     		.2byte	0x2
 5478 0512 33       		.byte	0x33
 5479 0513 9F       		.byte	0x9f
 5480 0514 14000000 		.4byte	.LVL108
 5481 0518 54000000 		.4byte	.LFE35
 5482 051c 0200     		.2byte	0x2
 5483 051e 35       		.byte	0x35
 5484 051f 9F       		.byte	0x9f
 5485 0520 00000000 		.4byte	0
 5486 0524 00000000 		.4byte	0
 5487              	.LLST38:
 5488 0528 18000000 		.4byte	.LVL110
 5489 052c 22000000 		.4byte	.LVL111
 5490 0530 0200     		.2byte	0x2
 5491 0532 31       		.byte	0x31
 5492 0533 9F       		.byte	0x9f
 5493 0534 00000000 		.4byte	0
 5494 0538 00000000 		.4byte	0
 5495              	.LLST40:
 5496 053c 14000000 		.4byte	.LVL108
 5497 0540 18000000 		.4byte	.LVL110
 5498 0544 0600     		.2byte	0x6
 5499 0546 03       		.byte	0x3
 5500 0547 00000000 		.4byte	CySysTickServiceCallbacks
 5501 054b 9F       		.byte	0x9f
 5502 054c 00000000 		.4byte	0
 5503 0550 00000000 		.4byte	0
 5504              	.LLST41:
 5505 0554 14000000 		.4byte	.LVL108
 5506 0558 18000000 		.4byte	.LVL110
 5507 055c 0200     		.2byte	0x2
 5508 055e 3F       		.byte	0x3f
 5509 055f 9F       		.byte	0x9f
 5510 0560 00000000 		.4byte	0
 5511 0564 00000000 		.4byte	0
 5512              	.LLST42:
 5513 0568 14000000 		.4byte	.LVL108
 5514 056c 16000000 		.4byte	.LVL109
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 157


 5515 0570 0500     		.2byte	0x5
 5516 0572 0C       		.byte	0xc
 5517 0573 3C000020 		.4byte	0x2000003c
 5518 0577 16000000 		.4byte	.LVL109
 5519 057b 18000000 		.4byte	.LVL110
 5520 057f 0200     		.2byte	0x2
 5521 0581 73       		.byte	0x73
 5522 0582 00       		.sleb128 0
 5523 0583 00000000 		.4byte	0
 5524 0587 00000000 		.4byte	0
 5525              	.LLST43:
 5526 058b 2C000000 		.4byte	.LVL112
 5527 058f 30000000 		.4byte	.LVL113
 5528 0593 0100     		.2byte	0x1
 5529 0595 50       		.byte	0x50
 5530 0596 00000000 		.4byte	0
 5531 059a 00000000 		.4byte	0
 5532              	.LLST44:
 5533 059e 00000000 		.4byte	.LVL117
 5534 05a2 04000000 		.4byte	.LVL118
 5535 05a6 0100     		.2byte	0x1
 5536 05a8 50       		.byte	0x50
 5537 05a9 04000000 		.4byte	.LVL118
 5538 05ad 10000000 		.4byte	.LFE40
 5539 05b1 0400     		.2byte	0x4
 5540 05b3 F3       		.byte	0xf3
 5541 05b4 01       		.uleb128 0x1
 5542 05b5 50       		.byte	0x50
 5543 05b6 9F       		.byte	0x9f
 5544 05b7 00000000 		.4byte	0
 5545 05bb 00000000 		.4byte	0
 5546              	.LLST45:
 5547 05bf 0A000000 		.4byte	.LVL120
 5548 05c3 0E000000 		.4byte	.LVL121
 5549 05c7 0200     		.2byte	0x2
 5550 05c9 31       		.byte	0x31
 5551 05ca 9F       		.byte	0x9f
 5552 05cb 00000000 		.4byte	0
 5553 05cf 00000000 		.4byte	0
 5554              	.LLST46:
 5555 05d3 00000000 		.4byte	.LVL124
 5556 05d7 06000000 		.4byte	.LVL125
 5557 05db 0100     		.2byte	0x1
 5558 05dd 50       		.byte	0x50
 5559 05de 06000000 		.4byte	.LVL125
 5560 05e2 10000000 		.4byte	.LFE47
 5561 05e6 0400     		.2byte	0x4
 5562 05e8 F3       		.byte	0xf3
 5563 05e9 01       		.uleb128 0x1
 5564 05ea 50       		.byte	0x50
 5565 05eb 9F       		.byte	0x9f
 5566 05ec 00000000 		.4byte	0
 5567 05f0 00000000 		.4byte	0
 5568              	.LLST47:
 5569 05f4 00000000 		.4byte	.LVL126
 5570 05f8 04000000 		.4byte	.LVL127
 5571 05fc 0100     		.2byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 158


 5572 05fe 50       		.byte	0x50
 5573 05ff 04000000 		.4byte	.LVL127
 5574 0603 0C000000 		.4byte	.LFE48
 5575 0607 0400     		.2byte	0x4
 5576 0609 F3       		.byte	0xf3
 5577 060a 01       		.uleb128 0x1
 5578 060b 50       		.byte	0x50
 5579 060c 9F       		.byte	0x9f
 5580 060d 00000000 		.4byte	0
 5581 0611 00000000 		.4byte	0
 5582              	.LLST48:
 5583 0615 00000000 		.4byte	.LVL129
 5584 0619 08000000 		.4byte	.LVL130
 5585 061d 0100     		.2byte	0x1
 5586 061f 50       		.byte	0x50
 5587 0620 08000000 		.4byte	.LVL130
 5588 0624 20000000 		.4byte	.LFE51
 5589 0628 0400     		.2byte	0x4
 5590 062a F3       		.byte	0xf3
 5591 062b 01       		.uleb128 0x1
 5592 062c 50       		.byte	0x50
 5593 062d 9F       		.byte	0x9f
 5594 062e 00000000 		.4byte	0
 5595 0632 00000000 		.4byte	0
 5596              	.LLST49:
 5597 0636 0A000000 		.4byte	.LVL131
 5598 063a 12000000 		.4byte	.LVL132
 5599 063e 0100     		.2byte	0x1
 5600 0640 53       		.byte	0x53
 5601 0641 12000000 		.4byte	.LVL132
 5602 0645 20000000 		.4byte	.LFE51
 5603 0649 0100     		.2byte	0x1
 5604 064b 50       		.byte	0x50
 5605 064c 00000000 		.4byte	0
 5606 0650 00000000 		.4byte	0
 5607              	.LLST50:
 5608 0654 00000000 		.4byte	.LVL133
 5609 0658 08000000 		.4byte	.LVL134
 5610 065c 0100     		.2byte	0x1
 5611 065e 50       		.byte	0x50
 5612 065f 08000000 		.4byte	.LVL134
 5613 0663 20000000 		.4byte	.LFE52
 5614 0667 0400     		.2byte	0x4
 5615 0669 F3       		.byte	0xf3
 5616 066a 01       		.uleb128 0x1
 5617 066b 50       		.byte	0x50
 5618 066c 9F       		.byte	0x9f
 5619 066d 00000000 		.4byte	0
 5620 0671 00000000 		.4byte	0
 5621              	.LLST51:
 5622 0675 0A000000 		.4byte	.LVL135
 5623 0679 12000000 		.4byte	.LVL136
 5624 067d 0100     		.2byte	0x1
 5625 067f 53       		.byte	0x53
 5626 0680 12000000 		.4byte	.LVL136
 5627 0684 20000000 		.4byte	.LFE52
 5628 0688 0100     		.2byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 159


 5629 068a 50       		.byte	0x50
 5630 068b 00000000 		.4byte	0
 5631 068f 00000000 		.4byte	0
 5632              	.LLST52:
 5633 0693 00000000 		.4byte	.LVL137
 5634 0697 08000000 		.4byte	.LVL138
 5635 069b 0100     		.2byte	0x1
 5636 069d 50       		.byte	0x50
 5637 069e 08000000 		.4byte	.LVL138
 5638 06a2 20000000 		.4byte	.LFE53
 5639 06a6 0400     		.2byte	0x4
 5640 06a8 F3       		.byte	0xf3
 5641 06a9 01       		.uleb128 0x1
 5642 06aa 50       		.byte	0x50
 5643 06ab 9F       		.byte	0x9f
 5644 06ac 00000000 		.4byte	0
 5645 06b0 00000000 		.4byte	0
 5646              	.LLST53:
 5647 06b4 0A000000 		.4byte	.LVL139
 5648 06b8 12000000 		.4byte	.LVL140
 5649 06bc 0100     		.2byte	0x1
 5650 06be 53       		.byte	0x53
 5651 06bf 12000000 		.4byte	.LVL140
 5652 06c3 20000000 		.4byte	.LFE53
 5653 06c7 0100     		.2byte	0x1
 5654 06c9 50       		.byte	0x50
 5655 06ca 00000000 		.4byte	0
 5656 06ce 00000000 		.4byte	0
 5657              	.LLST54:
 5658 06d2 00000000 		.4byte	.LVL141
 5659 06d6 06000000 		.4byte	.LVL142
 5660 06da 0100     		.2byte	0x1
 5661 06dc 50       		.byte	0x50
 5662 06dd 06000000 		.4byte	.LVL142
 5663 06e1 08000000 		.4byte	.LVL143
 5664 06e5 0400     		.2byte	0x4
 5665 06e7 F3       		.byte	0xf3
 5666 06e8 01       		.uleb128 0x1
 5667 06e9 50       		.byte	0x50
 5668 06ea 9F       		.byte	0x9f
 5669 06eb 08000000 		.4byte	.LVL143
 5670 06ef 0E000000 		.4byte	.LVL144
 5671 06f3 0100     		.2byte	0x1
 5672 06f5 50       		.byte	0x50
 5673 06f6 0E000000 		.4byte	.LVL144
 5674 06fa 10000000 		.4byte	.LVL145
 5675 06fe 0400     		.2byte	0x4
 5676 0700 F3       		.byte	0xf3
 5677 0701 01       		.uleb128 0x1
 5678 0702 50       		.byte	0x50
 5679 0703 9F       		.byte	0x9f
 5680 0704 10000000 		.4byte	.LVL145
 5681 0708 16000000 		.4byte	.LVL146
 5682 070c 0100     		.2byte	0x1
 5683 070e 50       		.byte	0x50
 5684 070f 16000000 		.4byte	.LVL146
 5685 0713 3C000000 		.4byte	.LFE54
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 160


 5686 0717 0400     		.2byte	0x4
 5687 0719 F3       		.byte	0xf3
 5688 071a 01       		.uleb128 0x1
 5689 071b 50       		.byte	0x50
 5690 071c 9F       		.byte	0x9f
 5691 071d 00000000 		.4byte	0
 5692 0721 00000000 		.4byte	0
 5693              	.LLST55:
 5694 0725 00000000 		.4byte	.LVL141
 5695 0729 1C000000 		.4byte	.LVL147
 5696 072d 0100     		.2byte	0x1
 5697 072f 51       		.byte	0x51
 5698 0730 1C000000 		.4byte	.LVL147
 5699 0734 3C000000 		.4byte	.LFE54
 5700 0738 0400     		.2byte	0x4
 5701 073a F3       		.byte	0xf3
 5702 073b 01       		.uleb128 0x1
 5703 073c 51       		.byte	0x51
 5704 073d 9F       		.byte	0x9f
 5705 073e 00000000 		.4byte	0
 5706 0742 00000000 		.4byte	0
 5707              	.LLST56:
 5708 0746 1E000000 		.4byte	.LVL148
 5709 074a 26000000 		.4byte	.LVL149
 5710 074e 0100     		.2byte	0x1
 5711 0750 53       		.byte	0x53
 5712 0751 26000000 		.4byte	.LVL149
 5713 0755 28000000 		.4byte	.LVL150
 5714 0759 0100     		.2byte	0x1
 5715 075b 51       		.byte	0x51
 5716 075c 00000000 		.4byte	0
 5717 0760 00000000 		.4byte	0
 5718              		.section	.debug_aranges,"",%progbits
 5719 0000 C4010000 		.4byte	0x1c4
 5720 0004 0200     		.2byte	0x2
 5721 0006 00000000 		.4byte	.Ldebug_info0
 5722 000a 04       		.byte	0x4
 5723 000b 00       		.byte	0
 5724 000c 0000     		.2byte	0
 5725 000e 0000     		.2byte	0
 5726 0010 00000000 		.4byte	.LFB1
 5727 0014 14000000 		.4byte	.LFE1-.LFB1
 5728 0018 00000000 		.4byte	.LFB4
 5729 001c 14000000 		.4byte	.LFE4-.LFB4
 5730 0020 00000000 		.4byte	.LFB2
 5731 0024 18000000 		.4byte	.LFE2-.LFB2
 5732 0028 00000000 		.4byte	.LFB5
 5733 002c 10000000 		.4byte	.LFE5-.LFB5
 5734 0030 00000000 		.4byte	.LFB6
 5735 0034 20000000 		.4byte	.LFE6-.LFB6
 5736 0038 00000000 		.4byte	.LFB7
 5737 003c 34000000 		.4byte	.LFE7-.LFB7
 5738 0040 00000000 		.4byte	.LFB8
 5739 0044 18000000 		.4byte	.LFE8-.LFB8
 5740 0048 00000000 		.4byte	.LFB9
 5741 004c 2C000000 		.4byte	.LFE9-.LFB9
 5742 0050 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 161


 5743 0054 20000000 		.4byte	.LFE12-.LFB12
 5744 0058 00000000 		.4byte	.LFB13
 5745 005c 10000000 		.4byte	.LFE13-.LFB13
 5746 0060 00000000 		.4byte	.LFB14
 5747 0064 0C000000 		.4byte	.LFE14-.LFB14
 5748 0068 00000000 		.4byte	.LFB15
 5749 006c 14000000 		.4byte	.LFE15-.LFB15
 5750 0070 00000000 		.4byte	.LFB16
 5751 0074 10000000 		.4byte	.LFE16-.LFB16
 5752 0078 00000000 		.4byte	.LFB17
 5753 007c 0C000000 		.4byte	.LFE17-.LFB17
 5754 0080 00000000 		.4byte	.LFB18
 5755 0084 0E000000 		.4byte	.LFE18-.LFB18
 5756 0088 00000000 		.4byte	.LFB19
 5757 008c 0C000000 		.4byte	.LFE19-.LFB19
 5758 0090 00000000 		.4byte	.LFB20
 5759 0094 10000000 		.4byte	.LFE20-.LFB20
 5760 0098 00000000 		.4byte	.LFB21
 5761 009c 10000000 		.4byte	.LFE21-.LFB21
 5762 00a0 00000000 		.4byte	.LFB22
 5763 00a4 34000000 		.4byte	.LFE22-.LFB22
 5764 00a8 00000000 		.4byte	.LFB23
 5765 00ac 20000000 		.4byte	.LFE23-.LFB23
 5766 00b0 00000000 		.4byte	.LFB24
 5767 00b4 14000000 		.4byte	.LFE24-.LFB24
 5768 00b8 00000000 		.4byte	.LFB25
 5769 00bc 18000000 		.4byte	.LFE25-.LFB25
 5770 00c0 00000000 		.4byte	.LFB26
 5771 00c4 14000000 		.4byte	.LFE26-.LFB26
 5772 00c8 00000000 		.4byte	.LFB27
 5773 00cc 14000000 		.4byte	.LFE27-.LFB27
 5774 00d0 00000000 		.4byte	.LFB28
 5775 00d4 14000000 		.4byte	.LFE28-.LFB28
 5776 00d8 00000000 		.4byte	.LFB29
 5777 00dc 04000000 		.4byte	.LFE29-.LFB29
 5778 00e0 00000000 		.4byte	.LFB30
 5779 00e4 18000000 		.4byte	.LFE30-.LFB30
 5780 00e8 00000000 		.4byte	.LFB31
 5781 00ec 2C000000 		.4byte	.LFE31-.LFB31
 5782 00f0 00000000 		.4byte	.LFB3
 5783 00f4 D4000000 		.4byte	.LFE3-.LFB3
 5784 00f8 00000000 		.4byte	.LFB10
 5785 00fc 80000000 		.4byte	.LFE10-.LFB10
 5786 0100 00000000 		.4byte	.LFB32
 5787 0104 14000000 		.4byte	.LFE32-.LFB32
 5788 0108 00000000 		.4byte	.LFB11
 5789 010c 44000000 		.4byte	.LFE11-.LFB11
 5790 0110 00000000 		.4byte	.LFB33
 5791 0114 48000000 		.4byte	.LFE33-.LFB33
 5792 0118 00000000 		.4byte	.LFB35
 5793 011c 54000000 		.4byte	.LFE35-.LFB35
 5794 0120 00000000 		.4byte	.LFB37
 5795 0124 10000000 		.4byte	.LFE37-.LFB37
 5796 0128 00000000 		.4byte	.LFB38
 5797 012c 10000000 		.4byte	.LFE38-.LFB38
 5798 0130 00000000 		.4byte	.LFB36
 5799 0134 18000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 162


 5800 0138 00000000 		.4byte	.LFB34
 5801 013c 1C000000 		.4byte	.LFE34-.LFB34
 5802 0140 00000000 		.4byte	.LFB39
 5803 0144 10000000 		.4byte	.LFE39-.LFB39
 5804 0148 00000000 		.4byte	.LFB40
 5805 014c 10000000 		.4byte	.LFE40-.LFB40
 5806 0150 00000000 		.4byte	.LFB41
 5807 0154 10000000 		.4byte	.LFE41-.LFB41
 5808 0158 00000000 		.4byte	.LFB42
 5809 015c 10000000 		.4byte	.LFE42-.LFB42
 5810 0160 00000000 		.4byte	.LFB43
 5811 0164 18000000 		.4byte	.LFE43-.LFB43
 5812 0168 00000000 		.4byte	.LFB44
 5813 016c 10000000 		.4byte	.LFE44-.LFB44
 5814 0170 00000000 		.4byte	.LFB45
 5815 0174 10000000 		.4byte	.LFE45-.LFB45
 5816 0178 00000000 		.4byte	.LFB49
 5817 017c 24000000 		.4byte	.LFE49-.LFB49
 5818 0180 00000000 		.4byte	.LFB46
 5819 0184 0C000000 		.4byte	.LFE46-.LFB46
 5820 0188 00000000 		.4byte	.LFB47
 5821 018c 10000000 		.4byte	.LFE47-.LFB47
 5822 0190 00000000 		.4byte	.LFB48
 5823 0194 0C000000 		.4byte	.LFE48-.LFB48
 5824 0198 00000000 		.4byte	.LFB50
 5825 019c 74000000 		.4byte	.LFE50-.LFB50
 5826 01a0 00000000 		.4byte	.LFB51
 5827 01a4 20000000 		.4byte	.LFE51-.LFB51
 5828 01a8 00000000 		.4byte	.LFB52
 5829 01ac 20000000 		.4byte	.LFE52-.LFB52
 5830 01b0 00000000 		.4byte	.LFB53
 5831 01b4 20000000 		.4byte	.LFE53-.LFB53
 5832 01b8 00000000 		.4byte	.LFB54
 5833 01bc 3C000000 		.4byte	.LFE54-.LFB54
 5834 01c0 00000000 		.4byte	0
 5835 01c4 00000000 		.4byte	0
 5836              		.section	.debug_ranges,"",%progbits
 5837              	.Ldebug_ranges0:
 5838 0000 2C000000 		.4byte	.LBB16
 5839 0004 2E000000 		.4byte	.LBE16
 5840 0008 2E000000 		.4byte	.LBB19
 5841 000c 30000000 		.4byte	.LBE19
 5842 0010 00000000 		.4byte	0
 5843 0014 00000000 		.4byte	0
 5844 0018 04000000 		.4byte	.LBB30
 5845 001c 06000000 		.4byte	.LBE30
 5846 0020 18000000 		.4byte	.LBB43
 5847 0024 1E000000 		.4byte	.LBE43
 5848 0028 20000000 		.4byte	.LBB44
 5849 002c 22000000 		.4byte	.LBE44
 5850 0030 00000000 		.4byte	0
 5851 0034 00000000 		.4byte	0
 5852 0038 08000000 		.4byte	.LBB37
 5853 003c 0A000000 		.4byte	.LBE37
 5854 0040 14000000 		.4byte	.LBB41
 5855 0044 16000000 		.4byte	.LBE41
 5856 0048 16000000 		.4byte	.LBB42
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 163


 5857 004c 18000000 		.4byte	.LBE42
 5858 0050 00000000 		.4byte	0
 5859 0054 00000000 		.4byte	0
 5860 0058 04000000 		.4byte	.LBB51
 5861 005c 06000000 		.4byte	.LBE51
 5862 0060 0A000000 		.4byte	.LBB54
 5863 0064 0E000000 		.4byte	.LBE54
 5864 0068 00000000 		.4byte	0
 5865 006c 00000000 		.4byte	0
 5866 0070 00000000 		.4byte	.LFB1
 5867 0074 14000000 		.4byte	.LFE1
 5868 0078 00000000 		.4byte	.LFB4
 5869 007c 14000000 		.4byte	.LFE4
 5870 0080 00000000 		.4byte	.LFB2
 5871 0084 18000000 		.4byte	.LFE2
 5872 0088 00000000 		.4byte	.LFB5
 5873 008c 10000000 		.4byte	.LFE5
 5874 0090 00000000 		.4byte	.LFB6
 5875 0094 20000000 		.4byte	.LFE6
 5876 0098 00000000 		.4byte	.LFB7
 5877 009c 34000000 		.4byte	.LFE7
 5878 00a0 00000000 		.4byte	.LFB8
 5879 00a4 18000000 		.4byte	.LFE8
 5880 00a8 00000000 		.4byte	.LFB9
 5881 00ac 2C000000 		.4byte	.LFE9
 5882 00b0 00000000 		.4byte	.LFB12
 5883 00b4 20000000 		.4byte	.LFE12
 5884 00b8 00000000 		.4byte	.LFB13
 5885 00bc 10000000 		.4byte	.LFE13
 5886 00c0 00000000 		.4byte	.LFB14
 5887 00c4 0C000000 		.4byte	.LFE14
 5888 00c8 00000000 		.4byte	.LFB15
 5889 00cc 14000000 		.4byte	.LFE15
 5890 00d0 00000000 		.4byte	.LFB16
 5891 00d4 10000000 		.4byte	.LFE16
 5892 00d8 00000000 		.4byte	.LFB17
 5893 00dc 0C000000 		.4byte	.LFE17
 5894 00e0 00000000 		.4byte	.LFB18
 5895 00e4 0E000000 		.4byte	.LFE18
 5896 00e8 00000000 		.4byte	.LFB19
 5897 00ec 0C000000 		.4byte	.LFE19
 5898 00f0 00000000 		.4byte	.LFB20
 5899 00f4 10000000 		.4byte	.LFE20
 5900 00f8 00000000 		.4byte	.LFB21
 5901 00fc 10000000 		.4byte	.LFE21
 5902 0100 00000000 		.4byte	.LFB22
 5903 0104 34000000 		.4byte	.LFE22
 5904 0108 00000000 		.4byte	.LFB23
 5905 010c 20000000 		.4byte	.LFE23
 5906 0110 00000000 		.4byte	.LFB24
 5907 0114 14000000 		.4byte	.LFE24
 5908 0118 00000000 		.4byte	.LFB25
 5909 011c 18000000 		.4byte	.LFE25
 5910 0120 00000000 		.4byte	.LFB26
 5911 0124 14000000 		.4byte	.LFE26
 5912 0128 00000000 		.4byte	.LFB27
 5913 012c 14000000 		.4byte	.LFE27
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 164


 5914 0130 00000000 		.4byte	.LFB28
 5915 0134 14000000 		.4byte	.LFE28
 5916 0138 00000000 		.4byte	.LFB29
 5917 013c 04000000 		.4byte	.LFE29
 5918 0140 00000000 		.4byte	.LFB30
 5919 0144 18000000 		.4byte	.LFE30
 5920 0148 00000000 		.4byte	.LFB31
 5921 014c 2C000000 		.4byte	.LFE31
 5922 0150 00000000 		.4byte	.LFB3
 5923 0154 D4000000 		.4byte	.LFE3
 5924 0158 00000000 		.4byte	.LFB10
 5925 015c 80000000 		.4byte	.LFE10
 5926 0160 00000000 		.4byte	.LFB32
 5927 0164 14000000 		.4byte	.LFE32
 5928 0168 00000000 		.4byte	.LFB11
 5929 016c 44000000 		.4byte	.LFE11
 5930 0170 00000000 		.4byte	.LFB33
 5931 0174 48000000 		.4byte	.LFE33
 5932 0178 00000000 		.4byte	.LFB35
 5933 017c 54000000 		.4byte	.LFE35
 5934 0180 00000000 		.4byte	.LFB37
 5935 0184 10000000 		.4byte	.LFE37
 5936 0188 00000000 		.4byte	.LFB38
 5937 018c 10000000 		.4byte	.LFE38
 5938 0190 00000000 		.4byte	.LFB36
 5939 0194 18000000 		.4byte	.LFE36
 5940 0198 00000000 		.4byte	.LFB34
 5941 019c 1C000000 		.4byte	.LFE34
 5942 01a0 00000000 		.4byte	.LFB39
 5943 01a4 10000000 		.4byte	.LFE39
 5944 01a8 00000000 		.4byte	.LFB40
 5945 01ac 10000000 		.4byte	.LFE40
 5946 01b0 00000000 		.4byte	.LFB41
 5947 01b4 10000000 		.4byte	.LFE41
 5948 01b8 00000000 		.4byte	.LFB42
 5949 01bc 10000000 		.4byte	.LFE42
 5950 01c0 00000000 		.4byte	.LFB43
 5951 01c4 18000000 		.4byte	.LFE43
 5952 01c8 00000000 		.4byte	.LFB44
 5953 01cc 10000000 		.4byte	.LFE44
 5954 01d0 00000000 		.4byte	.LFB45
 5955 01d4 10000000 		.4byte	.LFE45
 5956 01d8 00000000 		.4byte	.LFB49
 5957 01dc 24000000 		.4byte	.LFE49
 5958 01e0 00000000 		.4byte	.LFB46
 5959 01e4 0C000000 		.4byte	.LFE46
 5960 01e8 00000000 		.4byte	.LFB47
 5961 01ec 10000000 		.4byte	.LFE47
 5962 01f0 00000000 		.4byte	.LFB48
 5963 01f4 0C000000 		.4byte	.LFE48
 5964 01f8 00000000 		.4byte	.LFB50
 5965 01fc 74000000 		.4byte	.LFE50
 5966 0200 00000000 		.4byte	.LFB51
 5967 0204 20000000 		.4byte	.LFE51
 5968 0208 00000000 		.4byte	.LFB52
 5969 020c 20000000 		.4byte	.LFE52
 5970 0210 00000000 		.4byte	.LFB53
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 165


 5971 0214 20000000 		.4byte	.LFE53
 5972 0218 00000000 		.4byte	.LFB54
 5973 021c 3C000000 		.4byte	.LFE54
 5974 0220 00000000 		.4byte	0
 5975 0224 00000000 		.4byte	0
 5976              		.section	.debug_line,"",%progbits
 5977              	.Ldebug_line0:
 5978 0000 AF050000 		.section	.debug_str,"MS",%progbits,1
 5978      02006700 
 5978      00000201 
 5978      FB0E0D00 
 5978      01010101 
 5979              	.LASF36:
 5980 0000 72616D56 		.ascii	"ramVectorTable\000"
 5980      6563746F 
 5980      72546162 
 5980      6C6500
 5981              	.LASF10:
 5982 000f 75696E74 		.ascii	"uint16\000"
 5982      313600
 5983              	.LASF56:
 5984 0016 696E7453 		.ascii	"intState\000"
 5984      74617465 
 5984      00
 5985              	.LASF40:
 5986 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5986      73436C6B 
 5986      57726974 
 5986      65486663 
 5986      6C6B4469 
 5987              	.LASF114:
 5988 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5988      73436C6B 
 5988      50756D70 
 5988      436F6E66 
 5988      696700
 5989              	.LASF35:
 5990 004b 6F6C6449 		.ascii	"oldIsr\000"
 5990      737200
 5991              	.LASF96:
 5992 0052 72657456 		.ascii	"retVal\000"
 5992      616C00
 5993              	.LASF55:
 5994 0059 43794469 		.ascii	"CyDisableInts\000"
 5994      7361626C 
 5994      65496E74 
 5994      7300
 5995              	.LASF7:
 5996 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 5996      206C6F6E 
 5996      6720756E 
 5996      7369676E 
 5996      65642069 
 5997              	.LASF76:
 5998 007e 70617261 		.ascii	"parameters\000"
 5998      6D657465 
 5998      727300
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 166


 5999              	.LASF57:
 6000 0089 4379456E 		.ascii	"CyEnableInts\000"
 6000      61626C65 
 6000      496E7473 
 6000      00
 6001              	.LASF105:
 6002 0096 696E7465 		.ascii	"interfaceNumber\000"
 6002      72666163 
 6002      654E756D 
 6002      62657200 
 6003              	.LASF72:
 6004 00a6 4379536F 		.ascii	"CySoftwareReset\000"
 6004      66747761 
 6004      72655265 
 6004      73657400 
 6005              	.LASF86:
 6006 00b6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6006      73546963 
 6006      6B456E61 
 6006      626C6549 
 6006      6E746572 
 6007              	.LASF67:
 6008 00cf 4379496E 		.ascii	"CyIntGetState\000"
 6008      74476574 
 6008      53746174 
 6008      6500
 6009              	.LASF6:
 6010 00dd 6C6F6E67 		.ascii	"long long int\000"
 6010      206C6F6E 
 6010      6720696E 
 6010      7400
 6011              	.LASF0:
 6012 00eb 7369676E 		.ascii	"signed char\000"
 6012      65642063 
 6012      68617200 
 6013              	.LASF21:
 6014 00f7 66726571 		.ascii	"freq\000"
 6014      00
 6015              	.LASF83:
 6016 00fc 43794465 		.ascii	"CyDelayFreq\000"
 6016      6C617946 
 6016      72657100 
 6017              	.LASF22:
 6018 0108 696E7465 		.ascii	"interruptState\000"
 6018      72727570 
 6018      74537461 
 6018      746500
 6019              	.LASF24:
 6020 0117 6C664C69 		.ascii	"lfLimit\000"
 6020      6D697400 
 6021              	.LASF90:
 6022 011f 43795379 		.ascii	"CySysTickGetReload\000"
 6022      73546963 
 6022      6B476574 
 6022      52656C6F 
 6022      616400
 6023              	.LASF49:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 167


 6024 0132 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6024      73436C6B 
 6024      496D6F47 
 6024      65745763 
 6024      6F4C6F63 
 6025              	.LASF78:
 6026 0148 77636F4C 		.ascii	"wcoLock\000"
 6026      6F636B00 
 6027              	.LASF4:
 6028 0150 6C6F6E67 		.ascii	"long int\000"
 6028      20696E74 
 6028      00
 6029              	.LASF68:
 6030 0159 4379496E 		.ascii	"CyIntDisable\000"
 6030      74446973 
 6030      61626C65 
 6030      00
 6031              	.LASF77:
 6032 0166 72656756 		.ascii	"regValues\000"
 6032      616C7565 
 6032      7300
 6033              	.LASF42:
 6034 0170 43795379 		.ascii	"CySysEnablePumpClock\000"
 6034      73456E61 
 6034      626C6550 
 6034      756D7043 
 6034      6C6F636B 
 6035              	.LASF9:
 6036 0185 75696E74 		.ascii	"uint8\000"
 6036      3800
 6037              	.LASF108:
 6038 018b 63796465 		.ascii	"cydelayFreqKhz\000"
 6038      6C617946 
 6038      7265714B 
 6038      687A00
 6039              	.LASF44:
 6040 019a 656E6162 		.ascii	"enable\000"
 6040      6C6500
 6041              	.LASF13:
 6042 01a1 646F7562 		.ascii	"double\000"
 6042      6C6500
 6043              	.LASF64:
 6044 01a8 73686966 		.ascii	"shift\000"
 6044      7400
 6045              	.LASF122:
 6046 01ae 433A5C47 		.ascii	"C:\\Git\\WA101\\ww101-shield\\firmware\\TestProgram"
 6046      69745C57 
 6046      41313031 
 6046      5C777731 
 6046      30312D73 
 6047 01dc 344D2E63 		.ascii	"4M.cydsn\000"
 6047      7964736E 
 6047      00
 6048              	.LASF28:
 6049 01e5 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6049      734C7664 
 6049      436C6561 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 168


 6049      72496E74 
 6049      65727275 
 6050              	.LASF11:
 6051 01fc 75696E74 		.ascii	"uint32\000"
 6051      333200
 6052              	.LASF58:
 6053 0203 6D61736B 		.ascii	"mask\000"
 6053      00
 6054              	.LASF51:
 6055 0208 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6055      73436C6B 
 6055      47657453 
 6055      7973636C 
 6055      6B536F75 
 6056              	.LASF26:
 6057 0220 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6057      73436C6B 
 6057      496D6F45 
 6057      6E61626C 
 6057      6557636F 
 6058              	.LASF65:
 6059 0239 4379496E 		.ascii	"CyIntGetPriority\000"
 6059      74476574 
 6059      5072696F 
 6059      72697479 
 6059      00
 6060              	.LASF110:
 6061 024a 63796465 		.ascii	"cydelay32kMs\000"
 6061      6C617933 
 6061      326B4D73 
 6061      00
 6062              	.LASF84:
 6063 0257 43795379 		.ascii	"CySysTickInit\000"
 6063      73546963 
 6063      6B496E69 
 6063      7400
 6064              	.LASF32:
 6065 0265 76616C75 		.ascii	"value\000"
 6065      6500
 6066              	.LASF31:
 6067 026b 636C6F63 		.ascii	"clockSource\000"
 6067      6B536F75 
 6067      72636500 
 6068              	.LASF98:
 6069 0277 43794765 		.ascii	"CyGetUniqueId\000"
 6069      74556E69 
 6069      71756549 
 6069      6400
 6070              	.LASF93:
 6071 0285 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6071      73546963 
 6071      6B476574 
 6071      436F756E 
 6071      74466C61 
 6072              	.LASF8:
 6073 029b 756E7369 		.ascii	"unsigned int\000"
 6073      676E6564 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 169


 6073      20696E74 
 6073      00
 6074              	.LASF29:
 6075 02a8 43795379 		.ascii	"CySysTickClear\000"
 6075      73546963 
 6075      6B436C65 
 6075      617200
 6076              	.LASF5:
 6077 02b7 6C6F6E67 		.ascii	"long unsigned int\000"
 6077      20756E73 
 6077      69676E65 
 6077      6420696E 
 6077      7400
 6078              	.LASF50:
 6079 02c9 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6079      734C7664 
 6079      47657449 
 6079      6E746572 
 6079      72757074 
 6080              	.LASF39:
 6081 02e4 43795379 		.ascii	"CySysClkImoStop\000"
 6081      73436C6B 
 6081      496D6F53 
 6081      746F7000 
 6082              	.LASF115:
 6083 02f4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6083      74657243 
 6083      72697469 
 6083      63616C53 
 6083      65637469 
 6084              	.LASF69:
 6085 030b 4379496E 		.ascii	"CyIntSetPending\000"
 6085      74536574 
 6085      50656E64 
 6085      696E6700 
 6086              	.LASF97:
 6087 031b 43795379 		.ascii	"CySysTickGetCallback\000"
 6087      73546963 
 6087      6B476574 
 6087      43616C6C 
 6087      6261636B 
 6088              	.LASF52:
 6089 0330 43795379 		.ascii	"CySysGetResetReason\000"
 6089      73476574 
 6089      52657365 
 6089      74526561 
 6089      736F6E00 
 6090              	.LASF3:
 6091 0344 73686F72 		.ascii	"short unsigned int\000"
 6091      7420756E 
 6091      7369676E 
 6091      65642069 
 6091      6E7400
 6092              	.LASF23:
 6093 0357 72656754 		.ascii	"regTmp\000"
 6093      6D7000
 6094              	.LASF27:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 170


 6095 035e 43795379 		.ascii	"CySysTickSetClockSource\000"
 6095      73546963 
 6095      6B536574 
 6095      436C6F63 
 6095      6B536F75 
 6096              	.LASF60:
 6097 0376 4379496E 		.ascii	"CyIntSetVector\000"
 6097      74536574 
 6097      56656374 
 6097      6F7200
 6098              	.LASF33:
 6099 0385 6E756D62 		.ascii	"number\000"
 6099      657200
 6100              	.LASF63:
 6101 038c 7072696F 		.ascii	"priority\000"
 6101      72697479 
 6101      00
 6102              	.LASF75:
 6103 0395 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6103      73436C6B 
 6103      57726974 
 6103      65496D6F 
 6103      46726571 
 6104              	.LASF102:
 6105 03aa 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6105      73536574 
 6105      466C6173 
 6105      68416363 
 6105      65737341 
 6106              	.LASF124:
 6107 03c9 4379496E 		.ascii	"CyIntSetSysVector\000"
 6107      74536574 
 6107      53797356 
 6107      6563746F 
 6107      7200
 6108              	.LASF38:
 6109 03db 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6109      73436C6B 
 6109      496D6F44 
 6109      69736162 
 6109      6C655763 
 6110              	.LASF16:
 6111 03f5 72656733 		.ascii	"reg32\000"
 6111      3200
 6112              	.LASF88:
 6113 03fb 43795379 		.ascii	"CySysTickStart\000"
 6113      73546963 
 6113      6B537461 
 6113      727400
 6114              	.LASF54:
 6115 040a 72657475 		.ascii	"returnStatus\000"
 6115      726E5374 
 6115      61747573 
 6115      00
 6116              	.LASF101:
 6117 0417 736F7572 		.ascii	"source\000"
 6117      636500
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 171


 6118              	.LASF19:
 6119 041e 73697A65 		.ascii	"sizetype\000"
 6119      74797065 
 6119      00
 6120              	.LASF111:
 6121 0427 43795379 		.ascii	"CySysTickInitVar\000"
 6121      73546963 
 6121      6B496E69 
 6121      74566172 
 6121      00
 6122              	.LASF104:
 6123 0438 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6123      73536574 
 6123      50657269 
 6123      70686572 
 6123      616C4163 
 6124              	.LASF70:
 6125 045c 4379496E 		.ascii	"CyIntClearPending\000"
 6125      74436C65 
 6125      61725065 
 6125      6E64696E 
 6125      6700
 6126              	.LASF18:
 6127 046e 6C6F6E67 		.ascii	"long double\000"
 6127      20646F75 
 6127      626C6500 
 6128              	.LASF34:
 6129 047a 61646472 		.ascii	"address\000"
 6129      65737300 
 6130              	.LASF120:
 6131 0482 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6131      43313120 
 6131      352E342E 
 6131      31203230 
 6131      31363036 
 6132 04b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6132      20726576 
 6132      6973696F 
 6132      6E203233 
 6132      37373135 
 6133 04e8 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 6133      66756E63 
 6133      74696F6E 
 6133      2D736563 
 6133      74696F6E 
 6134              	.LASF45:
 6135 0510 73797363 		.ascii	"sysclkSource\000"
 6135      6C6B536F 
 6135      75726365 
 6135      00
 6136              	.LASF95:
 6137 051d 66756E63 		.ascii	"function\000"
 6137      74696F6E 
 6137      00
 6138              	.LASF112:
 6139 0526 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6139      6F467265 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 172


 6139      714D687A 
 6139      32526567 
 6139      00
 6140              	.LASF91:
 6141 0537 43795379 		.ascii	"CySysTickGetValue\000"
 6141      73546963 
 6141      6B476574 
 6141      56616C75 
 6141      6500
 6142              	.LASF107:
 6143 0549 63796465 		.ascii	"cydelayFreqHz\000"
 6143      6C617946 
 6143      72657148 
 6143      7A00
 6144              	.LASF62:
 6145 0557 4379496E 		.ascii	"CyIntSetPriority\000"
 6145      74536574 
 6145      5072696F 
 6145      72697479 
 6145      00
 6146              	.LASF12:
 6147 0568 666C6F61 		.ascii	"float\000"
 6147      7400
 6148              	.LASF116:
 6149 056e 43794578 		.ascii	"CyExitCriticalSection\000"
 6149      69744372 
 6149      69746963 
 6149      616C5365 
 6149      6374696F 
 6150              	.LASF81:
 6151 0584 43795379 		.ascii	"CySysLvdEnable\000"
 6151      734C7664 
 6151      456E6162 
 6151      6C6500
 6152              	.LASF20:
 6153 0593 63795379 		.ascii	"cySysTickCallback\000"
 6153      73546963 
 6153      6B43616C 
 6153      6C626163 
 6153      6B00
 6154              	.LASF61:
 6155 05a5 4379496E 		.ascii	"CyIntGetVector\000"
 6155      74476574 
 6155      56656374 
 6155      6F7200
 6156              	.LASF74:
 6157 05b4 6D696C6C 		.ascii	"milliseconds\000"
 6157      69736563 
 6157      6F6E6473 
 6157      00
 6158              	.LASF117:
 6159 05c1 43794465 		.ascii	"CyDelayCycles\000"
 6159      6C617943 
 6159      79636C65 
 6159      7300
 6160              	.LASF15:
 6161 05cf 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 173


 6161      00
 6162              	.LASF82:
 6163 05d4 74687265 		.ascii	"threshold\000"
 6163      73686F6C 
 6163      6400
 6164              	.LASF71:
 6165 05de 43794861 		.ascii	"CyHalt\000"
 6165      6C7400
 6166              	.LASF100:
 6167 05e5 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6167      73536574 
 6167      52616D41 
 6167      63636573 
 6167      73417262 
 6168              	.LASF1:
 6169 0602 756E7369 		.ascii	"unsigned char\000"
 6169      676E6564 
 6169      20636861 
 6169      7200
 6170              	.LASF53:
 6171 0610 72656173 		.ascii	"reason\000"
 6171      6F6E00
 6172              	.LASF2:
 6173 0617 73686F72 		.ascii	"short int\000"
 6173      7420696E 
 6173      7400
 6174              	.LASF66:
 6175 0621 4379496E 		.ascii	"CyIntEnable\000"
 6175      74456E61 
 6175      626C6500 
 6176              	.LASF59:
 6177 062d 4379496E 		.ascii	"CyIntGetSysVector\000"
 6177      74476574 
 6177      53797356 
 6177      6563746F 
 6177      7200
 6178              	.LASF43:
 6179 063f 636C6B53 		.ascii	"clkSelect\000"
 6179      656C6563 
 6179      7400
 6180              	.LASF79:
 6181 0649 43794465 		.ascii	"CyDelayUs\000"
 6181      6C617955 
 6181      7300
 6182              	.LASF123:
 6183 0653 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6183      73546963 
 6183      6B536572 
 6183      76696365 
 6183      43616C6C 
 6184              	.LASF14:
 6185 066d 63686172 		.ascii	"char\000"
 6185      00
 6186              	.LASF113:
 6187 0672 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 6187      6F467265 
 6187      714D687A 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 174


 6187      3244706C 
 6187      6C4F6666 
 6188              	.LASF17:
 6189 068a 63796973 		.ascii	"cyisraddress\000"
 6189      72616464 
 6189      72657373 
 6189      00
 6190              	.LASF87:
 6191 0697 43795379 		.ascii	"CySysTickEnable\000"
 6191      73546963 
 6191      6B456E61 
 6191      626C6500 
 6192              	.LASF46:
 6193 06a7 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6193      73436C6B 
 6193      57726974 
 6193      65537973 
 6193      636C6B44 
 6194              	.LASF94:
 6195 06be 43795379 		.ascii	"CySysTickSetCallback\000"
 6195      73546963 
 6195      6B536574 
 6195      43616C6C 
 6195      6261636B 
 6196              	.LASF106:
 6197 06d3 43795379 		.ascii	"CySysTickCallbacks\000"
 6197      73546963 
 6197      6B43616C 
 6197      6C626163 
 6197      6B7300
 6198              	.LASF99:
 6199 06e6 756E6971 		.ascii	"uniqueId\000"
 6199      75654964 
 6199      00
 6200              	.LASF25:
 6201 06ef 666C6173 		.ascii	"flashCtlReg\000"
 6201      6843746C 
 6201      52656700 
 6202              	.LASF73:
 6203 06fb 43794465 		.ascii	"CyDelay\000"
 6203      6C617900 
 6204              	.LASF92:
 6205 0703 43795379 		.ascii	"CySysTickGetClockSource\000"
 6205      73546963 
 6205      6B476574 
 6205      436C6F63 
 6205      6B536F75 
 6206              	.LASF89:
 6207 071b 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6207      73546963 
 6207      6B446973 
 6207      61626C65 
 6207      496E7465 
 6208              	.LASF48:
 6209 0735 43795379 		.ascii	"CySysLvdDisable\000"
 6209      734C7664 
 6209      44697361 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 175


 6209      626C6500 
 6210              	.LASF109:
 6211 0745 63796465 		.ascii	"cydelayFreqMhz\000"
 6211      6C617946 
 6211      7265714D 
 6211      687A00
 6212              	.LASF119:
 6213 0754 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6213      73436C6B 
 6213      57636F45 
 6213      6E61626C 
 6213      656400
 6214              	.LASF103:
 6215 0767 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6215      73536574 
 6215      446D6163 
 6215      41636365 
 6215      73734172 
 6216              	.LASF85:
 6217 0785 43795379 		.ascii	"CySysTickStop\000"
 6217      73546963 
 6217      6B53746F 
 6217      7000
 6218              	.LASF47:
 6219 0793 64697669 		.ascii	"divider\000"
 6219      64657200 
 6220              	.LASF37:
 6221 079b 43795379 		.ascii	"CySysClkImoStart\000"
 6221      73436C6B 
 6221      496D6F53 
 6221      74617274 
 6221      00
 6222              	.LASF118:
 6223 07ac 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6223      73466C61 
 6223      73685365 
 6223      74576169 
 6223      74437963 
 6224              	.LASF121:
 6225 07c4 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6225      72617465 
 6225      645F536F 
 6225      75726365 
 6225      5C50536F 
 6226              	.LASF80:
 6227 07e3 6D696372 		.ascii	"microseconds\000"
 6227      6F736563 
 6227      6F6E6473 
 6227      00
 6228              	.LASF41:
 6229 07f0 746D7052 		.ascii	"tmpReg\000"
 6229      656700
 6230              	.LASF30:
 6231 07f7 43795379 		.ascii	"CySysTickSetReload\000"
 6231      73546963 
 6231      6B536574 
 6231      52656C6F 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cckRL2Wc.s 			page 176


 6231      616400
 6232              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
