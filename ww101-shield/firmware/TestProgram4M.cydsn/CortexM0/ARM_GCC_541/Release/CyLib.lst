ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 124 0
  39              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 109 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 124 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 4


  47              	.L2:
  48 0010 08010B40 		.word	1074462984
  49              		.cfi_endproc
  50              	.LFE1:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoDisableWcoLock
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoDisableWcoLock, %function
  58              	CySysClkImoDisableWcoLock:
  59              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 5


 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 6


 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 7


 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
  60              		.loc 1 286 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  65              		.loc 1 287 0
  66 0000 024A     		ldr	r2, .L5
  67 0002 034B     		ldr	r3, .L5+4
  68 0004 1168     		ldr	r1, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  69              		.loc 1 288 0
  70              		@ sp needed
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  71              		.loc 1 287 0
  72 0006 0B40     		ands	r3, r1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 288 0
  75 000a 7047     		bx	lr
  76              	.L6:
  77              		.align	2
  78              	.L5:
  79 000c 00002240 		.word	1075970048
  80 0010 FFFFFFBF 		.word	-1073741825
  81              		.cfi_endproc
  82              	.LFE4:
  83              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  84              		.section	.text.CySysClkImoStop,"ax",%progbits
  85              		.align	1
  86              		.global	CySysClkImoStop
  87              		.code	16
  88              		.thumb_func
  89              		.type	CySysClkImoStop, %function
  90              	CySysClkImoStop:
  91              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  92              		.loc 1 140 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 100              		.loc 1 142 0
 101 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 102              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
 103              		.loc 1 149 0
 104 0006 034A     		ldr	r2, .L8
 150:Generated_Source\PSoC4/CyLib.c **** 
 105              		.loc 1 150 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 8


 106              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
 107              		.loc 1 149 0
 108 0008 1368     		ldr	r3, [r2]
 109 000a 5B00     		lsls	r3, r3, #1
 110 000c 5B08     		lsrs	r3, r3, #1
 111 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 112              		.loc 1 150 0
 113 0010 10BD     		pop	{r4, pc}
 114              	.L9:
 115 0012 C046     		.align	2
 116              	.L8:
 117 0014 08010B40 		.word	1074462984
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	CySysClkImoStop, .-CySysClkImoStop
 121              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 122              		.align	1
 123              		.global	CySysClkImoGetWcoLock
 124              		.code	16
 125              		.thumb_func
 126              		.type	CySysClkImoGetWcoLock, %function
 127              	CySysClkImoGetWcoLock:
 128              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 129              		.loc 1 305 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 134              		.loc 1 306 0
 135 0000 024B     		ldr	r3, .L11
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 136              		.loc 1 309 0
 137              		@ sp needed
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 138              		.loc 1 306 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 9


 139 0002 1868     		ldr	r0, [r3]
 140 0004 4000     		lsls	r0, r0, #1
 141 0006 C00F     		lsrs	r0, r0, #31
 142              		.loc 1 309 0
 143 0008 7047     		bx	lr
 144              	.L12:
 145 000a C046     		.align	2
 146              	.L11:
 147 000c 00002240 		.word	1075970048
 148              		.cfi_endproc
 149              	.LFE5:
 150              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 151              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 152              		.align	1
 153              		.global	CySysClkWriteHfclkDirect
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkWriteHfclkDirect, %function
 157              	CySysClkWriteHfclkDirect:
 158              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 10


 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 11


 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 430 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL1:
 164 0000 10B5     		push	{r4, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 168              		.loc 1 430 0
 169 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 170              		.loc 1 434 0
 171 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 172              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 173              		.loc 1 437 0
 174 0008 0723     		movs	r3, #7
 175 000a 0449     		ldr	r1, .L14
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 12


 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 454 0
 177              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 178              		.loc 1 437 0
 179 000c 0A68     		ldr	r2, [r1]
 180 000e 9A43     		bics	r2, r3
 181              	.LVL3:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 182              		.loc 1 448 0
 183 0010 2340     		ands	r3, r4
 184 0012 1343     		orrs	r3, r2
 185              	.LVL4:
 451:Generated_Source\PSoC4/CyLib.c **** 
 186              		.loc 1 451 0
 187 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 188              		.loc 1 453 0
 189 0016 FFF7FEFF 		bl	CyExitCriticalSection
 190              	.LVL5:
 191              	.LVL6:
 192              		.loc 1 454 0
 193 001a 10BD     		pop	{r4, pc}
 194              	.L15:
 195              		.align	2
 196              	.L14:
 197 001c 00010B40 		.word	1074462976
 198              		.cfi_endproc
 199              	.LFE6:
 200              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 201              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 202              		.align	1
 203              		.global	CySysEnablePumpClock
 204              		.code	16
 205              		.thumb_func
 206              		.type	CySysEnablePumpClock, %function
 207              	CySysEnablePumpClock:
 208              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 13


 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 209              		.loc 1 474 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              	.LVL7:
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 218 0002 094B     		ldr	r3, .L21
 219 0004 094C     		ldr	r4, .L21+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 220              		.loc 1 476 0
 221 0006 C207     		lsls	r2, r0, #31
 222 0008 04D5     		bpl	.L17
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 223              		.loc 1 478 0
 224 000a 2268     		ldr	r2, [r4]
 225 000c 1968     		ldr	r1, [r3]
 226 000e 5206     		lsls	r2, r2, #25
 227 0010 0A43     		orrs	r2, r1
 228 0012 06E0     		b	.L19
 229              	.L17:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 230              		.loc 1 482 0
 231 0014 1A68     		ldr	r2, [r3]
 232 0016 1201     		lsls	r2, r2, #4
 233 0018 520F     		lsrs	r2, r2, #29
 234 001a 2260     		str	r2, [r4]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 235              		.loc 1 484 0
 236 001c 1968     		ldr	r1, [r3]
 237 001e 044A     		ldr	r2, .L21+8
 238 0020 0A40     		ands	r2, r1
 239              	.L19:
 240 0022 1A60     		str	r2, [r3]
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 14


 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 241              		.loc 1 498 0
 242              		@ sp needed
 243 0024 10BD     		pop	{r4, pc}
 244              	.L22:
 245 0026 C046     		.align	2
 246              	.L21:
 247 0028 08010B40 		.word	1074462984
 248 002c 00000000 		.word	.LANCHOR0
 249 0030 FFFFFFF1 		.word	-234881025
 250              		.cfi_endproc
 251              	.LFE7:
 252              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 253              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 254              		.align	1
 255              		.global	CySysClkGetSysclkSource
 256              		.code	16
 257              		.thumb_func
 258              		.type	CySysClkGetSysclkSource, %function
 259              	CySysClkGetSysclkSource:
 260              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 261              		.loc 1 511 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 10B5     		push	{r4, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 4, -8
 268              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 269              		.loc 1 515 0
 270 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 15


 271              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 272              		.loc 1 525 0
 273 0006 034B     		ldr	r3, .L24
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 274              		.loc 1 531 0
 275              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 276              		.loc 1 525 0
 277 0008 1C68     		ldr	r4, [r3]
 278              	.LVL9:
 528:Generated_Source\PSoC4/CyLib.c **** 
 279              		.loc 1 528 0
 280 000a FFF7FEFF 		bl	CyExitCriticalSection
 281              	.LVL10:
 530:Generated_Source\PSoC4/CyLib.c **** }
 282              		.loc 1 530 0
 283 000e 0720     		movs	r0, #7
 284 0010 2040     		ands	r0, r4
 285              	.LVL11:
 286              		.loc 1 531 0
 287 0012 10BD     		pop	{r4, pc}
 288              	.L25:
 289              		.align	2
 290              	.L24:
 291 0014 00010B40 		.word	1074462976
 292              		.cfi_endproc
 293              	.LFE8:
 294              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 295              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 296              		.align	1
 297              		.global	CySysClkWriteSysclkDiv
 298              		.code	16
 299              		.thumb_func
 300              		.type	CySysClkWriteSysclkDiv, %function
 301              	CySysClkWriteSysclkDiv:
 302              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 16


 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 303              		.loc 1 566 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL12:
 308 0000 70B5     		push	{r4, r5, r6, lr}
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 4, -16
 311              		.cfi_offset 5, -12
 312              		.cfi_offset 6, -8
 313              		.cfi_offset 14, -4
 314              		.loc 1 566 0
 315 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 316              		.loc 1 569 0
 317 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 318              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 319              		.loc 1 572 0
 320 0008 E104     		lsls	r1, r4, #19
 321 000a E024     		movs	r4, #224
 322              	.LVL14:
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 323              		.loc 1 573 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 17


 324 000c 054D     		ldr	r5, .L27
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 325              		.loc 1 572 0
 326 000e A403     		lsls	r4, r4, #14
 327              		.loc 1 573 0
 328 0010 2B68     		ldr	r3, [r5]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 329              		.loc 1 572 0
 330 0012 054A     		ldr	r2, .L27+4
 331 0014 2140     		ands	r1, r4
 332 0016 1A40     		ands	r2, r3
 333 0018 0B00     		movs	r3, r1
 334 001a 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 335              		.loc 1 571 0
 336 001c 2B60     		str	r3, [r5]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 337              		.loc 1 576 0
 338 001e FFF7FEFF 		bl	CyExitCriticalSection
 339              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 340              		.loc 1 577 0
 341              		@ sp needed
 342 0022 70BD     		pop	{r4, r5, r6, pc}
 343              	.L28:
 344              		.align	2
 345              	.L27:
 346 0024 00010B40 		.word	1074462976
 347 0028 FFFFC7FF 		.word	-3670017
 348              		.cfi_endproc
 349              	.LFE9:
 350              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 351              		.section	.text.CySysLvdDisable,"ax",%progbits
 352              		.align	1
 353              		.global	CySysLvdDisable
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysLvdDisable, %function
 357              	CySysLvdDisable:
 358              	.LFB12:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 18


 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 19


 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 20


 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 21


 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 22


 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 23


 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 24


 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 25


 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 26


1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 27


1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 28


1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 29


1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 30


1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 31


1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 32


1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 33


1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 34


1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 35


1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 36


1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 37


1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 38


1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 39


1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 40


1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 41


1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 42


1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 43


2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 44


2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 45


2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 2149 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 364              		.loc 1 2150 0
 365 0000 0221     		movs	r1, #2
 366 0002 054A     		ldr	r2, .L30
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
 367              		.loc 1 2152 0
 368              		@ sp needed
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 369              		.loc 1 2150 0
 370 0004 1368     		ldr	r3, [r2]
 371 0006 8B43     		bics	r3, r1
 372 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 373              		.loc 1 2151 0
 374 000a 044A     		ldr	r2, .L30+4
 375 000c 0139     		subs	r1, r1, #1
 376 000e 1368     		ldr	r3, [r2]
 377 0010 8B43     		bics	r3, r1
 378 0012 1360     		str	r3, [r2]
 379              		.loc 1 2152 0
 380 0014 7047     		bx	lr
 381              	.L31:
 382 0016 C046     		.align	2
 383              	.L30:
 384 0018 08000B40 		.word	1074462728
 385 001c 18000B40 		.word	1074462744
 386              		.cfi_endproc
 387              	.LFE12:
 388              		.size	CySysLvdDisable, .-CySysLvdDisable
 389              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 390              		.align	1
 391              		.global	CySysLvdGetInterruptSource
 392              		.code	16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 46


 393              		.thumb_func
 394              		.type	CySysLvdGetInterruptSource, %function
 395              	CySysLvdGetInterruptSource:
 396              	.LFB13:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 397              		.loc 1 2167 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 402              		.loc 1 2168 0
 403 0000 024B     		ldr	r3, .L33
2169:Generated_Source\PSoC4/CyLib.c ****     }
 404              		.loc 1 2169 0
 405              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 406              		.loc 1 2168 0
 407 0002 1868     		ldr	r0, [r3]
 408 0004 0223     		movs	r3, #2
 409 0006 1840     		ands	r0, r3
 410              		.loc 1 2169 0
 411 0008 7047     		bx	lr
 412              	.L34:
 413 000a C046     		.align	2
 414              	.L33:
 415 000c 04000B40 		.word	1074462724
 416              		.cfi_endproc
 417              	.LFE13:
 418              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 419              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 420              		.align	1
 421              		.global	CySysLvdClearInterrupt
 422              		.code	16
 423              		.thumb_func
 424              		.type	CySysLvdClearInterrupt, %function
 425              	CySysLvdClearInterrupt:
 426              	.LFB14:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 47


2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 427              		.loc 1 2183 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 432              		.loc 1 2184 0
 433 0000 0222     		movs	r2, #2
 434 0002 014B     		ldr	r3, .L36
2185:Generated_Source\PSoC4/CyLib.c ****     }
 435              		.loc 1 2185 0
 436              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 437              		.loc 1 2184 0
 438 0004 1A60     		str	r2, [r3]
 439              		.loc 1 2185 0
 440 0006 7047     		bx	lr
 441              	.L37:
 442              		.align	2
 443              	.L36:
 444 0008 04000B40 		.word	1074462724
 445              		.cfi_endproc
 446              	.LFE14:
 447              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 448              		.section	.text.CySysGetResetReason,"ax",%progbits
 449              		.align	1
 450              		.global	CySysGetResetReason
 451              		.code	16
 452              		.thumb_func
 453              		.type	CySysGetResetReason, %function
 454              	CySysGetResetReason:
 455              	.LFB15:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 48


2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 456              		.loc 1 2209 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL16:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 462              		.loc 1 2212 0
 463 0000 1923     		movs	r3, #25
 464 0002 0200     		movs	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 465              		.loc 1 2213 0
 466 0004 0249     		ldr	r1, .L39
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 467              		.loc 1 2212 0
 468 0006 1A40     		ands	r2, r3
 469              	.LVL17:
 470              		.loc 1 2213 0
 471 0008 0868     		ldr	r0, [r1]
 472              	.LVL18:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 473              		.loc 1 2218 0
 474              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 475              		.loc 1 2217 0
 476 000a 1840     		ands	r0, r3
 477              	.LVL19:
2215:Generated_Source\PSoC4/CyLib.c **** 
 478              		.loc 1 2215 0
 479 000c 0A60     		str	r2, [r1]
 480              		.loc 1 2218 0
 481 000e 7047     		bx	lr
 482              	.L40:
 483              		.align	2
 484              	.L39:
 485 0010 00030B40 		.word	1074463488
 486              		.cfi_endproc
 487              	.LFE15:
 488              		.size	CySysGetResetReason, .-CySysGetResetReason
 489              		.section	.text.CyDisableInts,"ax",%progbits
 490              		.align	1
 491              		.global	CyDisableInts
 492              		.code	16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 49


 493              		.thumb_func
 494              		.type	CyDisableInts, %function
 495              	CyDisableInts:
 496              	.LFB16:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 497              		.loc 1 2232 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 502              		.loc 1 2239 0
 503 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 504              		.loc 1 2236 0
 505 0002 024B     		ldr	r3, .L42
 506              		.loc 1 2239 0
 507 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 508              		.loc 1 2236 0
 509 0006 1868     		ldr	r0, [r3]
 510              	.LVL20:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 511              		.loc 1 2242 0
 512              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 513              		.loc 1 2239 0
 514 0008 1A60     		str	r2, [r3]
 515              		.loc 1 2242 0
 516 000a 7047     		bx	lr
 517              	.L43:
 518              		.align	2
 519              	.L42:
 520 000c 80E100E0 		.word	-536813184
 521              		.cfi_endproc
 522              	.LFE16:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 50


 523              		.size	CyDisableInts, .-CyDisableInts
 524              		.section	.text.CyEnableInts,"ax",%progbits
 525              		.align	1
 526              		.global	CyEnableInts
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyEnableInts, %function
 530              	CyEnableInts:
 531              	.LFB17:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2255 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL21:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 538              		.loc 1 2256 0
 539 0000 014B     		ldr	r3, .L45
2257:Generated_Source\PSoC4/CyLib.c **** }
 540              		.loc 1 2257 0
 541              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 542              		.loc 1 2256 0
 543 0002 1860     		str	r0, [r3]
 544              		.loc 1 2257 0
 545 0004 7047     		bx	lr
 546              	.L46:
 547 0006 C046     		.align	2
 548              	.L45:
 549 0008 00E100E0 		.word	-536813312
 550              		.cfi_endproc
 551              	.LFE17:
 552              		.size	CyEnableInts, .-CyEnableInts
 553              		.section	.text.CyIntSetSysVector,"ax",%progbits
 554              		.align	1
 555              		.global	CyIntSetSysVector
 556              		.code	16
 557              		.thumb_func
 558              		.type	CyIntSetSysVector, %function
 559              	CyIntSetSysVector:
 560              	.LFB18:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 51


2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 561              		.loc 1 2280 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566              	.LVL22:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 567              		.loc 1 2287 0
 568 0000 8023     		movs	r3, #128
 569 0002 8000     		lsls	r0, r0, #2
 570              	.LVL23:
 571 0004 9B05     		lsls	r3, r3, #22
 572 0006 C318     		adds	r3, r0, r3
 573 0008 1868     		ldr	r0, [r3]
 574              	.LVL24:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
 575              		.loc 1 2293 0
 576              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 577              		.loc 1 2290 0
 578 000a 1960     		str	r1, [r3]
 579              		.loc 1 2293 0
 580 000c 7047     		bx	lr
 581              		.cfi_endproc
 582              	.LFE18:
 583              		.size	CyIntSetSysVector, .-CyIntSetSysVector
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 52


 584              		.section	.text.CyIntGetSysVector,"ax",%progbits
 585              		.align	1
 586              		.global	CyIntGetSysVector
 587              		.code	16
 588              		.thumb_func
 589              		.type	CyIntGetSysVector, %function
 590              	CyIntGetSysVector:
 591              	.LFB19:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 592              		.loc 1 2314 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597              	.LVL25:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 598              		.loc 1 2319 0
 599 0000 8023     		movs	r3, #128
 600 0002 8000     		lsls	r0, r0, #2
 601              	.LVL26:
 602 0004 9B05     		lsls	r3, r3, #22
 603 0006 C018     		adds	r0, r0, r3
 604 0008 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** }
 605              		.loc 1 2320 0
 606              		@ sp needed
 607 000a 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE19:
 610              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 611              		.section	.text.CyIntSetVector,"ax",%progbits
 612              		.align	1
 613              		.global	CyIntSetVector
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 53


 614              		.code	16
 615              		.thumb_func
 616              		.type	CyIntSetVector, %function
 617              	CyIntSetVector:
 618              	.LFB20:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 619              		.loc 1 2336 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624              	.LVL27:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 625              		.loc 1 2343 0
 626 0000 024B     		ldr	r3, .L50
 627 0002 8000     		lsls	r0, r0, #2
 628              	.LVL28:
 629 0004 C318     		adds	r3, r0, r3
 630 0006 1868     		ldr	r0, [r3]
 631              	.LVL29:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 2349 0
 633              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 634              		.loc 1 2346 0
 635 0008 1960     		str	r1, [r3]
 636              		.loc 1 2349 0
 637 000a 7047     		bx	lr
 638              	.L51:
 639              		.align	2
 640              	.L50:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 54


 641 000c 40000020 		.word	536870976
 642              		.cfi_endproc
 643              	.LFE20:
 644              		.size	CyIntSetVector, .-CyIntSetVector
 645              		.section	.text.CyIntGetVector,"ax",%progbits
 646              		.align	1
 647              		.global	CyIntGetVector
 648              		.code	16
 649              		.thumb_func
 650              		.type	CyIntGetVector, %function
 651              	CyIntGetVector:
 652              	.LFB21:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 653              		.loc 1 2364 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658              	.LVL30:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 659              		.loc 1 2369 0
 660 0000 024B     		ldr	r3, .L53
 661 0002 8000     		lsls	r0, r0, #2
 662              	.LVL31:
 663 0004 C018     		adds	r0, r0, r3
 664 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 665              		.loc 1 2370 0
 666              		@ sp needed
 667 0008 7047     		bx	lr
 668              	.L54:
 669 000a C046     		.align	2
 670              	.L53:
 671 000c 40000020 		.word	536870976
 672              		.cfi_endproc
 673              	.LFE21:
 674              		.size	CyIntGetVector, .-CyIntGetVector
 675              		.section	.text.CyIntSetPriority,"ax",%progbits
 676              		.align	1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 55


 677              		.global	CyIntSetPriority
 678              		.code	16
 679              		.thumb_func
 680              		.type	CyIntSetPriority, %function
 681              	CyIntSetPriority:
 682              	.LFB22:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 683              		.loc 1 2383 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL32:
 688 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 689              		.cfi_def_cfa_offset 24
 690              		.cfi_offset 3, -24
 691              		.cfi_offset 4, -20
 692              		.cfi_offset 5, -16
 693              		.cfi_offset 6, -12
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 696              		.loc 1 2391 0
 697 0002 0326     		movs	r6, #3
 698 0004 0500     		movs	r5, r0
 699 0006 3540     		ands	r5, r6
 700 0008 B540     		lsls	r5, r5, r6
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 701              		.loc 1 2383 0
 702 000a 0F00     		movs	r7, r1
 703 000c 0400     		movs	r4, r0
 704              		.loc 1 2391 0
 705 000e 0635     		adds	r5, r5, #6
 706              	.LVL33:
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 56


 707              		.loc 1 2396 0
 708 0010 AE40     		lsls	r6, r6, r5
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 709              		.loc 1 2397 0
 710 0012 AF40     		lsls	r7, r7, r5
2393:Generated_Source\PSoC4/CyLib.c **** 
 711              		.loc 1 2393 0
 712 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 713              	.LVL34:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 714              		.loc 1 2395 0
 715 0018 A408     		lsrs	r4, r4, #2
 716 001a 054B     		ldr	r3, .L56
 717 001c A400     		lsls	r4, r4, #2
 718 001e E418     		adds	r4, r4, r3
 719 0020 2368     		ldr	r3, [r4]
 720              	.LVL35:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 721              		.loc 1 2401 0
 722              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 723              		.loc 1 2396 0
 724 0022 B343     		bics	r3, r6
 725              	.LVL36:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 726              		.loc 1 2397 0
 727 0024 1F43     		orrs	r7, r3
 728              	.LVL37:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 729              		.loc 1 2398 0
 730 0026 2760     		str	r7, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 731              		.loc 1 2400 0
 732 0028 FFF7FEFF 		bl	CyExitCriticalSection
 733              	.LVL38:
 734              	.LVL39:
 735              	.LVL40:
 736              		.loc 1 2401 0
 737 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 738              	.L57:
 739 002e C046     		.align	2
 740              	.L56:
 741 0030 00E400E0 		.word	-536812544
 742              		.cfi_endproc
 743              	.LFE22:
 744              		.size	CyIntSetPriority, .-CyIntSetPriority
 745              		.section	.text.CyIntGetPriority,"ax",%progbits
 746              		.align	1
 747              		.global	CyIntGetPriority
 748              		.code	16
 749              		.thumb_func
 750              		.type	CyIntGetPriority, %function
 751              	CyIntGetPriority:
 752              	.LFB23:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 57


2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 753              		.loc 1 2417 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758              	.LVL41:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 759              		.loc 1 2422 0
 760 0000 8308     		lsrs	r3, r0, #2
 761 0002 064A     		ldr	r2, .L59
 762 0004 9B00     		lsls	r3, r3, #2
 763 0006 9B18     		adds	r3, r3, r2
 764 0008 1968     		ldr	r1, [r3]
 765              	.LVL42:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 766              		.loc 1 2424 0
 767 000a 0322     		movs	r2, #3
 768 000c 0300     		movs	r3, r0
 769 000e 1340     		ands	r3, r2
 770 0010 9340     		lsls	r3, r3, r2
 771 0012 0633     		adds	r3, r3, #6
 772 0014 D940     		lsrs	r1, r1, r3
 773              	.LVL43:
 774 0016 0800     		movs	r0, r1
 775              	.LVL44:
2425:Generated_Source\PSoC4/CyLib.c **** }
 776              		.loc 1 2425 0
 777              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 778              		.loc 1 2424 0
 779 0018 1040     		ands	r0, r2
 780              		.loc 1 2425 0
 781 001a 7047     		bx	lr
 782              	.L60:
 783              		.align	2
 784              	.L59:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 58


 785 001c 00E400E0 		.word	-536812544
 786              		.cfi_endproc
 787              	.LFE23:
 788              		.size	CyIntGetPriority, .-CyIntGetPriority
 789              		.section	.text.CyIntEnable,"ax",%progbits
 790              		.align	1
 791              		.global	CyIntEnable
 792              		.code	16
 793              		.thumb_func
 794              		.type	CyIntEnable, %function
 795              	CyIntEnable:
 796              	.LFB24:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 797              		.loc 1 2438 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LVL45:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 803              		.loc 1 2439 0
 804 0000 1F23     		movs	r3, #31
 805 0002 1840     		ands	r0, r3
 806              	.LVL46:
 807 0004 1E3B     		subs	r3, r3, #30
 808 0006 8340     		lsls	r3, r3, r0
 809 0008 014A     		ldr	r2, .L62
2440:Generated_Source\PSoC4/CyLib.c **** }
 810              		.loc 1 2440 0
 811              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 812              		.loc 1 2439 0
 813 000a 1360     		str	r3, [r2]
 814              		.loc 1 2440 0
 815 000c 7047     		bx	lr
 816              	.L63:
 817 000e C046     		.align	2
 818              	.L62:
 819 0010 00E100E0 		.word	-536813312
 820              		.cfi_endproc
 821              	.LFE24:
 822              		.size	CyIntEnable, .-CyIntEnable
 823              		.section	.text.CyIntGetState,"ax",%progbits
 824              		.align	1
 825              		.global	CyIntGetState
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 59


 826              		.code	16
 827              		.thumb_func
 828              		.type	CyIntGetState, %function
 829              	CyIntGetState:
 830              	.LFB25:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 831              		.loc 1 2456 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836              	.LVL47:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 837              		.loc 1 2458 0
 838 0000 1F22     		movs	r2, #31
 839 0002 044B     		ldr	r3, .L65
 840 0004 1040     		ands	r0, r2
 841              	.LVL48:
 842 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 843              		.loc 1 2459 0
 844              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 845              		.loc 1 2458 0
 846 0008 C340     		lsrs	r3, r3, r0
 847 000a 1800     		movs	r0, r3
 848 000c 0123     		movs	r3, #1
 849 000e 1840     		ands	r0, r3
 850              		.loc 1 2459 0
 851 0010 7047     		bx	lr
 852              	.L66:
 853 0012 C046     		.align	2
 854              	.L65:
 855 0014 00E100E0 		.word	-536813312
 856              		.cfi_endproc
 857              	.LFE25:
 858              		.size	CyIntGetState, .-CyIntGetState
 859              		.section	.text.CyIntDisable,"ax",%progbits
 860              		.align	1
 861              		.global	CyIntDisable
 862              		.code	16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 60


 863              		.thumb_func
 864              		.type	CyIntDisable, %function
 865              	CyIntDisable:
 866              	.LFB26:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 867              		.loc 1 2472 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872              	.LVL49:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 873              		.loc 1 2473 0
 874 0000 1F23     		movs	r3, #31
 875 0002 1840     		ands	r0, r3
 876              	.LVL50:
 877 0004 1E3B     		subs	r3, r3, #30
 878 0006 8340     		lsls	r3, r3, r0
 879 0008 014A     		ldr	r2, .L68
2474:Generated_Source\PSoC4/CyLib.c **** }
 880              		.loc 1 2474 0
 881              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 882              		.loc 1 2473 0
 883 000a 1360     		str	r3, [r2]
 884              		.loc 1 2474 0
 885 000c 7047     		bx	lr
 886              	.L69:
 887 000e C046     		.align	2
 888              	.L68:
 889 0010 80E100E0 		.word	-536813184
 890              		.cfi_endproc
 891              	.LFE26:
 892              		.size	CyIntDisable, .-CyIntDisable
 893              		.section	.text.CyIntSetPending,"ax",%progbits
 894              		.align	1
 895              		.global	CyIntSetPending
 896              		.code	16
 897              		.thumb_func
 898              		.type	CyIntSetPending, %function
 899              	CyIntSetPending:
 900              	.LFB27:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 61


2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 901              		.loc 1 2486 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL51:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 907              		.loc 1 2487 0
 908 0000 1F23     		movs	r3, #31
 909 0002 1840     		ands	r0, r3
 910              	.LVL52:
 911 0004 1E3B     		subs	r3, r3, #30
 912 0006 8340     		lsls	r3, r3, r0
 913 0008 014A     		ldr	r2, .L71
2488:Generated_Source\PSoC4/CyLib.c **** }
 914              		.loc 1 2488 0
 915              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 916              		.loc 1 2487 0
 917 000a 1360     		str	r3, [r2]
 918              		.loc 1 2488 0
 919 000c 7047     		bx	lr
 920              	.L72:
 921 000e C046     		.align	2
 922              	.L71:
 923 0010 00E200E0 		.word	-536813056
 924              		.cfi_endproc
 925              	.LFE27:
 926              		.size	CyIntSetPending, .-CyIntSetPending
 927              		.section	.text.CyIntClearPending,"ax",%progbits
 928              		.align	1
 929              		.global	CyIntClearPending
 930              		.code	16
 931              		.thumb_func
 932              		.type	CyIntClearPending, %function
 933              	CyIntClearPending:
 934              	.LFB28:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 62


2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 935              		.loc 1 2501 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		@ link register save eliminated.
 940              	.LVL53:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 941              		.loc 1 2502 0
 942 0000 1F23     		movs	r3, #31
 943 0002 1840     		ands	r0, r3
 944              	.LVL54:
 945 0004 1E3B     		subs	r3, r3, #30
 946 0006 8340     		lsls	r3, r3, r0
 947 0008 014A     		ldr	r2, .L74
2503:Generated_Source\PSoC4/CyLib.c **** }
 948              		.loc 1 2503 0
 949              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 950              		.loc 1 2502 0
 951 000a 1360     		str	r3, [r2]
 952              		.loc 1 2503 0
 953 000c 7047     		bx	lr
 954              	.L75:
 955 000e C046     		.align	2
 956              	.L74:
 957 0010 80E200E0 		.word	-536812928
 958              		.cfi_endproc
 959              	.LFE28:
 960              		.size	CyIntClearPending, .-CyIntClearPending
 961              		.section	.text.CyHalt,"ax",%progbits
 962              		.align	1
 963              		.global	CyHalt
 964              		.code	16
 965              		.thumb_func
 966              		.type	CyHalt, %function
 967              	CyHalt:
 968              	.LFB29:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 969              		.loc 1 2516 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 63


 974              	.LVL55:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 975              		.loc 1 2525 0
 976              		.syntax divided
 977              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 978 0000 01BE     		    bkpt    1
 979              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 980              		.loc 1 2529 0
 981              		.thumb
 982              		.syntax unified
 983              		@ sp needed
 984 0002 7047     		bx	lr
 985              		.cfi_endproc
 986              	.LFE29:
 987              		.size	CyHalt, .-CyHalt
 988              		.section	.text.CySoftwareReset,"ax",%progbits
 989              		.align	1
 990              		.global	CySoftwareReset
 991              		.code	16
 992              		.thumb_func
 993              		.type	CySoftwareReset, %function
 994              	CySoftwareReset:
 995              	.LFB30:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 996              		.loc 1 2540 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1001              		.loc 1 2545 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 64


 1002 0000 034A     		ldr	r2, .L78
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1003              		.loc 1 2546 0
 1004 0002 0449     		ldr	r1, .L78+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1005              		.loc 1 2545 0
 1006 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1007              		.loc 1 2547 0
 1008              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1009              		.loc 1 2546 0
 1010 0006 9BB2     		uxth	r3, r3
 1011 0008 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1012              		.loc 1 2545 0
 1013 000a 1360     		str	r3, [r2]
 1014              		.loc 1 2547 0
 1015 000c 7047     		bx	lr
 1016              	.L79:
 1017 000e C046     		.align	2
 1018              	.L78:
 1019 0010 0CED00E0 		.word	-536810228
 1020 0014 0400FA05 		.word	100270084
 1021              		.cfi_endproc
 1022              	.LFE30:
 1023              		.size	CySoftwareReset, .-CySoftwareReset
 1024              		.section	.text.CyDelay,"ax",%progbits
 1025              		.align	1
 1026              		.global	CyDelay
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	CyDelay, %function
 1030              	CyDelay:
 1031              	.LFB31:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1032              		.loc 1 2560 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              	.LVL56:
 1037 0000 70B5     		push	{r4, r5, r6, lr}
 1038              		.cfi_def_cfa_offset 16
 1039              		.cfi_offset 4, -16
 1040              		.cfi_offset 5, -12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 65


 1041              		.cfi_offset 6, -8
 1042              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1043              		.loc 1 2561 0
 1044 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1045              		.loc 1 2560 0
 1046 0004 0400     		movs	r4, r0
 1047              		.loc 1 2561 0
 1048 0006 2D02     		lsls	r5, r5, #8
 1049              	.LVL57:
 1050              	.L81:
 1051 0008 064B     		ldr	r3, .L84
 1052 000a AC42     		cmp	r4, r5
 1053 000c 05D9     		bls	.L83
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1054              		.loc 1 2566 0
 1055 000e 5868     		ldr	r0, [r3, #4]
 1056 0010 FFF7FEFF 		bl	CyDelayCycles
 1057              	.LVL58:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1058              		.loc 1 2567 0
 1059 0014 044B     		ldr	r3, .L84+4
 1060 0016 E418     		adds	r4, r4, r3
 1061              	.LVL59:
 1062 0018 F6E7     		b	.L81
 1063              	.L83:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1064              		.loc 1 2570 0
 1065 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1066              		.loc 1 2571 0
 1067              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1068              		.loc 1 2570 0
 1069 001c 6043     		muls	r0, r4
 1070 001e FFF7FEFF 		bl	CyDelayCycles
 1071              	.LVL60:
 1072              	.LVL61:
 1073              		.loc 1 2571 0
 1074 0022 70BD     		pop	{r4, r5, r6, pc}
 1075              	.L85:
 1076              		.align	2
 1077              	.L84:
 1078 0024 00000000 		.word	.LANCHOR0
 1079 0028 0080FFFF 		.word	-32768
 1080              		.cfi_endproc
 1081              	.LFE31:
 1082              		.size	CyDelay, .-CyDelay
 1083              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1084              		.align	1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 66


 1085              		.global	CySysClkImoEnableWcoLock
 1086              		.code	16
 1087              		.thumb_func
 1088              		.type	CySysClkImoEnableWcoLock, %function
 1089              	CySysClkImoEnableWcoLock:
 1090              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1091              		.loc 1 176 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 8
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              	.LVL62:
 1096 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1097              		.cfi_def_cfa_offset 32
 1098              		.cfi_offset 0, -32
 1099              		.cfi_offset 1, -28
 1100              		.cfi_offset 2, -24
 1101              		.cfi_offset 4, -20
 1102              		.cfi_offset 5, -16
 1103              		.cfi_offset 6, -12
 1104              		.cfi_offset 7, -8
 1105              		.cfi_offset 14, -4
 187:Generated_Source\PSoC4/CyLib.c ****         {
 1106              		.loc 1 187 0
 1107 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 1108              	.LVL63:
 1109 0006 0028     		cmp	r0, #0
 1110 0008 4FD0     		beq	.L86
 1111              	.LBB16:
 1112              	.LBB17:
 189:Generated_Source\PSoC4/CyLib.c **** 
 1113              		.loc 1 189 0
 1114 000a FFF7FEFF 		bl	CyEnterCriticalSection
 1115              	.LVL64:
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 1116              		.loc 1 203 0
 1117 000e 3F27     		movs	r7, #63
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 1118              		.loc 1 201 0
 1119 0010 0022     		movs	r2, #0
 189:Generated_Source\PSoC4/CyLib.c **** 
 1120              		.loc 1 189 0
 1121 0012 0400     		movs	r4, r0
 1122              	.LVL65:
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 1123              		.loc 1 203 0
 1124 0014 254E     		ldr	r6, .L100
 1125 0016 2648     		ldr	r0, .L100+4
 1126              	.LVL66:
 1127              	.L90:
 1128 0018 3168     		ldr	r1, [r6]
 1129 001a 135C     		ldrb	r3, [r2, r0]
 1130 001c 3940     		ands	r1, r7
 1131 001e 0500     		movs	r5, r0
 1132 0020 9942     		cmp	r1, r3
 1133 0022 01D1     		bne	.L88
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 67


 1134              		.loc 1 205 0
 1135 0024 0332     		adds	r2, r2, #3
 1136              	.LVL67:
 1137 0026 03E0     		b	.L89
 1138              	.LVL68:
 1139              	.L88:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 1140              		.loc 1 201 0
 1141 0028 0132     		adds	r2, r2, #1
 1142              	.LVL69:
 1143 002a 2E2A     		cmp	r2, #46
 1144 002c F4D1     		bne	.L90
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 1145              		.loc 1 200 0
 1146 002e 2B3A     		subs	r2, r2, #43
 1147              	.LVL70:
 1148              	.L89:
 225:Generated_Source\PSoC4/CyLib.c ****                 {
 1149              		.loc 1 225 0
 1150 0030 1F20     		movs	r0, #31
 1151 0032 2049     		ldr	r1, .L100+8
 1152 0034 0B68     		ldr	r3, [r1]
 1153 0036 0342     		tst	r3, r0
 1154 0038 04D1     		bne	.L91
 227:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1155              		.loc 1 227 0
 1156 003a 0B68     		ldr	r3, [r1]
 1157 003c 8343     		bics	r3, r0
 1158 003e 1338     		subs	r0, r0, #19
 1159 0040 0343     		orrs	r3, r0
 1160 0042 0B60     		str	r3, [r1]
 1161              	.L91:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1162              		.loc 1 238 0
 1163 0044 8026     		movs	r6, #128
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1164              		.loc 1 232 0
 1165 0046 1C49     		ldr	r1, .L100+12
 1166 0048 1C4B     		ldr	r3, .L100+16
 1167 004a 0868     		ldr	r0, [r1]
 238:Generated_Source\PSoC4/CyLib.c **** 
 1168              		.loc 1 238 0
 1169 004c F601     		lsls	r6, r6, #7
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1170              		.loc 1 232 0
 1171 004e 1840     		ands	r0, r3
 1172              	.LVL71:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1173              		.loc 1 238 0
 1174 0050 1B4B     		ldr	r3, .L100+20
 1175 0052 5343     		muls	r3, r2
 1176 0054 9B19     		adds	r3, r3, r6
 1177 0056 DB0B     		lsrs	r3, r3, #15
 1178 0058 013B     		subs	r3, r3, #1
 1179 005a 0343     		orrs	r3, r0
 1180              	.LVL72:
 244:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 68


 1181              		.loc 1 244 0
 1182 005c 192A     		cmp	r2, #25
 1183 005e 01D8     		bhi	.L92
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1184              		.loc 1 246 0
 1185 0060 1848     		ldr	r0, .L100+24
 1186 0062 0CE0     		b	.L99
 1187              	.L92:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1188              		.loc 1 250 0
 1189 0064 1848     		ldr	r0, .L100+28
 1190 0066 1018     		adds	r0, r2, r0
 251:Generated_Source\PSoC4/CyLib.c **** 
 1191              		.loc 1 251 0
 1192 0068 AA18     		adds	r2, r5, r2
 1193              	.LVL73:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1194              		.loc 1 250 0
 1195 006a 0678     		ldrb	r6, [r0]
 1196 006c 107D     		ldrb	r0, [r2, #20]
 1197              	.LVL74:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1198              		.loc 1 241 0
 1199 006e A022     		movs	r2, #160
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1200              		.loc 1 256 0
 1201 0070 8019     		adds	r0, r0, r6
 1202              	.LVL75:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1203              		.loc 1 241 0
 1204 0072 5203     		lsls	r2, r2, #13
 1205 0074 1343     		orrs	r3, r2
 1206              	.LVL76:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1207              		.loc 1 256 0
 1208 0076 FF28     		cmp	r0, #255
 1209 0078 00D9     		bls	.L94
 1210 007a FF20     		movs	r0, #255
 1211              	.L94:
 1212 007c 8005     		lsls	r0, r0, #22
 1213              	.L99:
 1214 007e 0343     		orrs	r3, r0
 1215              	.LVL77:
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1216              		.loc 1 261 0
 1217 0080 124D     		ldr	r5, .L100+32
 259:Generated_Source\PSoC4/CyLib.c **** 
 1218              		.loc 1 259 0
 1219 0082 0B60     		str	r3, [r1]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1220              		.loc 1 261 0
 1221 0084 2B68     		ldr	r3, [r5]
 1222              	.LVL78:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1223              		.loc 1 262 0
 1224 0086 3020     		movs	r0, #48
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 69


 1225              		.loc 1 261 0
 1226 0088 0193     		str	r3, [sp, #4]
 1227              	.LVL79:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1228              		.loc 1 262 0
 1229 008a FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1230              	.LVL80:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1231              		.loc 1 263 0
 1232 008e 8021     		movs	r1, #128
 1233 0090 0F4A     		ldr	r2, .L100+36
 1234 0092 C905     		lsls	r1, r1, #23
 1235 0094 1368     		ldr	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1236              		.loc 1 264 0
 1237 0096 1420     		movs	r0, #20
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1238              		.loc 1 263 0
 1239 0098 0B43     		orrs	r3, r1
 1240 009a 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1241              		.loc 1 264 0
 1242 009c FFF7FEFF 		bl	CyDelay
 1243              	.LVL81:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1244              		.loc 1 265 0
 1245 00a0 019B     		ldr	r3, [sp, #4]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1246              		.loc 1 267 0
 1247 00a2 2000     		movs	r0, r4
 265:Generated_Source\PSoC4/CyLib.c **** 
 1248              		.loc 1 265 0
 1249 00a4 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1250              		.loc 1 267 0
 1251 00a6 FFF7FEFF 		bl	CyExitCriticalSection
 1252              	.LVL82:
 1253              	.L86:
 1254              	.LBE17:
 1255              	.LBE16:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1256              		.loc 1 269 0
 1257              		@ sp needed
 1258 00aa F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1259              	.L101:
 1260              		.align	2
 1261              	.L100:
 1262 00ac 2CFF0B40 		.word	1074528044
 1263 00b0 00000000 		.word	.LANCHOR1
 1264 00b4 34FF0B40 		.word	1074528052
 1265 00b8 08002240 		.word	1075970056
 1266 00bc 00F800C0 		.word	-1073678336
 1267 00c0 40420F00 		.word	1000000
 1268 00c4 0000D43F 		.word	1070858240
 1269 00c8 CDF1FF0F 		.word	268431821
 1270 00cc 30001040 		.word	1074790448
 1271 00d0 00002240 		.word	1075970048
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 70


 1272              		.cfi_endproc
 1273              	.LFE3:
 1274              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1275              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1276              		.align	1
 1277              		.global	CySysClkWriteImoFreq
 1278              		.code	16
 1279              		.thumb_func
 1280              		.type	CySysClkWriteImoFreq, %function
 1281              	CySysClkWriteImoFreq:
 1282              	.LFB10:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1283              		.loc 1 624 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 24
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              	.LVL83:
 1288 0000 30B5     		push	{r4, r5, lr}
 1289              		.cfi_def_cfa_offset 12
 1290              		.cfi_offset 4, -12
 1291              		.cfi_offset 5, -8
 1292              		.cfi_offset 14, -4
 1293 0002 87B0     		sub	sp, sp, #28
 1294              		.cfi_def_cfa_offset 40
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1295              		.loc 1 624 0
 1296 0004 0400     		movs	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 647 0
 1298 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1299              	.LVL84:
 1300 000a 0500     		movs	r5, r0
 1301              	.LVL85:
 650:Generated_Source\PSoC4/CyLib.c ****             {
 1302              		.loc 1 650 0
 1303 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1304              	.LVL86:
 637:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1305              		.loc 1 637 0
 1306 0010 0022     		movs	r2, #0
 650:Generated_Source\PSoC4/CyLib.c ****             {
 1307              		.loc 1 650 0
 1308 0012 9042     		cmp	r0, r2
 1309 0014 02D0     		beq	.L103
 1310              	.LVL87:
 653:Generated_Source\PSoC4/CyLib.c ****             }
 1311              		.loc 1 653 0
 1312 0016 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1313              	.LVL88:
 652:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1314              		.loc 1 652 0
 1315 001a 0122     		movs	r2, #1
 1316              	.LVL89:
 1317              	.L103:
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1318              		.loc 1 681 0
 1319 001c 104B     		ldr	r3, .L107
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 71


 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1320              		.loc 1 692 0
 1321 001e 1148     		ldr	r0, .L107+4
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1322              		.loc 1 681 0
 1323 0020 1968     		ldr	r1, [r3]
 1324 0022 02AB     		add	r3, sp, #8
 1325 0024 0291     		str	r1, [sp, #8]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1326              		.loc 1 682 0
 1327 0026 1049     		ldr	r1, .L107+8
 1328 0028 0968     		ldr	r1, [r1]
 1329 002a 0391     		str	r1, [sp, #12]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1330              		.loc 1 683 0
 1331 002c 0F49     		ldr	r1, .L107+12
 1332 002e 0C19     		adds	r4, r1, r4
 1333              	.LVL90:
 1334 0030 033C     		subs	r4, r4, #3
 1335 0032 2178     		ldrb	r1, [r4]
 1336 0034 0491     		str	r1, [sp, #16]
 684:Generated_Source\PSoC4/CyLib.c **** 
 1337              		.loc 1 684 0
 1338 0036 0E49     		ldr	r1, .L107+16
 1339 0038 0968     		ldr	r1, [r1]
 1340 003a 0591     		str	r1, [sp, #20]
 686:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1341              		.loc 1 686 0
 1342 003c 0D49     		ldr	r1, .L107+20
 1343 003e 0091     		str	r1, [sp]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1344              		.loc 1 691 0
 1345 0040 6946     		mov	r1, sp
 689:Generated_Source\PSoC4/CyLib.c **** 
 1346              		.loc 1 689 0
 1347 0042 0193     		str	r3, [sp, #4]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1348              		.loc 1 691 0
 1349 0044 0C4B     		ldr	r3, .L107+24
 1350 0046 1960     		str	r1, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1351              		.loc 1 692 0
 1352 0048 0C49     		ldr	r1, .L107+28
 1353 004a 0860     		str	r0, [r1]
 693:Generated_Source\PSoC4/CyLib.c **** 
 1354              		.loc 1 693 0
 1355 004c 1B68     		ldr	r3, [r3]
 810:Generated_Source\PSoC4/CyLib.c ****             {
 1356              		.loc 1 810 0
 1357 004e 012A     		cmp	r2, #1
 1358 0050 01D1     		bne	.L104
 812:Generated_Source\PSoC4/CyLib.c ****             }
 1359              		.loc 1 812 0
 1360 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1361              	.LVL91:
 1362              	.L104:
 823:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 72


 1363              		.loc 1 823 0
 1364 0056 2800     		movs	r0, r5
 1365 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1366              	.LVL92:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1367              		.loc 1 824 0
 1368 005c 07B0     		add	sp, sp, #28
 1369              		@ sp needed
 1370              	.LVL93:
 1371 005e 30BD     		pop	{r4, r5, pc}
 1372              	.L108:
 1373              		.align	2
 1374              	.L107:
 1375 0060 08010B40 		.word	1074462984
 1376 0064 17000080 		.word	-2147483625
 1377 0068 00010B40 		.word	1074462976
 1378 006c 00000000 		.word	.LANCHOR1
 1379 0070 30001040 		.word	1074790448
 1380 0074 B6EA0000 		.word	60086
 1381 0078 08001040 		.word	1074790408
 1382 007c 04001040 		.word	1074790404
 1383              		.cfi_endproc
 1384              	.LFE10:
 1385              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1386              		.section	.text.CyDelayUs,"ax",%progbits
 1387              		.align	1
 1388              		.global	CyDelayUs
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	CyDelayUs, %function
 1392              	CyDelayUs:
 1393              	.LFB32:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1394              		.loc 1 2583 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              	.LVL94:
 1399 0000 10B5     		push	{r4, lr}
 1400              		.cfi_def_cfa_offset 8
 1401              		.cfi_offset 4, -8
 1402              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1403              		.loc 1 2584 0
 1404 0002 034B     		ldr	r3, .L110
2585:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 73


 1405              		.loc 1 2585 0
 1406              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1407              		.loc 1 2584 0
 1408 0004 1B7B     		ldrb	r3, [r3, #12]
 1409 0006 5843     		muls	r0, r3
 1410              	.LVL95:
 1411 0008 FFF7FEFF 		bl	CyDelayCycles
 1412              	.LVL96:
 1413              		.loc 1 2585 0
 1414 000c 10BD     		pop	{r4, pc}
 1415              	.L111:
 1416 000e C046     		.align	2
 1417              	.L110:
 1418 0010 00000000 		.word	.LANCHOR0
 1419              		.cfi_endproc
 1420              	.LFE32:
 1421              		.size	CyDelayUs, .-CyDelayUs
 1422              		.section	.text.CySysLvdEnable,"ax",%progbits
 1423              		.align	1
 1424              		.global	CySysLvdEnable
 1425              		.code	16
 1426              		.thumb_func
 1427              		.type	CySysLvdEnable, %function
 1428              	CySysLvdEnable:
 1429              	.LFB11:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1430              		.loc 1 2119 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              	.LVL97:
 1435 0000 70B5     		push	{r4, r5, r6, lr}
 1436              		.cfi_def_cfa_offset 16
 1437              		.cfi_offset 4, -16
 1438              		.cfi_offset 5, -12
 1439              		.cfi_offset 6, -8
 1440              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1441              		.loc 1 2121 0
 1442 0002 0225     		movs	r5, #2
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1443              		.loc 1 2124 0
 1444 0004 1E21     		movs	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 1445              		.loc 1 2121 0
 1446 0006 0C4C     		ldr	r4, .L113
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1447              		.loc 1 2124 0
 1448 0008 0C4A     		ldr	r2, .L113+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1449              		.loc 1 2121 0
 1450 000a 2368     		ldr	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1451              		.loc 1 2124 0
 1452 000c 4000     		lsls	r0, r0, #1
 1453              	.LVL98:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 74


2121:Generated_Source\PSoC4/CyLib.c **** 
 1454              		.loc 1 2121 0
 1455 000e AB43     		bics	r3, r5
 1456 0010 2360     		str	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1457              		.loc 1 2124 0
 1458 0012 1368     		ldr	r3, [r2]
 1459 0014 0840     		ands	r0, r1
 1460 0016 8B43     		bics	r3, r1
 1461 0018 1843     		orrs	r0, r3
 1462 001a 1060     		str	r0, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1463              		.loc 1 2131 0
 1464 001c FA20     		movs	r0, #250
2128:Generated_Source\PSoC4/CyLib.c **** 
 1465              		.loc 1 2128 0
 1466 001e 1368     		ldr	r3, [r2]
 1467 0020 1D39     		subs	r1, r1, #29
 1468 0022 0B43     		orrs	r3, r1
 1469 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1470              		.loc 1 2131 0
 1471 0026 8000     		lsls	r0, r0, #2
 1472 0028 FFF7FEFF 		bl	CyDelayUs
 1473              	.LVL99:
 1474              	.LBB18:
 1475              	.LBB19:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1476              		.loc 1 2184 0
 1477 002c 044B     		ldr	r3, .L113+8
 1478              	.LBE19:
 1479              	.LBE18:
2138:Generated_Source\PSoC4/CyLib.c **** 
 1480              		.loc 1 2138 0
 1481              		@ sp needed
 1482              	.LBB21:
 1483              	.LBB20:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1484              		.loc 1 2184 0
 1485 002e 1D60     		str	r5, [r3]
 1486              	.LBE20:
 1487              	.LBE21:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1488              		.loc 1 2137 0
 1489 0030 2368     		ldr	r3, [r4]
 1490 0032 1D43     		orrs	r5, r3
 1491 0034 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1492              		.loc 1 2138 0
 1493 0036 70BD     		pop	{r4, r5, r6, pc}
 1494              	.L114:
 1495              		.align	2
 1496              	.L113:
 1497 0038 08000B40 		.word	1074462728
 1498 003c 18000B40 		.word	1074462744
 1499 0040 04000B40 		.word	1074462724
 1500              		.cfi_endproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 75


 1501              	.LFE11:
 1502              		.size	CySysLvdEnable, .-CySysLvdEnable
 1503              		.global	__aeabi_uidiv
 1504              		.section	.text.CyDelayFreq,"ax",%progbits
 1505              		.align	1
 1506              		.global	CyDelayFreq
 1507              		.code	16
 1508              		.thumb_func
 1509              		.type	CyDelayFreq, %function
 1510              	CyDelayFreq:
 1511              	.LFB33:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1512              		.loc 1 2597 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              	.LVL100:
 1517 0000 70B5     		push	{r4, r5, r6, lr}
 1518              		.cfi_def_cfa_offset 16
 1519              		.cfi_offset 4, -16
 1520              		.cfi_offset 5, -12
 1521              		.cfi_offset 6, -8
 1522              		.cfi_offset 14, -4
 1523 0002 0C4C     		ldr	r4, .L118
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1524              		.loc 1 2598 0
 1525 0004 0028     		cmp	r0, #0
 1526 0006 01D0     		beq	.L116
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1527              		.loc 1 2600 0
 1528 0008 2061     		str	r0, [r4, #16]
 1529 000a 01E0     		b	.L117
 1530              	.L116:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1531              		.loc 1 2604 0
 1532 000c 0A4B     		ldr	r3, .L118+4
 1533 000e 2361     		str	r3, [r4, #16]
 1534              	.L117:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1535              		.loc 1 2607 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 76


 1536 0010 2569     		ldr	r5, [r4, #16]
 1537 0012 0A4B     		ldr	r3, .L118+8
 1538 0014 0A49     		ldr	r1, .L118+12
 1539 0016 E818     		adds	r0, r5, r3
 1540              	.LVL101:
 1541 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1542              	.LVL102:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1543              		.loc 1 2608 0
 1544 001c FA21     		movs	r1, #250
 1545 001e 094B     		ldr	r3, .L118+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1546              		.loc 1 2607 0
 1547 0020 2073     		strb	r0, [r4, #12]
 1548              		.loc 1 2608 0
 1549 0022 8900     		lsls	r1, r1, #2
 1550 0024 E818     		adds	r0, r5, r3
 1551 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1552              	.LVL103:
 1553 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1554              		.loc 1 2609 0
 1555 002c C003     		lsls	r0, r0, #15
 1556 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1557              		.loc 1 2610 0
 1558              		@ sp needed
 1559 0030 70BD     		pop	{r4, r5, r6, pc}
 1560              	.L119:
 1561 0032 C046     		.align	2
 1562              	.L118:
 1563 0034 00000000 		.word	.LANCHOR0
 1564 0038 006CDC02 		.word	48000000
 1565 003c 3F420F00 		.word	999999
 1566 0040 40420F00 		.word	1000000
 1567 0044 E7030000 		.word	999
 1568              		.cfi_endproc
 1569              	.LFE33:
 1570              		.size	CyDelayFreq, .-CyDelayFreq
 1571              		.section	.text.CySysTickInit,"ax",%progbits
 1572              		.align	1
 1573              		.global	CySysTickInit
 1574              		.code	16
 1575              		.thumb_func
 1576              		.type	CySysTickInit, %function
 1577              	CySysTickInit:
 1578              	.LFB35:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 77


2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1579              		.loc 1 2658 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              	.LVL104:
 1584 0000 10B5     		push	{r4, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 4, -8
 1587              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1588              		.loc 1 2663 0
 1589 0002 0024     		movs	r4, #0
 1590              	.LBB34:
 1591              	.LBB35:
 1592              	.LBB36:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 78


2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2708:Generated_Source\PSoC4/CyLib.c **** }
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 79


2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2724:Generated_Source\PSoC4/CyLib.c **** }
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2740:Generated_Source\PSoC4/CyLib.c **** }
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2757:Generated_Source\PSoC4/CyLib.c **** }
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 80


2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2789:Generated_Source\PSoC4/CyLib.c **** }
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1593              		.loc 1 2822 0
 1594 0004 0421     		movs	r1, #4
 1595              	.LBE36:
 1596              	.LBE35:
 1597              	.LBE34:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1598              		.loc 1 2663 0
 1599 0006 0E4B     		ldr	r3, .L121
 1600              	.LBB41:
 1601              	.LBB42:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1602              		.loc 1 2290 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 81


 1603 0008 0E4A     		ldr	r2, .L121+4
 1604              	.LBE42:
 1605              	.LBE41:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1606              		.loc 1 2663 0
 1607 000a 1C60     		str	r4, [r3]
 1608              	.LVL105:
 1609 000c 1C61     		str	r4, [r3, #16]
 1610 000e 5C60     		str	r4, [r3, #4]
 1611              	.LVL106:
 1612 0010 9C60     		str	r4, [r3, #8]
 1613              	.LVL107:
 1614 0012 DC60     		str	r4, [r3, #12]
 1615              	.LVL108:
 1616              	.LBB45:
 1617              	.LBB43:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1618              		.loc 1 2290 0
 1619 0014 0C4B     		ldr	r3, .L121+8
 1620              	.LVL109:
 1621              	.LBE43:
 1622              	.LBE45:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1623              		.loc 1 2675 0
 1624              		@ sp needed
 1625              	.LBB46:
 1626              	.LBB44:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1627              		.loc 1 2290 0
 1628 0016 1A60     		str	r2, [r3]
 1629              	.LVL110:
 1630              	.LBE44:
 1631              	.LBE46:
 1632              	.LBB47:
 1633              	.LBB39:
 1634              	.LBB37:
 1635              		.loc 1 2822 0
 1636 0018 0C4A     		ldr	r2, .L121+12
 1637 001a 1368     		ldr	r3, [r2]
 1638 001c 0B43     		orrs	r3, r1
 1639              	.LBE37:
 1640              	.LBE39:
 1641              	.LBE47:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1642              		.loc 1 2672 0
 1643 001e FA21     		movs	r1, #250
 1644              	.LBB48:
 1645              	.LBB40:
 1646              	.LBB38:
 1647              		.loc 1 2822 0
 1648 0020 1360     		str	r3, [r2]
 1649              	.LVL111:
 1650              	.LBE38:
 1651              	.LBE40:
 1652              	.LBE48:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1653              		.loc 1 2672 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 82


 1654 0022 0B4B     		ldr	r3, .L121+16
 1655 0024 8900     		lsls	r1, r1, #2
 1656 0026 1869     		ldr	r0, [r3, #16]
 1657 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1658              	.LVL112:
 1659              	.LBB49:
 1660              	.LBB50:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1661              		.loc 1 2439 0
 1662 002c 8022     		movs	r2, #128
 1663              	.LBE50:
 1664              	.LBE49:
 1665              	.LBB53:
 1666              	.LBB54:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1667              		.loc 1 2756 0
 1668 002e 094B     		ldr	r3, .L121+20
 1669              	.LBE54:
 1670              	.LBE53:
 1671              	.LBB56:
 1672              	.LBB51:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1673              		.loc 1 2439 0
 1674 0030 1202     		lsls	r2, r2, #8
 1675              	.LBE51:
 1676              	.LBE56:
 1677              	.LBB57:
 1678              	.LBB55:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1679              		.loc 1 2756 0
 1680 0032 1860     		str	r0, [r3]
 1681              	.LVL113:
 1682              	.LBE55:
 1683              	.LBE57:
 1684              	.LBB58:
 1685              	.LBB59:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 83


2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2869:Generated_Source\PSoC4/CyLib.c **** }
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1686              		.loc 1 2881 0
 1687 0034 084B     		ldr	r3, .L121+24
 1688 0036 1C60     		str	r4, [r3]
 1689              	.LVL114:
 1690              	.LBE59:
 1691              	.LBE58:
 1692              	.LBB60:
 1693              	.LBB52:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1694              		.loc 1 2439 0
 1695 0038 084B     		ldr	r3, .L121+28
 1696 003a 1A60     		str	r2, [r3]
 1697              	.LVL115:
 1698              	.LBE52:
 1699              	.LBE60:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1700              		.loc 1 2675 0
 1701 003c 10BD     		pop	{r4, pc}
 1702              	.L122:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 84


 1703 003e C046     		.align	2
 1704              	.L121:
 1705 0040 00000000 		.word	.LANCHOR2
 1706 0044 00000000 		.word	CySysTickServiceCallbacks
 1707 0048 3C000020 		.word	536870972
 1708 004c 10E000E0 		.word	-536813552
 1709 0050 00000000 		.word	.LANCHOR0
 1710 0054 14E000E0 		.word	-536813548
 1711 0058 18E000E0 		.word	-536813544
 1712 005c 00E100E0 		.word	-536813312
 1713              		.cfi_endproc
 1714              	.LFE35:
 1715              		.size	CySysTickInit, .-CySysTickInit
 1716              		.section	.text.CySysTickStop,"ax",%progbits
 1717              		.align	1
 1718              		.global	CySysTickStop
 1719              		.code	16
 1720              		.thumb_func
 1721              		.type	CySysTickStop, %function
 1722              	CySysTickStop:
 1723              	.LFB37:
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1724              		.loc 1 2706 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728              		@ link register save eliminated.
2707:Generated_Source\PSoC4/CyLib.c **** }
 1729              		.loc 1 2707 0
 1730 0000 0121     		movs	r1, #1
 1731 0002 024A     		ldr	r2, .L124
2708:Generated_Source\PSoC4/CyLib.c **** 
 1732              		.loc 1 2708 0
 1733              		@ sp needed
2707:Generated_Source\PSoC4/CyLib.c **** }
 1734              		.loc 1 2707 0
 1735 0004 1368     		ldr	r3, [r2]
 1736 0006 8B43     		bics	r3, r1
 1737 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** 
 1738              		.loc 1 2708 0
 1739 000a 7047     		bx	lr
 1740              	.L125:
 1741              		.align	2
 1742              	.L124:
 1743 000c 10E000E0 		.word	-536813552
 1744              		.cfi_endproc
 1745              	.LFE37:
 1746              		.size	CySysTickStop, .-CySysTickStop
 1747              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1748              		.align	1
 1749              		.global	CySysTickEnableInterrupt
 1750              		.code	16
 1751              		.thumb_func
 1752              		.type	CySysTickEnableInterrupt, %function
 1753              	CySysTickEnableInterrupt:
 1754              	.LFB38:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 85


2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1755              		.loc 1 2722 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
2723:Generated_Source\PSoC4/CyLib.c **** }
 1760              		.loc 1 2723 0
 1761 0000 0221     		movs	r1, #2
 1762 0002 024A     		ldr	r2, .L127
2724:Generated_Source\PSoC4/CyLib.c **** 
 1763              		.loc 1 2724 0
 1764              		@ sp needed
2723:Generated_Source\PSoC4/CyLib.c **** }
 1765              		.loc 1 2723 0
 1766 0004 1368     		ldr	r3, [r2]
 1767 0006 0B43     		orrs	r3, r1
 1768 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** 
 1769              		.loc 1 2724 0
 1770 000a 7047     		bx	lr
 1771              	.L128:
 1772              		.align	2
 1773              	.L127:
 1774 000c 10E000E0 		.word	-536813552
 1775              		.cfi_endproc
 1776              	.LFE38:
 1777              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1778              		.section	.text.CySysTickEnable,"ax",%progbits
 1779              		.align	1
 1780              		.global	CySysTickEnable
 1781              		.code	16
 1782              		.thumb_func
 1783              		.type	CySysTickEnable, %function
 1784              	CySysTickEnable:
 1785              	.LFB36:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1786              		.loc 1 2689 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 0
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
 1790 0000 10B5     		push	{r4, lr}
 1791              		.cfi_def_cfa_offset 8
 1792              		.cfi_offset 4, -8
 1793              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1794              		.loc 1 2690 0
 1795 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1796              	.LVL116:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1797              		.loc 1 2691 0
 1798 0006 0121     		movs	r1, #1
 1799 0008 024A     		ldr	r2, .L130
2692:Generated_Source\PSoC4/CyLib.c **** 
 1800              		.loc 1 2692 0
 1801              		@ sp needed
2691:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 86


 1802              		.loc 1 2691 0
 1803 000a 1368     		ldr	r3, [r2]
 1804 000c 0B43     		orrs	r3, r1
 1805 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1806              		.loc 1 2692 0
 1807 0010 10BD     		pop	{r4, pc}
 1808              	.L131:
 1809 0012 C046     		.align	2
 1810              	.L130:
 1811 0014 10E000E0 		.word	-536813552
 1812              		.cfi_endproc
 1813              	.LFE36:
 1814              		.size	CySysTickEnable, .-CySysTickEnable
 1815              		.section	.text.CySysTickStart,"ax",%progbits
 1816              		.align	1
 1817              		.global	CySysTickStart
 1818              		.code	16
 1819              		.thumb_func
 1820              		.type	CySysTickStart, %function
 1821              	CySysTickStart:
 1822              	.LFB34:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1823              		.loc 1 2629 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827 0000 10B5     		push	{r4, lr}
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 4, -8
 1830              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1831              		.loc 1 2630 0
 1832 0002 054C     		ldr	r4, .L134
 1833 0004 6369     		ldr	r3, [r4, #20]
 1834 0006 002B     		cmp	r3, #0
 1835 0008 03D1     		bne	.L133
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1836              		.loc 1 2632 0
 1837 000a FFF7FEFF 		bl	CySysTickInit
 1838              	.LVL117:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1839              		.loc 1 2633 0
 1840 000e 0123     		movs	r3, #1
 1841 0010 6361     		str	r3, [r4, #20]
 1842              	.L133:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1843              		.loc 1 2636 0
 1844 0012 FFF7FEFF 		bl	CySysTickEnable
 1845              	.LVL118:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1846              		.loc 1 2637 0
 1847              		@ sp needed
 1848 0016 10BD     		pop	{r4, pc}
 1849              	.L135:
 1850              		.align	2
 1851              	.L134:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 87


 1852 0018 00000000 		.word	.LANCHOR2
 1853              		.cfi_endproc
 1854              	.LFE34:
 1855              		.size	CySysTickStart, .-CySysTickStart
 1856              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1857              		.align	1
 1858              		.global	CySysTickDisableInterrupt
 1859              		.code	16
 1860              		.thumb_func
 1861              		.type	CySysTickDisableInterrupt, %function
 1862              	CySysTickDisableInterrupt:
 1863              	.LFB39:
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1864              		.loc 1 2738 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 0, uses_anonymous_args = 0
 1868              		@ link register save eliminated.
2739:Generated_Source\PSoC4/CyLib.c **** }
 1869              		.loc 1 2739 0
 1870 0000 0221     		movs	r1, #2
 1871 0002 024A     		ldr	r2, .L137
2740:Generated_Source\PSoC4/CyLib.c **** 
 1872              		.loc 1 2740 0
 1873              		@ sp needed
2739:Generated_Source\PSoC4/CyLib.c **** }
 1874              		.loc 1 2739 0
 1875 0004 1368     		ldr	r3, [r2]
 1876 0006 8B43     		bics	r3, r1
 1877 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** 
 1878              		.loc 1 2740 0
 1879 000a 7047     		bx	lr
 1880              	.L138:
 1881              		.align	2
 1882              	.L137:
 1883 000c 10E000E0 		.word	-536813552
 1884              		.cfi_endproc
 1885              	.LFE39:
 1886              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1887              		.section	.text.CySysTickSetReload,"ax",%progbits
 1888              		.align	1
 1889              		.global	CySysTickSetReload
 1890              		.code	16
 1891              		.thumb_func
 1892              		.type	CySysTickSetReload, %function
 1893              	CySysTickSetReload:
 1894              	.LFB40:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1895              		.loc 1 2755 0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 0
 1898              		@ frame_needed = 0, uses_anonymous_args = 0
 1899              		@ link register save eliminated.
 1900              	.LVL119:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1901              		.loc 1 2756 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 88


 1902 0000 024B     		ldr	r3, .L140
 1903 0002 0002     		lsls	r0, r0, #8
 1904              	.LVL120:
 1905 0004 000A     		lsrs	r0, r0, #8
 1906 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** 
 1907              		.loc 1 2757 0
 1908              		@ sp needed
 1909 0008 7047     		bx	lr
 1910              	.L141:
 1911 000a C046     		.align	2
 1912              	.L140:
 1913 000c 14E000E0 		.word	-536813548
 1914              		.cfi_endproc
 1915              	.LFE40:
 1916              		.size	CySysTickSetReload, .-CySysTickSetReload
 1917              		.section	.text.CySysTickGetReload,"ax",%progbits
 1918              		.align	1
 1919              		.global	CySysTickGetReload
 1920              		.code	16
 1921              		.thumb_func
 1922              		.type	CySysTickGetReload, %function
 1923              	CySysTickGetReload:
 1924              	.LFB41:
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1925              		.loc 1 2771 0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 0
 1928              		@ frame_needed = 0, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
2772:Generated_Source\PSoC4/CyLib.c **** }
 1930              		.loc 1 2772 0
 1931 0000 024B     		ldr	r3, .L143
2773:Generated_Source\PSoC4/CyLib.c **** 
 1932              		.loc 1 2773 0
 1933              		@ sp needed
2772:Generated_Source\PSoC4/CyLib.c **** }
 1934              		.loc 1 2772 0
 1935 0002 1868     		ldr	r0, [r3]
 1936 0004 0002     		lsls	r0, r0, #8
 1937 0006 000A     		lsrs	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** 
 1938              		.loc 1 2773 0
 1939 0008 7047     		bx	lr
 1940              	.L144:
 1941 000a C046     		.align	2
 1942              	.L143:
 1943 000c 14E000E0 		.word	-536813548
 1944              		.cfi_endproc
 1945              	.LFE41:
 1946              		.size	CySysTickGetReload, .-CySysTickGetReload
 1947              		.section	.text.CySysTickGetValue,"ax",%progbits
 1948              		.align	1
 1949              		.global	CySysTickGetValue
 1950              		.code	16
 1951              		.thumb_func
 1952              		.type	CySysTickGetValue, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 89


 1953              	CySysTickGetValue:
 1954              	.LFB42:
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1955              		.loc 1 2787 0
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 0
 1958              		@ frame_needed = 0, uses_anonymous_args = 0
 1959              		@ link register save eliminated.
2788:Generated_Source\PSoC4/CyLib.c **** }
 1960              		.loc 1 2788 0
 1961 0000 024B     		ldr	r3, .L146
2789:Generated_Source\PSoC4/CyLib.c **** 
 1962              		.loc 1 2789 0
 1963              		@ sp needed
2788:Generated_Source\PSoC4/CyLib.c **** }
 1964              		.loc 1 2788 0
 1965 0002 1868     		ldr	r0, [r3]
 1966 0004 0002     		lsls	r0, r0, #8
 1967 0006 000A     		lsrs	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** 
 1968              		.loc 1 2789 0
 1969 0008 7047     		bx	lr
 1970              	.L147:
 1971 000a C046     		.align	2
 1972              	.L146:
 1973 000c 18E000E0 		.word	-536813544
 1974              		.cfi_endproc
 1975              	.LFE42:
 1976              		.size	CySysTickGetValue, .-CySysTickGetValue
 1977              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1978              		.align	1
 1979              		.global	CySysTickSetClockSource
 1980              		.code	16
 1981              		.thumb_func
 1982              		.type	CySysTickSetClockSource, %function
 1983              	CySysTickSetClockSource:
 1984              	.LFB43:
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1985              		.loc 1 2819 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 1989              		@ link register save eliminated.
 1990              	.LVL121:
 1991 0000 044B     		ldr	r3, .L152
 1992 0002 0421     		movs	r1, #4
 1993              	.LBB63:
 1994              	.LBB64:
2822:Generated_Source\PSoC4/CyLib.c ****         }
 1995              		.loc 1 2822 0
 1996 0004 1A68     		ldr	r2, [r3]
 1997              	.LBE64:
 1998              	.LBE63:
2820:Generated_Source\PSoC4/CyLib.c ****         {
 1999              		.loc 1 2820 0
 2000 0006 0128     		cmp	r0, #1
 2001 0008 01D1     		bne	.L149
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 90


 2002              	.LVL122:
 2003              	.LBB66:
 2004              	.LBB65:
2822:Generated_Source\PSoC4/CyLib.c ****         }
 2005              		.loc 1 2822 0
 2006 000a 0A43     		orrs	r2, r1
 2007 000c 00E0     		b	.L151
 2008              	.LVL123:
 2009              	.L149:
 2010              	.LBE65:
 2011              	.LBE66:
2826:Generated_Source\PSoC4/CyLib.c ****         }
 2012              		.loc 1 2826 0
 2013 000e 8A43     		bics	r2, r1
 2014              	.L151:
 2015 0010 1A60     		str	r2, [r3]
2828:Generated_Source\PSoC4/CyLib.c **** 
 2016              		.loc 1 2828 0
 2017              		@ sp needed
 2018 0012 7047     		bx	lr
 2019              	.L153:
 2020              		.align	2
 2021              	.L152:
 2022 0014 10E000E0 		.word	-536813552
 2023              		.cfi_endproc
 2024              	.LFE43:
 2025              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2026              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2027              		.align	1
 2028              		.global	CySysTickGetClockSource
 2029              		.code	16
 2030              		.thumb_func
 2031              		.type	CySysTickGetClockSource, %function
 2032              	CySysTickGetClockSource:
 2033              	.LFB44:
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2034              		.loc 1 2844 0
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 0
 2037              		@ frame_needed = 0, uses_anonymous_args = 0
 2038              		@ link register save eliminated.
2845:Generated_Source\PSoC4/CyLib.c ****     }
 2039              		.loc 1 2845 0
 2040 0000 024B     		ldr	r3, .L155
2846:Generated_Source\PSoC4/CyLib.c ****     
 2041              		.loc 1 2846 0
 2042              		@ sp needed
2845:Generated_Source\PSoC4/CyLib.c ****     }
 2043              		.loc 1 2845 0
 2044 0002 1868     		ldr	r0, [r3]
 2045 0004 4007     		lsls	r0, r0, #29
 2046 0006 C00F     		lsrs	r0, r0, #31
2846:Generated_Source\PSoC4/CyLib.c ****     
 2047              		.loc 1 2846 0
 2048 0008 7047     		bx	lr
 2049              	.L156:
 2050 000a C046     		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 91


 2051              	.L155:
 2052 000c 10E000E0 		.word	-536813552
 2053              		.cfi_endproc
 2054              	.LFE44:
 2055              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2056              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2057              		.align	1
 2058              		.global	CySysTickGetCountFlag
 2059              		.code	16
 2060              		.thumb_func
 2061              		.type	CySysTickGetCountFlag, %function
 2062              	CySysTickGetCountFlag:
 2063              	.LFB45:
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2064              		.loc 1 2867 0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
 2068              		@ link register save eliminated.
2868:Generated_Source\PSoC4/CyLib.c **** }
 2069              		.loc 1 2868 0
 2070 0000 024B     		ldr	r3, .L158
2869:Generated_Source\PSoC4/CyLib.c **** 
 2071              		.loc 1 2869 0
 2072              		@ sp needed
2868:Generated_Source\PSoC4/CyLib.c **** }
 2073              		.loc 1 2868 0
 2074 0002 1868     		ldr	r0, [r3]
 2075 0004 C003     		lsls	r0, r0, #15
 2076 0006 C00F     		lsrs	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** 
 2077              		.loc 1 2869 0
 2078 0008 7047     		bx	lr
 2079              	.L159:
 2080 000a C046     		.align	2
 2081              	.L158:
 2082 000c 10E000E0 		.word	-536813552
 2083              		.cfi_endproc
 2084              	.LFE45:
 2085              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2086              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2087              		.align	1
 2088              		.code	16
 2089              		.thumb_func
 2090              		.type	CySysTickServiceCallbacks, %function
 2091              	CySysTickServiceCallbacks:
 2092              	.LFB49:
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 92


2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 93


2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 2093              		.loc 1 2952 0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 0
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
 2097 0000 10B5     		push	{r4, lr}
 2098              		.cfi_def_cfa_offset 8
 2099              		.cfi_offset 4, -8
 2100              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2101              		.loc 1 2956 0
 2102 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2103              	.LVL124:
 2104 0006 0128     		cmp	r0, #1
 2105 0008 08D1     		bne	.L160
 2106 000a 0024     		movs	r4, #0
 2107              	.L163:
 2108              	.LBB69:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2109              		.loc 1 2960 0
 2110 000c 044B     		ldr	r3, .L169
 2111 000e E358     		ldr	r3, [r4, r3]
 2112 0010 002B     		cmp	r3, #0
 2113 0012 00D0     		beq	.L162
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2114              		.loc 1 2962 0
 2115 0014 9847     		blx	r3
 2116              	.LVL125:
 2117              	.L162:
 2118 0016 0434     		adds	r4, r4, #4
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2119              		.loc 1 2958 0
 2120 0018 142C     		cmp	r4, #20
 2121 001a F7D1     		bne	.L163
 2122              	.L160:
 2123              	.LBE69:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 2124              		.loc 1 2966 0
 2125              		@ sp needed
 2126 001c 10BD     		pop	{r4, pc}
 2127              	.L170:
 2128 001e C046     		.align	2
 2129              	.L169:
 2130 0020 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 94


 2131              		.cfi_endproc
 2132              	.LFE49:
 2133              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2134              		.section	.text.CySysTickClear,"ax",%progbits
 2135              		.align	1
 2136              		.global	CySysTickClear
 2137              		.code	16
 2138              		.thumb_func
 2139              		.type	CySysTickClear, %function
 2140              	CySysTickClear:
 2141              	.LFB46:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2142              		.loc 1 2880 0
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 0
 2145              		@ frame_needed = 0, uses_anonymous_args = 0
 2146              		@ link register save eliminated.
2881:Generated_Source\PSoC4/CyLib.c **** }
 2147              		.loc 1 2881 0
 2148 0000 0022     		movs	r2, #0
 2149 0002 014B     		ldr	r3, .L172
2882:Generated_Source\PSoC4/CyLib.c **** 
 2150              		.loc 1 2882 0
 2151              		@ sp needed
2881:Generated_Source\PSoC4/CyLib.c **** }
 2152              		.loc 1 2881 0
 2153 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 2154              		.loc 1 2882 0
 2155 0006 7047     		bx	lr
 2156              	.L173:
 2157              		.align	2
 2158              	.L172:
 2159 0008 18E000E0 		.word	-536813544
 2160              		.cfi_endproc
 2161              	.LFE46:
 2162              		.size	CySysTickClear, .-CySysTickClear
 2163              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2164              		.align	1
 2165              		.global	CySysTickSetCallback
 2166              		.code	16
 2167              		.thumb_func
 2168              		.type	CySysTickSetCallback, %function
 2169              	CySysTickSetCallback:
 2170              	.LFB47:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2171              		.loc 1 2915 0
 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 0
 2174              		@ frame_needed = 0, uses_anonymous_args = 0
 2175              		@ link register save eliminated.
 2176              	.LVL126:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2177              		.loc 1 2918 0
 2178 0000 024A     		ldr	r2, .L175
 2179 0002 8300     		lsls	r3, r0, #2
 2180 0004 9858     		ldr	r0, [r3, r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 95


 2181              	.LVL127:
2921:Generated_Source\PSoC4/CyLib.c **** 
 2182              		.loc 1 2921 0
 2183              		@ sp needed
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2184              		.loc 1 2919 0
 2185 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 2186              		.loc 1 2921 0
 2187 0008 7047     		bx	lr
 2188              	.L176:
 2189 000a C046     		.align	2
 2190              	.L175:
 2191 000c 00000000 		.word	.LANCHOR2
 2192              		.cfi_endproc
 2193              	.LFE47:
 2194              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2195              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2196              		.align	1
 2197              		.global	CySysTickGetCallback
 2198              		.code	16
 2199              		.thumb_func
 2200              		.type	CySysTickGetCallback, %function
 2201              	CySysTickGetCallback:
 2202              	.LFB48:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2203              		.loc 1 2939 0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 0
 2206              		@ frame_needed = 0, uses_anonymous_args = 0
 2207              		@ link register save eliminated.
 2208              	.LVL128:
2940:Generated_Source\PSoC4/CyLib.c **** }
 2209              		.loc 1 2940 0
 2210 0000 014B     		ldr	r3, .L178
 2211 0002 8000     		lsls	r0, r0, #2
 2212              	.LVL129:
 2213 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 2214              		.loc 1 2941 0
 2215              		@ sp needed
 2216 0006 7047     		bx	lr
 2217              	.L179:
 2218              		.align	2
 2219              	.L178:
 2220 0008 00000000 		.word	.LANCHOR2
 2221              		.cfi_endproc
 2222              	.LFE48:
 2223              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2224              		.section	.text.CyGetUniqueId,"ax",%progbits
 2225              		.align	1
 2226              		.global	CyGetUniqueId
 2227              		.code	16
 2228              		.thumb_func
 2229              		.type	CyGetUniqueId, %function
 2230              	CyGetUniqueId:
 2231              	.LFB50:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 96


2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2232              		.loc 1 2984 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              		@ link register save eliminated.
 2237              	.LVL130:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2238              		.loc 1 2986 0
 2239 0000 144B     		ldr	r3, .L181
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2240              		.loc 1 3006 0
 2241              		@ sp needed
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2242              		.loc 1 2986 0
 2243 0002 1A78     		ldrb	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2244              		.loc 1 2987 0
 2245 0004 144B     		ldr	r3, .L181+4
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 97


 2246              		.loc 1 2986 0
 2247 0006 D1B2     		uxtb	r1, r2
 2248 0008 0160     		str	r1, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2249              		.loc 1 2987 0
 2250 000a 1B78     		ldrb	r3, [r3]
 2251 000c 1B02     		lsls	r3, r3, #8
 2252 000e 0B43     		orrs	r3, r1
 2253 0010 1A00     		movs	r2, r3
 2254 0012 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2255              		.loc 1 2988 0
 2256 0014 114B     		ldr	r3, .L181+8
 2257 0016 1B78     		ldrb	r3, [r3]
 2258 0018 1B04     		lsls	r3, r3, #16
 2259 001a 1343     		orrs	r3, r2
2989:Generated_Source\PSoC4/CyLib.c **** 
 2260              		.loc 1 2989 0
 2261 001c 104A     		ldr	r2, .L181+12
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2262              		.loc 1 2988 0
 2263 001e 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
 2264              		.loc 1 2989 0
 2265 0020 1278     		ldrb	r2, [r2]
 2266 0022 1206     		lsls	r2, r2, #24
 2267 0024 1343     		orrs	r3, r2
 2268 0026 0360     		str	r3, [r0]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2269              		.loc 1 2991 0
 2270 0028 0E4B     		ldr	r3, .L181+16
 2271 002a 1A78     		ldrb	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2272              		.loc 1 2992 0
 2273 002c 0E4B     		ldr	r3, .L181+20
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2274              		.loc 1 2991 0
 2275 002e D1B2     		uxtb	r1, r2
 2276 0030 4160     		str	r1, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2277              		.loc 1 2992 0
 2278 0032 1B78     		ldrb	r3, [r3]
 2279 0034 1B02     		lsls	r3, r3, #8
 2280 0036 0B43     		orrs	r3, r1
 2281 0038 1A00     		movs	r2, r3
 2282 003a 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2283              		.loc 1 2993 0
 2284 003c 0B4B     		ldr	r3, .L181+24
 2285 003e 1B78     		ldrb	r3, [r3]
 2286 0040 1B04     		lsls	r3, r3, #16
 2287 0042 1343     		orrs	r3, r2
2994:Generated_Source\PSoC4/CyLib.c **** #else
 2288              		.loc 1 2994 0
 2289 0044 0A4A     		ldr	r2, .L181+28
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2290              		.loc 1 2993 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 98


 2291 0046 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
 2292              		.loc 1 2994 0
 2293 0048 1278     		ldrb	r2, [r2]
 2294 004a 1206     		lsls	r2, r2, #24
 2295 004c 1343     		orrs	r3, r2
 2296 004e 4360     		str	r3, [r0, #4]
 2297              		.loc 1 3006 0
 2298 0050 7047     		bx	lr
 2299              	.L182:
 2300 0052 C046     		.align	2
 2301              	.L181:
 2302 0054 78F1FF0F 		.word	268431736
 2303 0058 79F1FF0F 		.word	268431737
 2304 005c 7AF1FF0F 		.word	268431738
 2305 0060 7BF1FF0F 		.word	268431739
 2306 0064 7CF1FF0F 		.word	268431740
 2307 0068 7DF1FF0F 		.word	268431741
 2308 006c 7EF1FF0F 		.word	268431742
 2309 0070 7FF1FF0F 		.word	268431743
 2310              		.cfi_endproc
 2311              	.LFE50:
 2312              		.size	CyGetUniqueId, .-CyGetUniqueId
 2313              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2314              		.align	1
 2315              		.global	CySysSetRamAccessArbPriority
 2316              		.code	16
 2317              		.thumb_func
 2318              		.type	CySysSetRamAccessArbPriority, %function
 2319              	CySysSetRamAccessArbPriority:
 2320              	.LFB51:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 2321              		.loc 1 3028 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 99


 2325              		@ link register save eliminated.
 2326              	.LVL131:
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2327              		.loc 1 3031 0
 2328 0000 0549     		ldr	r1, .L184
 2329 0002 064B     		ldr	r3, .L184+4
 2330 0004 0A68     		ldr	r2, [r1]
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2331              		.loc 1 3032 0
 2332 0006 4004     		lsls	r0, r0, #17
 2333              	.LVL132:
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2334              		.loc 1 3031 0
 2335 0008 1340     		ands	r3, r2
 2336              	.LVL133:
 2337              		.loc 1 3032 0
 2338 000a C022     		movs	r2, #192
 2339 000c D202     		lsls	r2, r2, #11
 2340 000e 1040     		ands	r0, r2
 2341 0010 1843     		orrs	r0, r3
 2342              	.LVL134:
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2343              		.loc 1 3033 0
 2344 0012 0860     		str	r0, [r1]
3034:Generated_Source\PSoC4/CyLib.c ****     }
 2345              		.loc 1 3034 0
 2346              		@ sp needed
 2347 0014 7047     		bx	lr
 2348              	.L185:
 2349 0016 C046     		.align	2
 2350              	.L184:
 2351 0018 38001040 		.word	1074790456
 2352 001c FFFFF9FF 		.word	-393217
 2353              		.cfi_endproc
 2354              	.LFE51:
 2355              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2356              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2357              		.align	1
 2358              		.global	CySysSetFlashAccessArbPriority
 2359              		.code	16
 2360              		.thumb_func
 2361              		.type	CySysSetFlashAccessArbPriority, %function
 2362              	CySysSetFlashAccessArbPriority:
 2363              	.LFB52:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 100


3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 2364              		.loc 1 3055 0
 2365              		.cfi_startproc
 2366              		@ args = 0, pretend = 0, frame = 0
 2367              		@ frame_needed = 0, uses_anonymous_args = 0
 2368              		@ link register save eliminated.
 2369              	.LVL135:
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2370              		.loc 1 3058 0
 2371 0000 0549     		ldr	r1, .L187
 2372 0002 064B     		ldr	r3, .L187+4
 2373 0004 0A68     		ldr	r2, [r1]
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2374              		.loc 1 3059 0
 2375 0006 4004     		lsls	r0, r0, #17
 2376              	.LVL136:
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2377              		.loc 1 3058 0
 2378 0008 1340     		ands	r3, r2
 2379              	.LVL137:
 2380              		.loc 1 3059 0
 2381 000a C022     		movs	r2, #192
 2382 000c D202     		lsls	r2, r2, #11
 2383 000e 1040     		ands	r0, r2
 2384 0010 1843     		orrs	r0, r3
 2385              	.LVL138:
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2386              		.loc 1 3060 0
 2387 0012 0860     		str	r0, [r1]
3061:Generated_Source\PSoC4/CyLib.c ****     }
 2388              		.loc 1 3061 0
 2389              		@ sp needed
 2390 0014 7047     		bx	lr
 2391              	.L188:
 2392 0016 C046     		.align	2
 2393              	.L187:
 2394 0018 30001040 		.word	1074790448
 2395 001c FFFFF9FF 		.word	-393217
 2396              		.cfi_endproc
 2397              	.LFE52:
 2398              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2399              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2400              		.align	1
 2401              		.global	CySysSetDmacAccessArbPriority
 2402              		.code	16
 2403              		.thumb_func
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 101


 2404              		.type	CySysSetDmacAccessArbPriority, %function
 2405              	CySysSetDmacAccessArbPriority:
 2406              	.LFB53:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 2407              		.loc 1 3082 0
 2408              		.cfi_startproc
 2409              		@ args = 0, pretend = 0, frame = 0
 2410              		@ frame_needed = 0, uses_anonymous_args = 0
 2411              		@ link register save eliminated.
 2412              	.LVL139:
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2413              		.loc 1 3085 0
 2414 0000 0549     		ldr	r1, .L190
 2415 0002 064B     		ldr	r3, .L190+4
 2416 0004 0A68     		ldr	r2, [r1]
3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2417              		.loc 1 3086 0
 2418 0006 4004     		lsls	r0, r0, #17
 2419              	.LVL140:
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2420              		.loc 1 3085 0
 2421 0008 1340     		ands	r3, r2
 2422              	.LVL141:
 2423              		.loc 1 3086 0
 2424 000a C022     		movs	r2, #192
 2425 000c D202     		lsls	r2, r2, #11
 2426 000e 1040     		ands	r0, r2
 2427 0010 1843     		orrs	r0, r3
 2428              	.LVL142:
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2429              		.loc 1 3087 0
 2430 0012 0860     		str	r0, [r1]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 2431              		.loc 1 3088 0
 2432              		@ sp needed
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 102


 2433 0014 7047     		bx	lr
 2434              	.L191:
 2435 0016 C046     		.align	2
 2436              	.L190:
 2437 0018 3C001040 		.word	1074790460
 2438 001c FFFFF9FF 		.word	-393217
 2439              		.cfi_endproc
 2440              	.LFE53:
 2441              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2442              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2443              		.align	1
 2444              		.global	CySysSetPeripheralAccessArbPriority
 2445              		.code	16
 2446              		.thumb_func
 2447              		.type	CySysSetPeripheralAccessArbPriority, %function
 2448              	CySysSetPeripheralAccessArbPriority:
 2449              	.LFB54:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 2450              		.loc 1 3111 0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 0
 2453              		@ frame_needed = 0, uses_anonymous_args = 0
 2454              		@ link register save eliminated.
 2455              	.LVL143:
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2456              		.loc 1 3114 0
 2457 0000 0028     		cmp	r0, #0
 2458 0002 01D1     		bne	.L193
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2459              		.loc 1 3116 0
 2460 0004 0948     		ldr	r0, .L197
 2461              	.LVL144:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 103


 2462 0006 06E0     		b	.L196
 2463              	.LVL145:
 2464              	.L193:
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2465              		.loc 1 3121 0
 2466 0008 0128     		cmp	r0, #1
 2467 000a 01D1     		bne	.L195
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2468              		.loc 1 3123 0
 2469 000c 0848     		ldr	r0, .L197+4
 2470              	.LVL146:
 2471 000e 02E0     		b	.L196
 2472              	.LVL147:
 2473              	.L195:
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2474              		.loc 1 3129 0
 2475 0010 0228     		cmp	r0, #2
 2476 0012 09D1     		bne	.L192
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2477              		.loc 1 3131 0
 2478 0014 0748     		ldr	r0, .L197+8
 2479              	.LVL148:
 2480              	.L196:
 2481 0016 0268     		ldr	r2, [r0]
 2482 0018 074B     		ldr	r3, .L197+12
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2483              		.loc 1 3132 0
 2484 001a 4904     		lsls	r1, r1, #17
 2485              	.LVL149:
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2486              		.loc 1 3131 0
 2487 001c 1340     		ands	r3, r2
 2488              	.LVL150:
 2489              		.loc 1 3132 0
 2490 001e C022     		movs	r2, #192
 2491 0020 D202     		lsls	r2, r2, #11
 2492 0022 1140     		ands	r1, r2
 2493 0024 1943     		orrs	r1, r3
 2494              	.LVL151:
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2495              		.loc 1 3133 0
 2496 0026 0160     		str	r1, [r0]
 2497              	.LVL152:
 2498              	.L192:
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 104


3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 2499              		.loc 1 3140 0
 2500              		@ sp needed
 2501 0028 7047     		bx	lr
 2502              	.L198:
 2503 002a C046     		.align	2
 2504              	.L197:
 2505 002c 00011040 		.word	1074790656
 2506 0030 04011040 		.word	1074790660
 2507 0034 08011040 		.word	1074790664
 2508 0038 FFFFF9FF 		.word	-393217
 2509              		.cfi_endproc
 2510              	.LFE54:
 2511              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2512              		.global	CySysClkPumpConfig
 2513              		.global	cyImoFreqMhz2DpllOffset
 2514              		.global	cyImoFreqMhz2Reg
 2515              		.global	CySysTickInitVar
 2516              		.global	cydelay32kMs
 2517              		.global	cydelayFreqMhz
 2518              		.global	cydelayFreqKhz
 2519              		.global	cydelayFreqHz
 2520              		.section	.rodata
 2521              		.set	.LANCHOR1,. + 0
 2522              		.type	cyImoFreqMhz2Reg, %object
 2523              		.size	cyImoFreqMhz2Reg, 46
 2524              	cyImoFreqMhz2Reg:
 2525 0000 03       		.byte	3
 2526 0001 04       		.byte	4
 2527 0002 05       		.byte	5
 2528 0003 06       		.byte	6
 2529 0004 07       		.byte	7
 2530 0005 08       		.byte	8
 2531 0006 09       		.byte	9
 2532 0007 0A       		.byte	10
 2533 0008 0B       		.byte	11
 2534 0009 0C       		.byte	12
 2535 000a 0E       		.byte	14
 2536 000b 0F       		.byte	15
 2537 000c 10       		.byte	16
 2538 000d 11       		.byte	17
 2539 000e 12       		.byte	18
 2540 000f 13       		.byte	19
 2541 0010 14       		.byte	20
 2542 0011 15       		.byte	21
 2543 0012 16       		.byte	22
 2544 0013 17       		.byte	23
 2545 0014 18       		.byte	24
 2546 0015 19       		.byte	25
 2547 0016 1B       		.byte	27
 2548 0017 1C       		.byte	28
 2549 0018 1D       		.byte	29
 2550 0019 1E       		.byte	30
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 105


 2551 001a 1F       		.byte	31
 2552 001b 20       		.byte	32
 2553 001c 21       		.byte	33
 2554 001d 22       		.byte	34
 2555 001e 23       		.byte	35
 2556 001f 25       		.byte	37
 2557 0020 26       		.byte	38
 2558 0021 27       		.byte	39
 2559 0022 28       		.byte	40
 2560 0023 29       		.byte	41
 2561 0024 2A       		.byte	42
 2562 0025 2B       		.byte	43
 2563 0026 2E       		.byte	46
 2564 0027 2F       		.byte	47
 2565 0028 30       		.byte	48
 2566 0029 31       		.byte	49
 2567 002a 32       		.byte	50
 2568 002b 33       		.byte	51
 2569 002c 34       		.byte	52
 2570 002d 35       		.byte	53
 2571              		.type	cyImoFreqMhz2DpllOffset, %object
 2572              		.size	cyImoFreqMhz2DpllOffset, 23
 2573              	cyImoFreqMhz2DpllOffset:
 2574 002e EE       		.byte	-18
 2575 002f DB       		.byte	-37
 2576 0030 C9       		.byte	-55
 2577 0031 B9       		.byte	-71
 2578 0032 AA       		.byte	-86
 2579 0033 9B       		.byte	-101
 2580 0034 8E       		.byte	-114
 2581 0035 82       		.byte	-126
 2582 0036 76       		.byte	118
 2583 0037 6B       		.byte	107
 2584 0038 60       		.byte	96
 2585 0039 56       		.byte	86
 2586 003a 4D       		.byte	77
 2587 003b 44       		.byte	68
 2588 003c 3B       		.byte	59
 2589 003d 33       		.byte	51
 2590 003e 2C       		.byte	44
 2591 003f 24       		.byte	36
 2592 0040 1D       		.byte	29
 2593 0041 17       		.byte	23
 2594 0042 10       		.byte	16
 2595 0043 0A       		.byte	10
 2596 0044 04       		.byte	4
 2597              		.data
 2598              		.align	2
 2599              		.set	.LANCHOR0,. + 0
 2600              		.type	CySysClkPumpConfig, %object
 2601              		.size	CySysClkPumpConfig, 4
 2602              	CySysClkPumpConfig:
 2603 0000 01000000 		.word	1
 2604              		.type	cydelay32kMs, %object
 2605              		.size	cydelay32kMs, 4
 2606              	cydelay32kMs:
 2607 0004 0000C05D 		.word	1572864000
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 106


 2608              		.type	cydelayFreqKhz, %object
 2609              		.size	cydelayFreqKhz, 4
 2610              	cydelayFreqKhz:
 2611 0008 80BB0000 		.word	48000
 2612              		.type	cydelayFreqMhz, %object
 2613              		.size	cydelayFreqMhz, 1
 2614              	cydelayFreqMhz:
 2615 000c 30       		.byte	48
 2616 000d 000000   		.space	3
 2617              		.type	cydelayFreqHz, %object
 2618              		.size	cydelayFreqHz, 4
 2619              	cydelayFreqHz:
 2620 0010 006CDC02 		.word	48000000
 2621              		.bss
 2622              		.align	2
 2623              		.set	.LANCHOR2,. + 0
 2624              		.type	CySysTickCallbacks, %object
 2625              		.size	CySysTickCallbacks, 20
 2626              	CySysTickCallbacks:
 2627 0000 00000000 		.space	20
 2627      00000000 
 2627      00000000 
 2627      00000000 
 2627      00000000 
 2628              		.type	CySysTickInitVar, %object
 2629              		.size	CySysTickInitVar, 4
 2630              	CySysTickInitVar:
 2631 0014 00000000 		.space	4
 2632              		.text
 2633              	.Letext0:
 2634              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2635              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2636              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2637              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2638              		.section	.debug_info,"",%progbits
 2639              	.Ldebug_info0:
 2640 0000 020E0000 		.4byte	0xe02
 2641 0004 0400     		.2byte	0x4
 2642 0006 00000000 		.4byte	.Ldebug_abbrev0
 2643 000a 04       		.byte	0x4
 2644 000b 01       		.uleb128 0x1
 2645 000c 82040000 		.4byte	.LASF120
 2646 0010 0C       		.byte	0xc
 2647 0011 C4070000 		.4byte	.LASF121
 2648 0015 92030000 		.4byte	.LASF122
 2649 0019 A8000000 		.4byte	.Ldebug_ranges0+0xa8
 2650 001d 00000000 		.4byte	0
 2651 0021 00000000 		.4byte	.Ldebug_line0
 2652 0025 02       		.uleb128 0x2
 2653 0026 01       		.byte	0x1
 2654 0027 06       		.byte	0x6
 2655 0028 EB000000 		.4byte	.LASF0
 2656 002c 02       		.uleb128 0x2
 2657 002d 01       		.byte	0x1
 2658 002e 08       		.byte	0x8
 2659 002f 02060000 		.4byte	.LASF1
 2660 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 107


 2661 0034 02       		.byte	0x2
 2662 0035 05       		.byte	0x5
 2663 0036 17060000 		.4byte	.LASF2
 2664 003a 02       		.uleb128 0x2
 2665 003b 02       		.byte	0x2
 2666 003c 07       		.byte	0x7
 2667 003d 0D030000 		.4byte	.LASF3
 2668 0041 02       		.uleb128 0x2
 2669 0042 04       		.byte	0x4
 2670 0043 05       		.byte	0x5
 2671 0044 50010000 		.4byte	.LASF4
 2672 0048 02       		.uleb128 0x2
 2673 0049 04       		.byte	0x4
 2674 004a 07       		.byte	0x7
 2675 004b 80020000 		.4byte	.LASF5
 2676 004f 02       		.uleb128 0x2
 2677 0050 08       		.byte	0x8
 2678 0051 05       		.byte	0x5
 2679 0052 DD000000 		.4byte	.LASF6
 2680 0056 02       		.uleb128 0x2
 2681 0057 08       		.byte	0x8
 2682 0058 07       		.byte	0x7
 2683 0059 67000000 		.4byte	.LASF7
 2684 005d 03       		.uleb128 0x3
 2685 005e 04       		.byte	0x4
 2686 005f 05       		.byte	0x5
 2687 0060 696E7400 		.ascii	"int\000"
 2688 0064 02       		.uleb128 0x2
 2689 0065 04       		.byte	0x4
 2690 0066 07       		.byte	0x7
 2691 0067 64020000 		.4byte	.LASF8
 2692 006b 04       		.uleb128 0x4
 2693 006c 85010000 		.4byte	.LASF9
 2694 0070 02       		.byte	0x2
 2695 0071 BF01     		.2byte	0x1bf
 2696 0073 2C000000 		.4byte	0x2c
 2697 0077 04       		.uleb128 0x4
 2698 0078 0F000000 		.4byte	.LASF10
 2699 007c 02       		.byte	0x2
 2700 007d C001     		.2byte	0x1c0
 2701 007f 3A000000 		.4byte	0x3a
 2702 0083 04       		.uleb128 0x4
 2703 0084 C5010000 		.4byte	.LASF11
 2704 0088 02       		.byte	0x2
 2705 0089 C101     		.2byte	0x1c1
 2706 008b 48000000 		.4byte	0x48
 2707 008f 02       		.uleb128 0x2
 2708 0090 04       		.byte	0x4
 2709 0091 04       		.byte	0x4
 2710 0092 68050000 		.4byte	.LASF12
 2711 0096 02       		.uleb128 0x2
 2712 0097 08       		.byte	0x8
 2713 0098 04       		.byte	0x4
 2714 0099 A1010000 		.4byte	.LASF13
 2715 009d 02       		.uleb128 0x2
 2716 009e 01       		.byte	0x1
 2717 009f 08       		.byte	0x8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 108


 2718 00a0 6D060000 		.4byte	.LASF14
 2719 00a4 04       		.uleb128 0x4
 2720 00a5 CF050000 		.4byte	.LASF15
 2721 00a9 02       		.byte	0x2
 2722 00aa 6902     		.2byte	0x269
 2723 00ac B0000000 		.4byte	0xb0
 2724 00b0 05       		.uleb128 0x5
 2725 00b1 6B000000 		.4byte	0x6b
 2726 00b5 04       		.uleb128 0x4
 2727 00b6 F5030000 		.4byte	.LASF16
 2728 00ba 02       		.byte	0x2
 2729 00bb 6B02     		.2byte	0x26b
 2730 00bd C1000000 		.4byte	0xc1
 2731 00c1 05       		.uleb128 0x5
 2732 00c2 83000000 		.4byte	0x83
 2733 00c6 04       		.uleb128 0x4
 2734 00c7 8A060000 		.4byte	.LASF17
 2735 00cb 02       		.byte	0x2
 2736 00cc 7B02     		.2byte	0x27b
 2737 00ce D2000000 		.4byte	0xd2
 2738 00d2 06       		.uleb128 0x6
 2739 00d3 04       		.byte	0x4
 2740 00d4 D8000000 		.4byte	0xd8
 2741 00d8 07       		.uleb128 0x7
 2742 00d9 02       		.uleb128 0x2
 2743 00da 08       		.byte	0x8
 2744 00db 04       		.byte	0x4
 2745 00dc 6E040000 		.4byte	.LASF18
 2746 00e0 02       		.uleb128 0x2
 2747 00e1 04       		.byte	0x4
 2748 00e2 07       		.byte	0x7
 2749 00e3 1E040000 		.4byte	.LASF19
 2750 00e7 08       		.uleb128 0x8
 2751 00e8 93050000 		.4byte	.LASF20
 2752 00ec 03       		.byte	0x3
 2753 00ed F5       		.byte	0xf5
 2754 00ee D2000000 		.4byte	0xd2
 2755 00f2 09       		.uleb128 0x9
 2756 00f3 E9010000 		.4byte	.LASF26
 2757 00f7 01       		.byte	0x1
 2758 00f8 AF       		.byte	0xaf
 2759 00f9 01       		.byte	0x1
 2760 00fa 3F010000 		.4byte	0x13f
 2761 00fe 0A       		.uleb128 0xa
 2762 00ff 6900     		.ascii	"i\000"
 2763 0101 01       		.byte	0x1
 2764 0102 B2       		.byte	0xb2
 2765 0103 83000000 		.4byte	0x83
 2766 0107 0B       		.uleb128 0xb
 2767 0108 F7000000 		.4byte	.LASF21
 2768 010c 01       		.byte	0x1
 2769 010d B5       		.byte	0xb5
 2770 010e 83000000 		.4byte	0x83
 2771 0112 0B       		.uleb128 0xb
 2772 0113 08010000 		.4byte	.LASF22
 2773 0117 01       		.byte	0x1
 2774 0118 B6       		.byte	0xb6
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 109


 2775 0119 6B000000 		.4byte	0x6b
 2776 011d 0B       		.uleb128 0xb
 2777 011e 20030000 		.4byte	.LASF23
 2778 0122 01       		.byte	0x1
 2779 0123 B7       		.byte	0xb7
 2780 0124 83000000 		.4byte	0x83
 2781 0128 0B       		.uleb128 0xb
 2782 0129 17010000 		.4byte	.LASF24
 2783 012d 01       		.byte	0x1
 2784 012e B8       		.byte	0xb8
 2785 012f 83000000 		.4byte	0x83
 2786 0133 0B       		.uleb128 0xb
 2787 0134 EF060000 		.4byte	.LASF25
 2788 0138 01       		.byte	0x1
 2789 0139 B9       		.byte	0xb9
 2790 013a C1000000 		.4byte	0xc1
 2791 013e 00       		.byte	0
 2792 013f 0C       		.uleb128 0xc
 2793 0140 AE010000 		.4byte	.LASF31
 2794 0144 01       		.byte	0x1
 2795 0145 8608     		.2byte	0x886
 2796 0147 01       		.byte	0x1
 2797 0148 0D       		.uleb128 0xd
 2798 0149 27030000 		.4byte	.LASF27
 2799 014d 01       		.byte	0x1
 2800 014e 020B     		.2byte	0xb02
 2801 0150 01       		.byte	0x1
 2802 0151 62010000 		.4byte	0x162
 2803 0155 0E       		.uleb128 0xe
 2804 0156 34020000 		.4byte	.LASF29
 2805 015a 01       		.byte	0x1
 2806 015b 020B     		.2byte	0xb02
 2807 015d 83000000 		.4byte	0x83
 2808 0161 00       		.byte	0
 2809 0162 0F       		.uleb128 0xf
 2810 0163 53060000 		.4byte	.LASF123
 2811 0167 01       		.byte	0x1
 2812 0168 870B     		.2byte	0xb87
 2813 016a 01       		.byte	0x1
 2814 016b 7A010000 		.4byte	0x17a
 2815 016f 10       		.uleb128 0x10
 2816 0170 6900     		.ascii	"i\000"
 2817 0172 01       		.byte	0x1
 2818 0173 890B     		.2byte	0xb89
 2819 0175 83000000 		.4byte	0x83
 2820 0179 00       		.byte	0
 2821 017a 0D       		.uleb128 0xd
 2822 017b 21060000 		.4byte	.LASF28
 2823 017f 01       		.byte	0x1
 2824 0180 8509     		.2byte	0x985
 2825 0182 01       		.byte	0x1
 2826 0183 94010000 		.4byte	0x194
 2827 0187 0E       		.uleb128 0xe
 2828 0188 4E030000 		.4byte	.LASF30
 2829 018c 01       		.byte	0x1
 2830 018d 8509     		.2byte	0x985
 2831 018f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 110


 2832 0193 00       		.byte	0
 2833 0194 0C       		.uleb128 0xc
 2834 0195 71020000 		.4byte	.LASF32
 2835 0199 01       		.byte	0x1
 2836 019a 3F0B     		.2byte	0xb3f
 2837 019c 01       		.byte	0x1
 2838 019d 0D       		.uleb128 0xd
 2839 019e F7070000 		.4byte	.LASF33
 2840 01a2 01       		.byte	0x1
 2841 01a3 C20A     		.2byte	0xac2
 2842 01a5 01       		.byte	0x1
 2843 01a6 B7010000 		.4byte	0x1b7
 2844 01aa 0E       		.uleb128 0xe
 2845 01ab 2E020000 		.4byte	.LASF34
 2846 01af 01       		.byte	0x1
 2847 01b0 C20A     		.2byte	0xac2
 2848 01b2 83000000 		.4byte	0x83
 2849 01b6 00       		.byte	0
 2850 01b7 11       		.uleb128 0x11
 2851 01b8 C9030000 		.4byte	.LASF124
 2852 01bc 01       		.byte	0x1
 2853 01bd E708     		.2byte	0x8e7
 2854 01bf C6000000 		.4byte	0xc6
 2855 01c3 01       		.byte	0x1
 2856 01c4 F9010000 		.4byte	0x1f9
 2857 01c8 0E       		.uleb128 0xe
 2858 01c9 4E030000 		.4byte	.LASF30
 2859 01cd 01       		.byte	0x1
 2860 01ce E708     		.2byte	0x8e7
 2861 01d0 6B000000 		.4byte	0x6b
 2862 01d4 0E       		.uleb128 0xe
 2863 01d5 7A040000 		.4byte	.LASF35
 2864 01d9 01       		.byte	0x1
 2865 01da E708     		.2byte	0x8e7
 2866 01dc C6000000 		.4byte	0xc6
 2867 01e0 12       		.uleb128 0x12
 2868 01e1 4B000000 		.4byte	.LASF36
 2869 01e5 01       		.byte	0x1
 2870 01e6 E908     		.2byte	0x8e9
 2871 01e8 C6000000 		.4byte	0xc6
 2872 01ec 12       		.uleb128 0x12
 2873 01ed 00000000 		.4byte	.LASF37
 2874 01f1 01       		.byte	0x1
 2875 01f2 EA08     		.2byte	0x8ea
 2876 01f4 F9010000 		.4byte	0x1f9
 2877 01f8 00       		.byte	0
 2878 01f9 06       		.uleb128 0x6
 2879 01fa 04       		.byte	0x4
 2880 01fb C6000000 		.4byte	0xc6
 2881 01ff 13       		.uleb128 0x13
 2882 0200 9B070000 		.4byte	.LASF38
 2883 0204 01       		.byte	0x1
 2884 0205 6B       		.byte	0x6b
 2885 0206 00000000 		.4byte	.LFB1
 2886 020a 14000000 		.4byte	.LFE1-.LFB1
 2887 020e 01       		.uleb128 0x1
 2888 020f 9C       		.byte	0x9c
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 111


 2889 0210 14       		.uleb128 0x14
 2890 0211 DB030000 		.4byte	.LASF39
 2891 0215 01       		.byte	0x1
 2892 0216 1D01     		.2byte	0x11d
 2893 0218 00000000 		.4byte	.LFB4
 2894 021c 14000000 		.4byte	.LFE4-.LFB4
 2895 0220 01       		.uleb128 0x1
 2896 0221 9C       		.byte	0x9c
 2897 0222 15       		.uleb128 0x15
 2898 0223 AD020000 		.4byte	.LASF40
 2899 0227 01       		.byte	0x1
 2900 0228 8B       		.byte	0x8b
 2901 0229 00000000 		.4byte	.LFB2
 2902 022d 18000000 		.4byte	.LFE2-.LFB2
 2903 0231 01       		.uleb128 0x1
 2904 0232 9C       		.byte	0x9c
 2905 0233 41020000 		.4byte	0x241
 2906 0237 16       		.uleb128 0x16
 2907 0238 06000000 		.4byte	.LVL0
 2908 023c 10020000 		.4byte	0x210
 2909 0240 00       		.byte	0
 2910 0241 17       		.uleb128 0x17
 2911 0242 32010000 		.4byte	.LASF50
 2912 0246 01       		.byte	0x1
 2913 0247 3001     		.2byte	0x130
 2914 0249 83000000 		.4byte	0x83
 2915 024d 00000000 		.4byte	.LFB5
 2916 0251 10000000 		.4byte	.LFE5-.LFB5
 2917 0255 01       		.uleb128 0x1
 2918 0256 9C       		.byte	0x9c
 2919 0257 18       		.uleb128 0x18
 2920 0258 1F000000 		.4byte	.LASF41
 2921 025c 01       		.byte	0x1
 2922 025d AD01     		.2byte	0x1ad
 2923 025f 00000000 		.4byte	.LFB6
 2924 0263 20000000 		.4byte	.LFE6-.LFB6
 2925 0267 01       		.uleb128 0x1
 2926 0268 9C       		.byte	0x9c
 2927 0269 B0020000 		.4byte	0x2b0
 2928 026d 19       		.uleb128 0x19
 2929 026e 3F060000 		.4byte	.LASF44
 2930 0272 01       		.byte	0x1
 2931 0273 AD01     		.2byte	0x1ad
 2932 0275 83000000 		.4byte	0x83
 2933 0279 00000000 		.4byte	.LLST0
 2934 027d 1A       		.uleb128 0x1a
 2935 027e 08010000 		.4byte	.LASF22
 2936 0282 01       		.byte	0x1
 2937 0283 AF01     		.2byte	0x1af
 2938 0285 6B000000 		.4byte	0x6b
 2939 0289 2C000000 		.4byte	.LLST1
 2940 028d 1A       		.uleb128 0x1a
 2941 028e F0070000 		.4byte	.LASF42
 2942 0292 01       		.byte	0x1
 2943 0293 B001     		.2byte	0x1b0
 2944 0295 83000000 		.4byte	0x83
 2945 0299 3F000000 		.4byte	.LLST2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 112


 2946 029d 16       		.uleb128 0x16
 2947 029e 08000000 		.4byte	.LVL2
 2948 02a2 CE0D0000 		.4byte	0xdce
 2949 02a6 16       		.uleb128 0x16
 2950 02a7 1A000000 		.4byte	.LVL5
 2951 02ab D90D0000 		.4byte	0xdd9
 2952 02af 00       		.byte	0
 2953 02b0 18       		.uleb128 0x18
 2954 02b1 70010000 		.4byte	.LASF43
 2955 02b5 01       		.byte	0x1
 2956 02b6 D901     		.2byte	0x1d9
 2957 02b8 00000000 		.4byte	.LFB7
 2958 02bc 34000000 		.4byte	.LFE7-.LFB7
 2959 02c0 01       		.uleb128 0x1
 2960 02c1 9C       		.byte	0x9c
 2961 02c2 D5020000 		.4byte	0x2d5
 2962 02c6 1B       		.uleb128 0x1b
 2963 02c7 9A010000 		.4byte	.LASF45
 2964 02cb 01       		.byte	0x1
 2965 02cc D901     		.2byte	0x1d9
 2966 02ce 83000000 		.4byte	0x83
 2967 02d2 01       		.uleb128 0x1
 2968 02d3 50       		.byte	0x50
 2969 02d4 00       		.byte	0
 2970 02d5 1C       		.uleb128 0x1c
 2971 02d6 D1010000 		.4byte	.LASF52
 2972 02da 01       		.byte	0x1
 2973 02db FE01     		.2byte	0x1fe
 2974 02dd 83000000 		.4byte	0x83
 2975 02e1 00000000 		.4byte	.LFB8
 2976 02e5 18000000 		.4byte	.LFE8-.LFB8
 2977 02e9 01       		.uleb128 0x1
 2978 02ea 9C       		.byte	0x9c
 2979 02eb 22030000 		.4byte	0x322
 2980 02ef 1A       		.uleb128 0x1a
 2981 02f0 08010000 		.4byte	.LASF22
 2982 02f4 01       		.byte	0x1
 2983 02f5 0002     		.2byte	0x200
 2984 02f7 6B000000 		.4byte	0x6b
 2985 02fb 5D000000 		.4byte	.LLST3
 2986 02ff 1A       		.uleb128 0x1a
 2987 0300 10050000 		.4byte	.LASF46
 2988 0304 01       		.byte	0x1
 2989 0305 0102     		.2byte	0x201
 2990 0307 83000000 		.4byte	0x83
 2991 030b 70000000 		.4byte	.LLST4
 2992 030f 16       		.uleb128 0x16
 2993 0310 06000000 		.4byte	.LVL8
 2994 0314 CE0D0000 		.4byte	0xdce
 2995 0318 16       		.uleb128 0x16
 2996 0319 0E000000 		.4byte	.LVL10
 2997 031d D90D0000 		.4byte	0xdd9
 2998 0321 00       		.byte	0
 2999 0322 18       		.uleb128 0x18
 3000 0323 A7060000 		.4byte	.LASF47
 3001 0327 01       		.byte	0x1
 3002 0328 3502     		.2byte	0x235
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 113


 3003 032a 00000000 		.4byte	.LFB9
 3004 032e 2C000000 		.4byte	.LFE9-.LFB9
 3005 0332 01       		.uleb128 0x1
 3006 0333 9C       		.byte	0x9c
 3007 0334 6B030000 		.4byte	0x36b
 3008 0338 19       		.uleb128 0x19
 3009 0339 93070000 		.4byte	.LASF48
 3010 033d 01       		.byte	0x1
 3011 033e 3502     		.2byte	0x235
 3012 0340 83000000 		.4byte	0x83
 3013 0344 92000000 		.4byte	.LLST5
 3014 0348 1A       		.uleb128 0x1a
 3015 0349 08010000 		.4byte	.LASF22
 3016 034d 01       		.byte	0x1
 3017 034e 3702     		.2byte	0x237
 3018 0350 6B000000 		.4byte	0x6b
 3019 0354 BE000000 		.4byte	.LLST6
 3020 0358 16       		.uleb128 0x16
 3021 0359 08000000 		.4byte	.LVL13
 3022 035d CE0D0000 		.4byte	0xdce
 3023 0361 16       		.uleb128 0x16
 3024 0362 22000000 		.4byte	.LVL15
 3025 0366 D90D0000 		.4byte	0xdd9
 3026 036a 00       		.byte	0
 3027 036b 14       		.uleb128 0x14
 3028 036c 35070000 		.4byte	.LASF49
 3029 0370 01       		.byte	0x1
 3030 0371 6408     		.2byte	0x864
 3031 0373 00000000 		.4byte	.LFB12
 3032 0377 20000000 		.4byte	.LFE12-.LFB12
 3033 037b 01       		.uleb128 0x1
 3034 037c 9C       		.byte	0x9c
 3035 037d 17       		.uleb128 0x17
 3036 037e 92020000 		.4byte	.LASF51
 3037 0382 01       		.byte	0x1
 3038 0383 7608     		.2byte	0x876
 3039 0385 83000000 		.4byte	0x83
 3040 0389 00000000 		.4byte	.LFB13
 3041 038d 10000000 		.4byte	.LFE13-.LFB13
 3042 0391 01       		.uleb128 0x1
 3043 0392 9C       		.byte	0x9c
 3044 0393 1D       		.uleb128 0x1d
 3045 0394 3F010000 		.4byte	0x13f
 3046 0398 00000000 		.4byte	.LFB14
 3047 039c 0C000000 		.4byte	.LFE14-.LFB14
 3048 03a0 01       		.uleb128 0x1
 3049 03a1 9C       		.byte	0x9c
 3050 03a2 1C       		.uleb128 0x1c
 3051 03a3 F9020000 		.4byte	.LASF53
 3052 03a7 01       		.byte	0x1
 3053 03a8 A008     		.2byte	0x8a0
 3054 03aa 83000000 		.4byte	0x83
 3055 03ae 00000000 		.4byte	.LFB15
 3056 03b2 14000000 		.4byte	.LFE15-.LFB15
 3057 03b6 01       		.uleb128 0x1
 3058 03b7 9C       		.byte	0x9c
 3059 03b8 DD030000 		.4byte	0x3dd
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 114


 3060 03bc 19       		.uleb128 0x19
 3061 03bd 10060000 		.4byte	.LASF54
 3062 03c1 01       		.byte	0x1
 3063 03c2 A008     		.2byte	0x8a0
 3064 03c4 83000000 		.4byte	0x83
 3065 03c8 D1000000 		.4byte	.LLST7
 3066 03cc 1A       		.uleb128 0x1a
 3067 03cd 0A040000 		.4byte	.LASF55
 3068 03d1 01       		.byte	0x1
 3069 03d2 A208     		.2byte	0x8a2
 3070 03d4 83000000 		.4byte	0x83
 3071 03d8 EF000000 		.4byte	.LLST8
 3072 03dc 00       		.byte	0
 3073 03dd 1C       		.uleb128 0x1c
 3074 03de 59000000 		.4byte	.LASF56
 3075 03e2 01       		.byte	0x1
 3076 03e3 B708     		.2byte	0x8b7
 3077 03e5 83000000 		.4byte	0x83
 3078 03e9 00000000 		.4byte	.LFB16
 3079 03ed 10000000 		.4byte	.LFE16-.LFB16
 3080 03f1 01       		.uleb128 0x1
 3081 03f2 9C       		.byte	0x9c
 3082 03f3 06040000 		.4byte	0x406
 3083 03f7 1E       		.uleb128 0x1e
 3084 03f8 16000000 		.4byte	.LASF57
 3085 03fc 01       		.byte	0x1
 3086 03fd B908     		.2byte	0x8b9
 3087 03ff 83000000 		.4byte	0x83
 3088 0403 01       		.uleb128 0x1
 3089 0404 50       		.byte	0x50
 3090 0405 00       		.byte	0
 3091 0406 18       		.uleb128 0x18
 3092 0407 89000000 		.4byte	.LASF58
 3093 040b 01       		.byte	0x1
 3094 040c CE08     		.2byte	0x8ce
 3095 040e 00000000 		.4byte	.LFB17
 3096 0412 0C000000 		.4byte	.LFE17-.LFB17
 3097 0416 01       		.uleb128 0x1
 3098 0417 9C       		.byte	0x9c
 3099 0418 2B040000 		.4byte	0x42b
 3100 041c 1B       		.uleb128 0x1b
 3101 041d CC010000 		.4byte	.LASF59
 3102 0421 01       		.byte	0x1
 3103 0422 CE08     		.2byte	0x8ce
 3104 0424 83000000 		.4byte	0x83
 3105 0428 01       		.uleb128 0x1
 3106 0429 50       		.byte	0x50
 3107 042a 00       		.byte	0
 3108 042b 1F       		.uleb128 0x1f
 3109 042c B7010000 		.4byte	0x1b7
 3110 0430 00000000 		.4byte	.LFB18
 3111 0434 0E000000 		.4byte	.LFE18-.LFB18
 3112 0438 01       		.uleb128 0x1
 3113 0439 9C       		.byte	0x9c
 3114 043a 5F040000 		.4byte	0x45f
 3115 043e 20       		.uleb128 0x20
 3116 043f C8010000 		.4byte	0x1c8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 115


 3117 0443 11010000 		.4byte	.LLST9
 3118 0447 21       		.uleb128 0x21
 3119 0448 D4010000 		.4byte	0x1d4
 3120 044c 01       		.uleb128 0x1
 3121 044d 51       		.byte	0x51
 3122 044e 22       		.uleb128 0x22
 3123 044f E0010000 		.4byte	0x1e0
 3124 0453 01       		.uleb128 0x1
 3125 0454 50       		.byte	0x50
 3126 0455 23       		.uleb128 0x23
 3127 0456 EC010000 		.4byte	0x1ec
 3128 045a 00000020 		.4byte	0x20000000
 3129 045e 00       		.byte	0
 3130 045f 1C       		.uleb128 0x1c
 3131 0460 2D060000 		.4byte	.LASF60
 3132 0464 01       		.byte	0x1
 3133 0465 0909     		.2byte	0x909
 3134 0467 C6000000 		.4byte	0xc6
 3135 046b 00000000 		.4byte	.LFB19
 3136 046f 0C000000 		.4byte	.LFE19-.LFB19
 3137 0473 01       		.uleb128 0x1
 3138 0474 9C       		.byte	0x9c
 3139 0475 9A040000 		.4byte	0x49a
 3140 0479 19       		.uleb128 0x19
 3141 047a 4E030000 		.4byte	.LASF30
 3142 047e 01       		.byte	0x1
 3143 047f 0909     		.2byte	0x909
 3144 0481 6B000000 		.4byte	0x6b
 3145 0485 32010000 		.4byte	.LLST10
 3146 0489 24       		.uleb128 0x24
 3147 048a 00000000 		.4byte	.LASF37
 3148 048e 01       		.byte	0x1
 3149 048f 0B09     		.2byte	0x90b
 3150 0491 F9010000 		.4byte	0x1f9
 3151 0495 00000020 		.4byte	0x20000000
 3152 0499 00       		.byte	0
 3153 049a 1C       		.uleb128 0x1c
 3154 049b 3F030000 		.4byte	.LASF61
 3155 049f 01       		.byte	0x1
 3156 04a0 1F09     		.2byte	0x91f
 3157 04a2 C6000000 		.4byte	0xc6
 3158 04a6 00000000 		.4byte	.LFB20
 3159 04aa 10000000 		.4byte	.LFE20-.LFB20
 3160 04ae 01       		.uleb128 0x1
 3161 04af 9C       		.byte	0x9c
 3162 04b0 F1040000 		.4byte	0x4f1
 3163 04b4 19       		.uleb128 0x19
 3164 04b5 4E030000 		.4byte	.LASF30
 3165 04b9 01       		.byte	0x1
 3166 04ba 1F09     		.2byte	0x91f
 3167 04bc 6B000000 		.4byte	0x6b
 3168 04c0 53010000 		.4byte	.LLST11
 3169 04c4 1B       		.uleb128 0x1b
 3170 04c5 7A040000 		.4byte	.LASF35
 3171 04c9 01       		.byte	0x1
 3172 04ca 1F09     		.2byte	0x91f
 3173 04cc C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 116


 3174 04d0 01       		.uleb128 0x1
 3175 04d1 51       		.byte	0x51
 3176 04d2 1E       		.uleb128 0x1e
 3177 04d3 4B000000 		.4byte	.LASF36
 3178 04d7 01       		.byte	0x1
 3179 04d8 2109     		.2byte	0x921
 3180 04da C6000000 		.4byte	0xc6
 3181 04de 01       		.uleb128 0x1
 3182 04df 50       		.byte	0x50
 3183 04e0 24       		.uleb128 0x24
 3184 04e1 00000000 		.4byte	.LASF37
 3185 04e5 01       		.byte	0x1
 3186 04e6 2209     		.2byte	0x922
 3187 04e8 F9010000 		.4byte	0x1f9
 3188 04ec 00000020 		.4byte	0x20000000
 3189 04f0 00       		.byte	0
 3190 04f1 1C       		.uleb128 0x1c
 3191 04f2 A5050000 		.4byte	.LASF62
 3192 04f6 01       		.byte	0x1
 3193 04f7 3B09     		.2byte	0x93b
 3194 04f9 C6000000 		.4byte	0xc6
 3195 04fd 00000000 		.4byte	.LFB21
 3196 0501 10000000 		.4byte	.LFE21-.LFB21
 3197 0505 01       		.uleb128 0x1
 3198 0506 9C       		.byte	0x9c
 3199 0507 2C050000 		.4byte	0x52c
 3200 050b 19       		.uleb128 0x19
 3201 050c 4E030000 		.4byte	.LASF30
 3202 0510 01       		.byte	0x1
 3203 0511 3B09     		.2byte	0x93b
 3204 0513 6B000000 		.4byte	0x6b
 3205 0517 74010000 		.4byte	.LLST12
 3206 051b 24       		.uleb128 0x24
 3207 051c 00000000 		.4byte	.LASF37
 3208 0520 01       		.byte	0x1
 3209 0521 3D09     		.2byte	0x93d
 3210 0523 F9010000 		.4byte	0x1f9
 3211 0527 00000020 		.4byte	0x20000000
 3212 052b 00       		.byte	0
 3213 052c 18       		.uleb128 0x18
 3214 052d 57050000 		.4byte	.LASF63
 3215 0531 01       		.byte	0x1
 3216 0532 4E09     		.2byte	0x94e
 3217 0534 00000000 		.4byte	.LFB22
 3218 0538 34000000 		.4byte	.LFE22-.LFB22
 3219 053c 01       		.uleb128 0x1
 3220 053d 9C       		.byte	0x9c
 3221 053e A5050000 		.4byte	0x5a5
 3222 0542 19       		.uleb128 0x19
 3223 0543 4E030000 		.4byte	.LASF30
 3224 0547 01       		.byte	0x1
 3225 0548 4E09     		.2byte	0x94e
 3226 054a 6B000000 		.4byte	0x6b
 3227 054e 95010000 		.4byte	.LLST13
 3228 0552 19       		.uleb128 0x19
 3229 0553 55030000 		.4byte	.LASF64
 3230 0557 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 117


 3231 0558 4E09     		.2byte	0x94e
 3232 055a 6B000000 		.4byte	0x6b
 3233 055e B6010000 		.4byte	.LLST14
 3234 0562 1A       		.uleb128 0x1a
 3235 0563 08010000 		.4byte	.LASF22
 3236 0567 01       		.byte	0x1
 3237 0568 5009     		.2byte	0x950
 3238 056a 6B000000 		.4byte	0x6b
 3239 056e D7010000 		.4byte	.LLST15
 3240 0572 1A       		.uleb128 0x1a
 3241 0573 A8010000 		.4byte	.LASF65
 3242 0577 01       		.byte	0x1
 3243 0578 5109     		.2byte	0x951
 3244 057a 83000000 		.4byte	0x83
 3245 057e EA010000 		.4byte	.LLST16
 3246 0582 1A       		.uleb128 0x1a
 3247 0583 2E020000 		.4byte	.LASF34
 3248 0587 01       		.byte	0x1
 3249 0588 5209     		.2byte	0x952
 3250 058a 83000000 		.4byte	0x83
 3251 058e FD010000 		.4byte	.LLST17
 3252 0592 16       		.uleb128 0x16
 3253 0593 18000000 		.4byte	.LVL34
 3254 0597 CE0D0000 		.4byte	0xdce
 3255 059b 16       		.uleb128 0x16
 3256 059c 2C000000 		.4byte	.LVL38
 3257 05a0 D90D0000 		.4byte	0xdd9
 3258 05a4 00       		.byte	0
 3259 05a5 1C       		.uleb128 0x1c
 3260 05a6 02020000 		.4byte	.LASF66
 3261 05aa 01       		.byte	0x1
 3262 05ab 7009     		.2byte	0x970
 3263 05ad 6B000000 		.4byte	0x6b
 3264 05b1 00000000 		.4byte	.LFB23
 3265 05b5 20000000 		.4byte	.LFE23-.LFB23
 3266 05b9 01       		.uleb128 0x1
 3267 05ba 9C       		.byte	0x9c
 3268 05bb E0050000 		.4byte	0x5e0
 3269 05bf 19       		.uleb128 0x19
 3270 05c0 4E030000 		.4byte	.LASF30
 3271 05c4 01       		.byte	0x1
 3272 05c5 7009     		.2byte	0x970
 3273 05c7 6B000000 		.4byte	0x6b
 3274 05cb 1B020000 		.4byte	.LLST18
 3275 05cf 1A       		.uleb128 0x1a
 3276 05d0 55030000 		.4byte	.LASF64
 3277 05d4 01       		.byte	0x1
 3278 05d5 7209     		.2byte	0x972
 3279 05d7 6B000000 		.4byte	0x6b
 3280 05db 3C020000 		.4byte	.LLST19
 3281 05df 00       		.byte	0
 3282 05e0 1F       		.uleb128 0x1f
 3283 05e1 7A010000 		.4byte	0x17a
 3284 05e5 00000000 		.4byte	.LFB24
 3285 05e9 14000000 		.4byte	.LFE24-.LFB24
 3286 05ed 01       		.uleb128 0x1
 3287 05ee 9C       		.byte	0x9c
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 118


 3288 05ef FD050000 		.4byte	0x5fd
 3289 05f3 20       		.uleb128 0x20
 3290 05f4 87010000 		.4byte	0x187
 3291 05f8 5D020000 		.4byte	.LLST20
 3292 05fc 00       		.byte	0
 3293 05fd 1C       		.uleb128 0x1c
 3294 05fe CF000000 		.4byte	.LASF67
 3295 0602 01       		.byte	0x1
 3296 0603 9709     		.2byte	0x997
 3297 0605 6B000000 		.4byte	0x6b
 3298 0609 00000000 		.4byte	.LFB25
 3299 060d 18000000 		.4byte	.LFE25-.LFB25
 3300 0611 01       		.uleb128 0x1
 3301 0612 9C       		.byte	0x9c
 3302 0613 28060000 		.4byte	0x628
 3303 0617 19       		.uleb128 0x19
 3304 0618 4E030000 		.4byte	.LASF30
 3305 061c 01       		.byte	0x1
 3306 061d 9709     		.2byte	0x997
 3307 061f 6B000000 		.4byte	0x6b
 3308 0623 7E020000 		.4byte	.LLST21
 3309 0627 00       		.byte	0
 3310 0628 18       		.uleb128 0x18
 3311 0629 59010000 		.4byte	.LASF68
 3312 062d 01       		.byte	0x1
 3313 062e A709     		.2byte	0x9a7
 3314 0630 00000000 		.4byte	.LFB26
 3315 0634 14000000 		.4byte	.LFE26-.LFB26
 3316 0638 01       		.uleb128 0x1
 3317 0639 9C       		.byte	0x9c
 3318 063a 4F060000 		.4byte	0x64f
 3319 063e 19       		.uleb128 0x19
 3320 063f 4E030000 		.4byte	.LASF30
 3321 0643 01       		.byte	0x1
 3322 0644 A709     		.2byte	0x9a7
 3323 0646 6B000000 		.4byte	0x6b
 3324 064a 9F020000 		.4byte	.LLST22
 3325 064e 00       		.byte	0
 3326 064f 18       		.uleb128 0x18
 3327 0650 D4020000 		.4byte	.LASF69
 3328 0654 01       		.byte	0x1
 3329 0655 B509     		.2byte	0x9b5
 3330 0657 00000000 		.4byte	.LFB27
 3331 065b 14000000 		.4byte	.LFE27-.LFB27
 3332 065f 01       		.uleb128 0x1
 3333 0660 9C       		.byte	0x9c
 3334 0661 76060000 		.4byte	0x676
 3335 0665 19       		.uleb128 0x19
 3336 0666 4E030000 		.4byte	.LASF30
 3337 066a 01       		.byte	0x1
 3338 066b B509     		.2byte	0x9b5
 3339 066d 6B000000 		.4byte	0x6b
 3340 0671 C0020000 		.4byte	.LLST23
 3341 0675 00       		.byte	0
 3342 0676 18       		.uleb128 0x18
 3343 0677 5C040000 		.4byte	.LASF70
 3344 067b 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 119


 3345 067c C409     		.2byte	0x9c4
 3346 067e 00000000 		.4byte	.LFB28
 3347 0682 14000000 		.4byte	.LFE28-.LFB28
 3348 0686 01       		.uleb128 0x1
 3349 0687 9C       		.byte	0x9c
 3350 0688 9D060000 		.4byte	0x69d
 3351 068c 19       		.uleb128 0x19
 3352 068d 4E030000 		.4byte	.LASF30
 3353 0691 01       		.byte	0x1
 3354 0692 C409     		.2byte	0x9c4
 3355 0694 6B000000 		.4byte	0x6b
 3356 0698 E1020000 		.4byte	.LLST24
 3357 069c 00       		.byte	0
 3358 069d 18       		.uleb128 0x18
 3359 069e DE050000 		.4byte	.LASF71
 3360 06a2 01       		.byte	0x1
 3361 06a3 D309     		.2byte	0x9d3
 3362 06a5 00000000 		.4byte	.LFB29
 3363 06a9 04000000 		.4byte	.LFE29-.LFB29
 3364 06ad 01       		.uleb128 0x1
 3365 06ae 9C       		.byte	0x9c
 3366 06af C2060000 		.4byte	0x6c2
 3367 06b3 1B       		.uleb128 0x1b
 3368 06b4 10060000 		.4byte	.LASF54
 3369 06b8 01       		.byte	0x1
 3370 06b9 D309     		.2byte	0x9d3
 3371 06bb 6B000000 		.4byte	0x6b
 3372 06bf 01       		.uleb128 0x1
 3373 06c0 50       		.byte	0x50
 3374 06c1 00       		.byte	0
 3375 06c2 14       		.uleb128 0x14
 3376 06c3 A6000000 		.4byte	.LASF72
 3377 06c7 01       		.byte	0x1
 3378 06c8 EB09     		.2byte	0x9eb
 3379 06ca 00000000 		.4byte	.LFB30
 3380 06ce 18000000 		.4byte	.LFE30-.LFB30
 3381 06d2 01       		.uleb128 0x1
 3382 06d3 9C       		.byte	0x9c
 3383 06d4 18       		.uleb128 0x18
 3384 06d5 FB060000 		.4byte	.LASF73
 3385 06d9 01       		.byte	0x1
 3386 06da FF09     		.2byte	0x9ff
 3387 06dc 00000000 		.4byte	.LFB31
 3388 06e0 2C000000 		.4byte	.LFE31-.LFB31
 3389 06e4 01       		.uleb128 0x1
 3390 06e5 9C       		.byte	0x9c
 3391 06e6 0D070000 		.4byte	0x70d
 3392 06ea 19       		.uleb128 0x19
 3393 06eb B4050000 		.4byte	.LASF74
 3394 06ef 01       		.byte	0x1
 3395 06f0 FF09     		.2byte	0x9ff
 3396 06f2 83000000 		.4byte	0x83
 3397 06f6 02030000 		.4byte	.LLST25
 3398 06fa 16       		.uleb128 0x16
 3399 06fb 14000000 		.4byte	.LVL58
 3400 06ff E40D0000 		.4byte	0xde4
 3401 0703 16       		.uleb128 0x16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 120


 3402 0704 22000000 		.4byte	.LVL60
 3403 0708 E40D0000 		.4byte	0xde4
 3404 070c 00       		.byte	0
 3405 070d 1F       		.uleb128 0x1f
 3406 070e F2000000 		.4byte	0xf2
 3407 0712 00000000 		.4byte	.LFB3
 3408 0716 D4000000 		.4byte	.LFE3-.LFB3
 3409 071a 01       		.uleb128 0x1
 3410 071b 9C       		.byte	0x9c
 3411 071c CC070000 		.4byte	0x7cc
 3412 0720 25       		.uleb128 0x25
 3413 0721 FE000000 		.4byte	0xfe
 3414 0725 25       		.uleb128 0x25
 3415 0726 07010000 		.4byte	0x107
 3416 072a 25       		.uleb128 0x25
 3417 072b 12010000 		.4byte	0x112
 3418 072f 25       		.uleb128 0x25
 3419 0730 1D010000 		.4byte	0x11d
 3420 0734 26       		.uleb128 0x26
 3421 0735 28010000 		.4byte	0x128
 3422 0739 00       		.byte	0
 3423 073a 25       		.uleb128 0x25
 3424 073b 33010000 		.4byte	0x133
 3425 073f 27       		.uleb128 0x27
 3426 0740 0A000000 		.4byte	.LBB17
 3427 0744 A0000000 		.4byte	.LBE17-.LBB17
 3428 0748 C2070000 		.4byte	0x7c2
 3429 074c 28       		.uleb128 0x28
 3430 074d FE000000 		.4byte	0xfe
 3431 0751 20030000 		.4byte	.LLST26
 3432 0755 28       		.uleb128 0x28
 3433 0756 07010000 		.4byte	0x107
 3434 075a 57030000 		.4byte	.LLST27
 3435 075e 28       		.uleb128 0x28
 3436 075f 12010000 		.4byte	0x112
 3437 0763 9E030000 		.4byte	.LLST28
 3438 0767 28       		.uleb128 0x28
 3439 0768 1D010000 		.4byte	0x11d
 3440 076c B1030000 		.4byte	.LLST29
 3441 0770 28       		.uleb128 0x28
 3442 0771 28010000 		.4byte	0x128
 3443 0775 EC030000 		.4byte	.LLST30
 3444 0779 22       		.uleb128 0x22
 3445 077a 33010000 		.4byte	0x133
 3446 077e 02       		.uleb128 0x2
 3447 077f 91       		.byte	0x91
 3448 0780 64       		.sleb128 -28
 3449 0781 16       		.uleb128 0x16
 3450 0782 0E000000 		.4byte	.LVL64
 3451 0786 CE0D0000 		.4byte	0xdce
 3452 078a 29       		.uleb128 0x29
 3453 078b 8E000000 		.4byte	.LVL80
 3454 078f EF0D0000 		.4byte	0xdef
 3455 0793 9E070000 		.4byte	0x79e
 3456 0797 2A       		.uleb128 0x2a
 3457 0798 01       		.uleb128 0x1
 3458 0799 50       		.byte	0x50
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 121


 3459 079a 02       		.uleb128 0x2
 3460 079b 08       		.byte	0x8
 3461 079c 30       		.byte	0x30
 3462 079d 00       		.byte	0
 3463 079e 29       		.uleb128 0x29
 3464 079f A0000000 		.4byte	.LVL81
 3465 07a3 D4060000 		.4byte	0x6d4
 3466 07a7 B1070000 		.4byte	0x7b1
 3467 07ab 2A       		.uleb128 0x2a
 3468 07ac 01       		.uleb128 0x1
 3469 07ad 50       		.byte	0x50
 3470 07ae 01       		.uleb128 0x1
 3471 07af 44       		.byte	0x44
 3472 07b0 00       		.byte	0
 3473 07b1 2B       		.uleb128 0x2b
 3474 07b2 AA000000 		.4byte	.LVL82
 3475 07b6 D90D0000 		.4byte	0xdd9
 3476 07ba 2A       		.uleb128 0x2a
 3477 07bb 01       		.uleb128 0x1
 3478 07bc 50       		.byte	0x50
 3479 07bd 02       		.uleb128 0x2
 3480 07be 74       		.byte	0x74
 3481 07bf 00       		.sleb128 0
 3482 07c0 00       		.byte	0
 3483 07c1 00       		.byte	0
 3484 07c2 16       		.uleb128 0x16
 3485 07c3 06000000 		.4byte	.LVL63
 3486 07c7 FA0D0000 		.4byte	0xdfa
 3487 07cb 00       		.byte	0
 3488 07cc 18       		.uleb128 0x18
 3489 07cd 5E030000 		.4byte	.LASF75
 3490 07d1 01       		.byte	0x1
 3491 07d2 6F02     		.2byte	0x26f
 3492 07d4 00000000 		.4byte	.LFB10
 3493 07d8 80000000 		.4byte	.LFE10-.LFB10
 3494 07dc 01       		.uleb128 0x1
 3495 07dd 9C       		.byte	0x9c
 3496 07de 65080000 		.4byte	0x865
 3497 07e2 19       		.uleb128 0x19
 3498 07e3 F7000000 		.4byte	.LASF21
 3499 07e7 01       		.byte	0x1
 3500 07e8 6F02     		.2byte	0x26f
 3501 07ea 83000000 		.4byte	0x83
 3502 07ee 17040000 		.4byte	.LLST31
 3503 07f2 1E       		.uleb128 0x1e
 3504 07f3 7E000000 		.4byte	.LASF76
 3505 07f7 01       		.byte	0x1
 3506 07f8 7202     		.2byte	0x272
 3507 07fa 75080000 		.4byte	0x875
 3508 07fe 02       		.uleb128 0x2
 3509 07ff 91       		.byte	0x91
 3510 0800 58       		.sleb128 -40
 3511 0801 1E       		.uleb128 0x1e
 3512 0802 66010000 		.4byte	.LASF77
 3513 0806 01       		.byte	0x1
 3514 0807 7302     		.2byte	0x273
 3515 0809 8A080000 		.4byte	0x88a
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 122


 3516 080d 02       		.uleb128 0x2
 3517 080e 91       		.byte	0x91
 3518 080f 60       		.sleb128 -32
 3519 0810 1A       		.uleb128 0x1a
 3520 0811 48010000 		.4byte	.LASF78
 3521 0815 01       		.byte	0x1
 3522 0816 7D02     		.2byte	0x27d
 3523 0818 83000000 		.4byte	0x83
 3524 081c 43040000 		.4byte	.LLST32
 3525 0820 1A       		.uleb128 0x1a
 3526 0821 08010000 		.4byte	.LASF22
 3527 0825 01       		.byte	0x1
 3528 0826 8402     		.2byte	0x284
 3529 0828 6B000000 		.4byte	0x6b
 3530 082c 6E040000 		.4byte	.LLST33
 3531 0830 16       		.uleb128 0x16
 3532 0831 0A000000 		.4byte	.LVL84
 3533 0835 CE0D0000 		.4byte	0xdce
 3534 0839 16       		.uleb128 0x16
 3535 083a 10000000 		.4byte	.LVL86
 3536 083e 41020000 		.4byte	0x241
 3537 0842 16       		.uleb128 0x16
 3538 0843 1A000000 		.4byte	.LVL88
 3539 0847 10020000 		.4byte	0x210
 3540 084b 16       		.uleb128 0x16
 3541 084c 56000000 		.4byte	.LVL91
 3542 0850 F2000000 		.4byte	0xf2
 3543 0854 2B       		.uleb128 0x2b
 3544 0855 5C000000 		.4byte	.LVL92
 3545 0859 D90D0000 		.4byte	0xdd9
 3546 085d 2A       		.uleb128 0x2a
 3547 085e 01       		.uleb128 0x1
 3548 085f 50       		.byte	0x50
 3549 0860 02       		.uleb128 0x2
 3550 0861 75       		.byte	0x75
 3551 0862 00       		.sleb128 0
 3552 0863 00       		.byte	0
 3553 0864 00       		.byte	0
 3554 0865 2C       		.uleb128 0x2c
 3555 0866 C1000000 		.4byte	0xc1
 3556 086a 75080000 		.4byte	0x875
 3557 086e 2D       		.uleb128 0x2d
 3558 086f E0000000 		.4byte	0xe0
 3559 0873 01       		.byte	0x1
 3560 0874 00       		.byte	0
 3561 0875 05       		.uleb128 0x5
 3562 0876 65080000 		.4byte	0x865
 3563 087a 2C       		.uleb128 0x2c
 3564 087b C1000000 		.4byte	0xc1
 3565 087f 8A080000 		.4byte	0x88a
 3566 0883 2D       		.uleb128 0x2d
 3567 0884 E0000000 		.4byte	0xe0
 3568 0888 03       		.byte	0x3
 3569 0889 00       		.byte	0
 3570 088a 05       		.uleb128 0x5
 3571 088b 7A080000 		.4byte	0x87a
 3572 088f 18       		.uleb128 0x18
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 123


 3573 0890 49060000 		.4byte	.LASF79
 3574 0894 01       		.byte	0x1
 3575 0895 160A     		.2byte	0xa16
 3576 0897 00000000 		.4byte	.LFB32
 3577 089b 14000000 		.4byte	.LFE32-.LFB32
 3578 089f 01       		.uleb128 0x1
 3579 08a0 9C       		.byte	0x9c
 3580 08a1 BF080000 		.4byte	0x8bf
 3581 08a5 19       		.uleb128 0x19
 3582 08a6 E3070000 		.4byte	.LASF80
 3583 08aa 01       		.byte	0x1
 3584 08ab 160A     		.2byte	0xa16
 3585 08ad 77000000 		.4byte	0x77
 3586 08b1 81040000 		.4byte	.LLST34
 3587 08b5 16       		.uleb128 0x16
 3588 08b6 0C000000 		.4byte	.LVL96
 3589 08ba E40D0000 		.4byte	0xde4
 3590 08be 00       		.byte	0
 3591 08bf 18       		.uleb128 0x18
 3592 08c0 84050000 		.4byte	.LASF81
 3593 08c4 01       		.byte	0x1
 3594 08c5 4608     		.2byte	0x846
 3595 08c7 00000000 		.4byte	.LFB11
 3596 08cb 44000000 		.4byte	.LFE11-.LFB11
 3597 08cf 01       		.uleb128 0x1
 3598 08d0 9C       		.byte	0x9c
 3599 08d1 07090000 		.4byte	0x907
 3600 08d5 19       		.uleb128 0x19
 3601 08d6 D4050000 		.4byte	.LASF82
 3602 08da 01       		.byte	0x1
 3603 08db 4608     		.2byte	0x846
 3604 08dd 83000000 		.4byte	0x83
 3605 08e1 A2040000 		.4byte	.LLST35
 3606 08e5 2E       		.uleb128 0x2e
 3607 08e6 3F010000 		.4byte	0x13f
 3608 08ea 2C000000 		.4byte	.LBB18
 3609 08ee 00000000 		.4byte	.Ldebug_ranges0+0
 3610 08f2 01       		.byte	0x1
 3611 08f3 5608     		.2byte	0x856
 3612 08f5 2B       		.uleb128 0x2b
 3613 08f6 2C000000 		.4byte	.LVL99
 3614 08fa 8F080000 		.4byte	0x88f
 3615 08fe 2A       		.uleb128 0x2a
 3616 08ff 01       		.uleb128 0x1
 3617 0900 50       		.byte	0x50
 3618 0901 03       		.uleb128 0x3
 3619 0902 0A       		.byte	0xa
 3620 0903 E803     		.2byte	0x3e8
 3621 0905 00       		.byte	0
 3622 0906 00       		.byte	0
 3623 0907 2F       		.uleb128 0x2f
 3624 0908 FC000000 		.4byte	.LASF83
 3625 090c 01       		.byte	0x1
 3626 090d 240A     		.2byte	0xa24
 3627 090f 00000000 		.4byte	.LFB33
 3628 0913 48000000 		.4byte	.LFE33-.LFB33
 3629 0917 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 124


 3630 0918 9C       		.byte	0x9c
 3631 0919 2E090000 		.4byte	0x92e
 3632 091d 19       		.uleb128 0x19
 3633 091e F7000000 		.4byte	.LASF21
 3634 0922 01       		.byte	0x1
 3635 0923 240A     		.2byte	0xa24
 3636 0925 83000000 		.4byte	0x83
 3637 0929 C3040000 		.4byte	.LLST36
 3638 092d 00       		.byte	0
 3639 092e 2F       		.uleb128 0x2f
 3640 092f 20020000 		.4byte	.LASF84
 3641 0933 01       		.byte	0x1
 3642 0934 610A     		.2byte	0xa61
 3643 0936 00000000 		.4byte	.LFB35
 3644 093a 60000000 		.4byte	.LFE35-.LFB35
 3645 093e 01       		.uleb128 0x1
 3646 093f 9C       		.byte	0x9c
 3647 0940 0B0A0000 		.4byte	0xa0b
 3648 0944 30       		.uleb128 0x30
 3649 0945 6900     		.ascii	"i\000"
 3650 0947 01       		.byte	0x1
 3651 0948 630A     		.2byte	0xa63
 3652 094a 83000000 		.4byte	0x83
 3653 094e E4040000 		.4byte	.LLST37
 3654 0952 31       		.uleb128 0x31
 3655 0953 48010000 		.4byte	0x148
 3656 0957 04000000 		.4byte	.LBB34
 3657 095b 18000000 		.4byte	.Ldebug_ranges0+0x18
 3658 095f 01       		.byte	0x1
 3659 0960 6D0A     		.2byte	0xa6d
 3660 0962 7F090000 		.4byte	0x97f
 3661 0966 20       		.uleb128 0x20
 3662 0967 55010000 		.4byte	0x155
 3663 096b 28050000 		.4byte	.LLST38
 3664 096f 32       		.uleb128 0x32
 3665 0970 18000000 		.4byte	.Ldebug_ranges0+0x18
 3666 0974 20       		.uleb128 0x20
 3667 0975 55010000 		.4byte	0x155
 3668 0979 28050000 		.4byte	.LLST38
 3669 097d 00       		.byte	0
 3670 097e 00       		.byte	0
 3671 097f 31       		.uleb128 0x31
 3672 0980 B7010000 		.4byte	0x1b7
 3673 0984 08000000 		.4byte	.LBB41
 3674 0988 38000000 		.4byte	.Ldebug_ranges0+0x38
 3675 098c 01       		.byte	0x1
 3676 098d 6A0A     		.2byte	0xa6a
 3677 098f BE090000 		.4byte	0x9be
 3678 0993 20       		.uleb128 0x20
 3679 0994 D4010000 		.4byte	0x1d4
 3680 0998 3C050000 		.4byte	.LLST40
 3681 099c 20       		.uleb128 0x20
 3682 099d C8010000 		.4byte	0x1c8
 3683 09a1 54050000 		.4byte	.LLST41
 3684 09a5 32       		.uleb128 0x32
 3685 09a6 38000000 		.4byte	.Ldebug_ranges0+0x38
 3686 09aa 28       		.uleb128 0x28
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 125


 3687 09ab E0010000 		.4byte	0x1e0
 3688 09af 68050000 		.4byte	.LLST42
 3689 09b3 23       		.uleb128 0x23
 3690 09b4 EC010000 		.4byte	0x1ec
 3691 09b8 00000020 		.4byte	0x20000000
 3692 09bc 00       		.byte	0
 3693 09bd 00       		.byte	0
 3694 09be 31       		.uleb128 0x31
 3695 09bf 7A010000 		.4byte	0x17a
 3696 09c3 2C000000 		.4byte	.LBB49
 3697 09c7 58000000 		.4byte	.Ldebug_ranges0+0x58
 3698 09cb 01       		.byte	0x1
 3699 09cc 720A     		.2byte	0xa72
 3700 09ce DC090000 		.4byte	0x9dc
 3701 09d2 20       		.uleb128 0x20
 3702 09d3 87010000 		.4byte	0x187
 3703 09d7 8B050000 		.4byte	.LLST43
 3704 09db 00       		.byte	0
 3705 09dc 31       		.uleb128 0x31
 3706 09dd 9D010000 		.4byte	0x19d
 3707 09e1 2E000000 		.4byte	.LBB53
 3708 09e5 78000000 		.4byte	.Ldebug_ranges0+0x78
 3709 09e9 01       		.byte	0x1
 3710 09ea 700A     		.2byte	0xa70
 3711 09ec FA090000 		.4byte	0x9fa
 3712 09f0 20       		.uleb128 0x20
 3713 09f1 AA010000 		.4byte	0x1aa
 3714 09f5 9F050000 		.4byte	.LLST44
 3715 09f9 00       		.byte	0
 3716 09fa 33       		.uleb128 0x33
 3717 09fb 94010000 		.4byte	0x194
 3718 09ff 34000000 		.4byte	.LBB58
 3719 0a03 04000000 		.4byte	.LBE58-.LBB58
 3720 0a07 01       		.byte	0x1
 3721 0a08 710A     		.2byte	0xa71
 3722 0a0a 00       		.byte	0
 3723 0a0b 14       		.uleb128 0x14
 3724 0a0c 85070000 		.4byte	.LASF85
 3725 0a10 01       		.byte	0x1
 3726 0a11 910A     		.2byte	0xa91
 3727 0a13 00000000 		.4byte	.LFB37
 3728 0a17 10000000 		.4byte	.LFE37-.LFB37
 3729 0a1b 01       		.uleb128 0x1
 3730 0a1c 9C       		.byte	0x9c
 3731 0a1d 14       		.uleb128 0x14
 3732 0a1e B6000000 		.4byte	.LASF86
 3733 0a22 01       		.byte	0x1
 3734 0a23 A10A     		.2byte	0xaa1
 3735 0a25 00000000 		.4byte	.LFB38
 3736 0a29 10000000 		.4byte	.LFE38-.LFB38
 3737 0a2d 01       		.uleb128 0x1
 3738 0a2e 9C       		.byte	0x9c
 3739 0a2f 18       		.uleb128 0x18
 3740 0a30 97060000 		.4byte	.LASF87
 3741 0a34 01       		.byte	0x1
 3742 0a35 800A     		.2byte	0xa80
 3743 0a37 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 126


 3744 0a3b 18000000 		.4byte	.LFE36-.LFB36
 3745 0a3f 01       		.uleb128 0x1
 3746 0a40 9C       		.byte	0x9c
 3747 0a41 4F0A0000 		.4byte	0xa4f
 3748 0a45 16       		.uleb128 0x16
 3749 0a46 06000000 		.4byte	.LVL116
 3750 0a4a 1D0A0000 		.4byte	0xa1d
 3751 0a4e 00       		.byte	0
 3752 0a4f 18       		.uleb128 0x18
 3753 0a50 FB030000 		.4byte	.LASF88
 3754 0a54 01       		.byte	0x1
 3755 0a55 440A     		.2byte	0xa44
 3756 0a57 00000000 		.4byte	.LFB34
 3757 0a5b 1C000000 		.4byte	.LFE34-.LFB34
 3758 0a5f 01       		.uleb128 0x1
 3759 0a60 9C       		.byte	0x9c
 3760 0a61 780A0000 		.4byte	0xa78
 3761 0a65 16       		.uleb128 0x16
 3762 0a66 0E000000 		.4byte	.LVL117
 3763 0a6a 2E090000 		.4byte	0x92e
 3764 0a6e 16       		.uleb128 0x16
 3765 0a6f 16000000 		.4byte	.LVL118
 3766 0a73 2F0A0000 		.4byte	0xa2f
 3767 0a77 00       		.byte	0
 3768 0a78 14       		.uleb128 0x14
 3769 0a79 1B070000 		.4byte	.LASF89
 3770 0a7d 01       		.byte	0x1
 3771 0a7e B10A     		.2byte	0xab1
 3772 0a80 00000000 		.4byte	.LFB39
 3773 0a84 10000000 		.4byte	.LFE39-.LFB39
 3774 0a88 01       		.uleb128 0x1
 3775 0a89 9C       		.byte	0x9c
 3776 0a8a 1F       		.uleb128 0x1f
 3777 0a8b 9D010000 		.4byte	0x19d
 3778 0a8f 00000000 		.4byte	.LFB40
 3779 0a93 10000000 		.4byte	.LFE40-.LFB40
 3780 0a97 01       		.uleb128 0x1
 3781 0a98 9C       		.byte	0x9c
 3782 0a99 A70A0000 		.4byte	0xaa7
 3783 0a9d 20       		.uleb128 0x20
 3784 0a9e AA010000 		.4byte	0x1aa
 3785 0aa2 B2050000 		.4byte	.LLST45
 3786 0aa6 00       		.byte	0
 3787 0aa7 17       		.uleb128 0x17
 3788 0aa8 1F010000 		.4byte	.LASF90
 3789 0aac 01       		.byte	0x1
 3790 0aad D20A     		.2byte	0xad2
 3791 0aaf 83000000 		.4byte	0x83
 3792 0ab3 00000000 		.4byte	.LFB41
 3793 0ab7 10000000 		.4byte	.LFE41-.LFB41
 3794 0abb 01       		.uleb128 0x1
 3795 0abc 9C       		.byte	0x9c
 3796 0abd 17       		.uleb128 0x17
 3797 0abe 37050000 		.4byte	.LASF91
 3798 0ac2 01       		.byte	0x1
 3799 0ac3 E20A     		.2byte	0xae2
 3800 0ac5 83000000 		.4byte	0x83
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 127


 3801 0ac9 00000000 		.4byte	.LFB42
 3802 0acd 10000000 		.4byte	.LFE42-.LFB42
 3803 0ad1 01       		.uleb128 0x1
 3804 0ad2 9C       		.byte	0x9c
 3805 0ad3 1F       		.uleb128 0x1f
 3806 0ad4 48010000 		.4byte	0x148
 3807 0ad8 00000000 		.4byte	.LFB43
 3808 0adc 18000000 		.4byte	.LFE43-.LFB43
 3809 0ae0 01       		.uleb128 0x1
 3810 0ae1 9C       		.byte	0x9c
 3811 0ae2 FD0A0000 		.4byte	0xafd
 3812 0ae6 21       		.uleb128 0x21
 3813 0ae7 55010000 		.4byte	0x155
 3814 0aeb 01       		.uleb128 0x1
 3815 0aec 50       		.byte	0x50
 3816 0aed 32       		.uleb128 0x32
 3817 0aee 90000000 		.4byte	.Ldebug_ranges0+0x90
 3818 0af2 20       		.uleb128 0x20
 3819 0af3 55010000 		.4byte	0x155
 3820 0af7 D3050000 		.4byte	.LLST46
 3821 0afb 00       		.byte	0
 3822 0afc 00       		.byte	0
 3823 0afd 17       		.uleb128 0x17
 3824 0afe 03070000 		.4byte	.LASF92
 3825 0b02 01       		.byte	0x1
 3826 0b03 1B0B     		.2byte	0xb1b
 3827 0b05 83000000 		.4byte	0x83
 3828 0b09 00000000 		.4byte	.LFB44
 3829 0b0d 10000000 		.4byte	.LFE44-.LFB44
 3830 0b11 01       		.uleb128 0x1
 3831 0b12 9C       		.byte	0x9c
 3832 0b13 17       		.uleb128 0x17
 3833 0b14 4E020000 		.4byte	.LASF93
 3834 0b18 01       		.byte	0x1
 3835 0b19 320B     		.2byte	0xb32
 3836 0b1b 83000000 		.4byte	0x83
 3837 0b1f 00000000 		.4byte	.LFB45
 3838 0b23 10000000 		.4byte	.LFE45-.LFB45
 3839 0b27 01       		.uleb128 0x1
 3840 0b28 9C       		.byte	0x9c
 3841 0b29 34       		.uleb128 0x34
 3842 0b2a 62010000 		.4byte	0x162
 3843 0b2e 00000000 		.4byte	.LFB49
 3844 0b32 24000000 		.4byte	.LFE49-.LFB49
 3845 0b36 01       		.uleb128 0x1
 3846 0b37 9C       		.byte	0x9c
 3847 0b38 5E0B0000 		.4byte	0xb5e
 3848 0b3c 25       		.uleb128 0x25
 3849 0b3d 6F010000 		.4byte	0x16f
 3850 0b41 27       		.uleb128 0x27
 3851 0b42 0C000000 		.4byte	.LBB69
 3852 0b46 10000000 		.4byte	.LBE69-.LBB69
 3853 0b4a 540B0000 		.4byte	0xb54
 3854 0b4e 25       		.uleb128 0x25
 3855 0b4f 6F010000 		.4byte	0x16f
 3856 0b53 00       		.byte	0
 3857 0b54 16       		.uleb128 0x16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 128


 3858 0b55 06000000 		.4byte	.LVL124
 3859 0b59 130B0000 		.4byte	0xb13
 3860 0b5d 00       		.byte	0
 3861 0b5e 1D       		.uleb128 0x1d
 3862 0b5f 94010000 		.4byte	0x194
 3863 0b63 00000000 		.4byte	.LFB46
 3864 0b67 0C000000 		.4byte	.LFE46-.LFB46
 3865 0b6b 01       		.uleb128 0x1
 3866 0b6c 9C       		.byte	0x9c
 3867 0b6d 1C       		.uleb128 0x1c
 3868 0b6e BE060000 		.4byte	.LASF94
 3869 0b72 01       		.byte	0x1
 3870 0b73 620B     		.2byte	0xb62
 3871 0b75 E7000000 		.4byte	0xe7
 3872 0b79 00000000 		.4byte	.LFB47
 3873 0b7d 10000000 		.4byte	.LFE47-.LFB47
 3874 0b81 01       		.uleb128 0x1
 3875 0b82 9C       		.byte	0x9c
 3876 0b83 B40B0000 		.4byte	0xbb4
 3877 0b87 19       		.uleb128 0x19
 3878 0b88 4E030000 		.4byte	.LASF30
 3879 0b8c 01       		.byte	0x1
 3880 0b8d 620B     		.2byte	0xb62
 3881 0b8f 83000000 		.4byte	0x83
 3882 0b93 E7050000 		.4byte	.LLST47
 3883 0b97 1B       		.uleb128 0x1b
 3884 0b98 1D050000 		.4byte	.LASF95
 3885 0b9c 01       		.byte	0x1
 3886 0b9d 620B     		.2byte	0xb62
 3887 0b9f E7000000 		.4byte	0xe7
 3888 0ba3 01       		.uleb128 0x1
 3889 0ba4 51       		.byte	0x51
 3890 0ba5 1E       		.uleb128 0x1e
 3891 0ba6 52000000 		.4byte	.LASF96
 3892 0baa 01       		.byte	0x1
 3893 0bab 640B     		.2byte	0xb64
 3894 0bad E7000000 		.4byte	0xe7
 3895 0bb1 01       		.uleb128 0x1
 3896 0bb2 50       		.byte	0x50
 3897 0bb3 00       		.byte	0
 3898 0bb4 1C       		.uleb128 0x1c
 3899 0bb5 E4020000 		.4byte	.LASF97
 3900 0bb9 01       		.byte	0x1
 3901 0bba 7A0B     		.2byte	0xb7a
 3902 0bbc E7000000 		.4byte	0xe7
 3903 0bc0 00000000 		.4byte	.LFB48
 3904 0bc4 0C000000 		.4byte	.LFE48-.LFB48
 3905 0bc8 01       		.uleb128 0x1
 3906 0bc9 9C       		.byte	0x9c
 3907 0bca DF0B0000 		.4byte	0xbdf
 3908 0bce 19       		.uleb128 0x19
 3909 0bcf 4E030000 		.4byte	.LASF30
 3910 0bd3 01       		.byte	0x1
 3911 0bd4 7A0B     		.2byte	0xb7a
 3912 0bd6 83000000 		.4byte	0x83
 3913 0bda 08060000 		.4byte	.LLST48
 3914 0bde 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 129


 3915 0bdf 18       		.uleb128 0x18
 3916 0be0 40020000 		.4byte	.LASF98
 3917 0be4 01       		.byte	0x1
 3918 0be5 A70B     		.2byte	0xba7
 3919 0be7 00000000 		.4byte	.LFB50
 3920 0beb 74000000 		.4byte	.LFE50-.LFB50
 3921 0bef 01       		.uleb128 0x1
 3922 0bf0 9C       		.byte	0x9c
 3923 0bf1 040C0000 		.4byte	0xc04
 3924 0bf5 1B       		.uleb128 0x1b
 3925 0bf6 E6060000 		.4byte	.LASF99
 3926 0bfa 01       		.byte	0x1
 3927 0bfb A70B     		.2byte	0xba7
 3928 0bfd 040C0000 		.4byte	0xc04
 3929 0c01 01       		.uleb128 0x1
 3930 0c02 50       		.byte	0x50
 3931 0c03 00       		.byte	0
 3932 0c04 06       		.uleb128 0x6
 3933 0c05 04       		.byte	0x4
 3934 0c06 83000000 		.4byte	0x83
 3935 0c0a 18       		.uleb128 0x18
 3936 0c0b E5050000 		.4byte	.LASF100
 3937 0c0f 01       		.byte	0x1
 3938 0c10 D30B     		.2byte	0xbd3
 3939 0c12 00000000 		.4byte	.LFB51
 3940 0c16 20000000 		.4byte	.LFE51-.LFB51
 3941 0c1a 01       		.uleb128 0x1
 3942 0c1b 9C       		.byte	0x9c
 3943 0c1c 410C0000 		.4byte	0xc41
 3944 0c20 19       		.uleb128 0x19
 3945 0c21 17040000 		.4byte	.LASF101
 3946 0c25 01       		.byte	0x1
 3947 0c26 D30B     		.2byte	0xbd3
 3948 0c28 83000000 		.4byte	0x83
 3949 0c2c 29060000 		.4byte	.LLST49
 3950 0c30 1A       		.uleb128 0x1a
 3951 0c31 20030000 		.4byte	.LASF23
 3952 0c35 01       		.byte	0x1
 3953 0c36 D50B     		.2byte	0xbd5
 3954 0c38 83000000 		.4byte	0x83
 3955 0c3c 4A060000 		.4byte	.LLST50
 3956 0c40 00       		.byte	0
 3957 0c41 18       		.uleb128 0x18
 3958 0c42 73030000 		.4byte	.LASF102
 3959 0c46 01       		.byte	0x1
 3960 0c47 EE0B     		.2byte	0xbee
 3961 0c49 00000000 		.4byte	.LFB52
 3962 0c4d 20000000 		.4byte	.LFE52-.LFB52
 3963 0c51 01       		.uleb128 0x1
 3964 0c52 9C       		.byte	0x9c
 3965 0c53 780C0000 		.4byte	0xc78
 3966 0c57 19       		.uleb128 0x19
 3967 0c58 17040000 		.4byte	.LASF101
 3968 0c5c 01       		.byte	0x1
 3969 0c5d EE0B     		.2byte	0xbee
 3970 0c5f 83000000 		.4byte	0x83
 3971 0c63 68060000 		.4byte	.LLST51
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 130


 3972 0c67 1A       		.uleb128 0x1a
 3973 0c68 20030000 		.4byte	.LASF23
 3974 0c6c 01       		.byte	0x1
 3975 0c6d F00B     		.2byte	0xbf0
 3976 0c6f 83000000 		.4byte	0x83
 3977 0c73 89060000 		.4byte	.LLST52
 3978 0c77 00       		.byte	0
 3979 0c78 18       		.uleb128 0x18
 3980 0c79 67070000 		.4byte	.LASF103
 3981 0c7d 01       		.byte	0x1
 3982 0c7e 090C     		.2byte	0xc09
 3983 0c80 00000000 		.4byte	.LFB53
 3984 0c84 20000000 		.4byte	.LFE53-.LFB53
 3985 0c88 01       		.uleb128 0x1
 3986 0c89 9C       		.byte	0x9c
 3987 0c8a AF0C0000 		.4byte	0xcaf
 3988 0c8e 19       		.uleb128 0x19
 3989 0c8f 17040000 		.4byte	.LASF101
 3990 0c93 01       		.byte	0x1
 3991 0c94 090C     		.2byte	0xc09
 3992 0c96 83000000 		.4byte	0x83
 3993 0c9a A7060000 		.4byte	.LLST53
 3994 0c9e 1A       		.uleb128 0x1a
 3995 0c9f 20030000 		.4byte	.LASF23
 3996 0ca3 01       		.byte	0x1
 3997 0ca4 0B0C     		.2byte	0xc0b
 3998 0ca6 83000000 		.4byte	0x83
 3999 0caa C8060000 		.4byte	.LLST54
 4000 0cae 00       		.byte	0
 4001 0caf 18       		.uleb128 0x18
 4002 0cb0 38040000 		.4byte	.LASF104
 4003 0cb4 01       		.byte	0x1
 4004 0cb5 260C     		.2byte	0xc26
 4005 0cb7 00000000 		.4byte	.LFB54
 4006 0cbb 3C000000 		.4byte	.LFE54-.LFB54
 4007 0cbf 01       		.uleb128 0x1
 4008 0cc0 9C       		.byte	0x9c
 4009 0cc1 F60C0000 		.4byte	0xcf6
 4010 0cc5 19       		.uleb128 0x19
 4011 0cc6 96000000 		.4byte	.LASF105
 4012 0cca 01       		.byte	0x1
 4013 0ccb 260C     		.2byte	0xc26
 4014 0ccd 83000000 		.4byte	0x83
 4015 0cd1 E6060000 		.4byte	.LLST55
 4016 0cd5 19       		.uleb128 0x19
 4017 0cd6 17040000 		.4byte	.LASF101
 4018 0cda 01       		.byte	0x1
 4019 0cdb 260C     		.2byte	0xc26
 4020 0cdd 83000000 		.4byte	0x83
 4021 0ce1 39070000 		.4byte	.LLST56
 4022 0ce5 1A       		.uleb128 0x1a
 4023 0ce6 20030000 		.4byte	.LASF23
 4024 0cea 01       		.byte	0x1
 4025 0ceb 280C     		.2byte	0xc28
 4026 0ced 83000000 		.4byte	0x83
 4027 0cf1 5A070000 		.4byte	.LLST57
 4028 0cf5 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 131


 4029 0cf6 2C       		.uleb128 0x2c
 4030 0cf7 E7000000 		.4byte	0xe7
 4031 0cfb 060D0000 		.4byte	0xd06
 4032 0cff 2D       		.uleb128 0x2d
 4033 0d00 E0000000 		.4byte	0xe0
 4034 0d04 04       		.byte	0x4
 4035 0d05 00       		.byte	0
 4036 0d06 35       		.uleb128 0x35
 4037 0d07 D3060000 		.4byte	.LASF106
 4038 0d0b 01       		.byte	0x1
 4039 0d0c 22       		.byte	0x22
 4040 0d0d F60C0000 		.4byte	0xcf6
 4041 0d11 05       		.uleb128 0x5
 4042 0d12 03       		.byte	0x3
 4043 0d13 00000000 		.4byte	CySysTickCallbacks
 4044 0d17 36       		.uleb128 0x36
 4045 0d18 49050000 		.4byte	.LASF107
 4046 0d1c 01       		.byte	0x1
 4047 0d1d 1B       		.byte	0x1b
 4048 0d1e 83000000 		.4byte	0x83
 4049 0d22 05       		.uleb128 0x5
 4050 0d23 03       		.byte	0x3
 4051 0d24 00000000 		.4byte	cydelayFreqHz
 4052 0d28 36       		.uleb128 0x36
 4053 0d29 8B010000 		.4byte	.LASF108
 4054 0d2d 01       		.byte	0x1
 4055 0d2e 1C       		.byte	0x1c
 4056 0d2f 83000000 		.4byte	0x83
 4057 0d33 05       		.uleb128 0x5
 4058 0d34 03       		.byte	0x3
 4059 0d35 00000000 		.4byte	cydelayFreqKhz
 4060 0d39 36       		.uleb128 0x36
 4061 0d3a 45070000 		.4byte	.LASF109
 4062 0d3e 01       		.byte	0x1
 4063 0d3f 1D       		.byte	0x1d
 4064 0d40 6B000000 		.4byte	0x6b
 4065 0d44 05       		.uleb128 0x5
 4066 0d45 03       		.byte	0x3
 4067 0d46 00000000 		.4byte	cydelayFreqMhz
 4068 0d4a 36       		.uleb128 0x36
 4069 0d4b 13020000 		.4byte	.LASF110
 4070 0d4f 01       		.byte	0x1
 4071 0d50 1E       		.byte	0x1e
 4072 0d51 83000000 		.4byte	0x83
 4073 0d55 05       		.uleb128 0x5
 4074 0d56 03       		.byte	0x3
 4075 0d57 00000000 		.4byte	cydelay32kMs
 4076 0d5b 36       		.uleb128 0x36
 4077 0d5c 27040000 		.4byte	.LASF111
 4078 0d60 01       		.byte	0x1
 4079 0d61 36       		.byte	0x36
 4080 0d62 83000000 		.4byte	0x83
 4081 0d66 05       		.uleb128 0x5
 4082 0d67 03       		.byte	0x3
 4083 0d68 00000000 		.4byte	CySysTickInitVar
 4084 0d6c 2C       		.uleb128 0x2c
 4085 0d6d 7C0D0000 		.4byte	0xd7c
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 132


 4086 0d71 7C0D0000 		.4byte	0xd7c
 4087 0d75 2D       		.uleb128 0x2d
 4088 0d76 E0000000 		.4byte	0xe0
 4089 0d7a 2D       		.byte	0x2d
 4090 0d7b 00       		.byte	0
 4091 0d7c 37       		.uleb128 0x37
 4092 0d7d 6B000000 		.4byte	0x6b
 4093 0d81 36       		.uleb128 0x36
 4094 0d82 26050000 		.4byte	.LASF112
 4095 0d86 01       		.byte	0x1
 4096 0d87 3B       		.byte	0x3b
 4097 0d88 920D0000 		.4byte	0xd92
 4098 0d8c 05       		.uleb128 0x5
 4099 0d8d 03       		.byte	0x3
 4100 0d8e 00000000 		.4byte	cyImoFreqMhz2Reg
 4101 0d92 37       		.uleb128 0x37
 4102 0d93 6C0D0000 		.4byte	0xd6c
 4103 0d97 2C       		.uleb128 0x2c
 4104 0d98 7C0D0000 		.4byte	0xd7c
 4105 0d9c A70D0000 		.4byte	0xda7
 4106 0da0 2D       		.uleb128 0x2d
 4107 0da1 E0000000 		.4byte	0xe0
 4108 0da5 16       		.byte	0x16
 4109 0da6 00       		.byte	0
 4110 0da7 36       		.uleb128 0x36
 4111 0da8 72060000 		.4byte	.LASF113
 4112 0dac 01       		.byte	0x1
 4113 0dad 4C       		.byte	0x4c
 4114 0dae B80D0000 		.4byte	0xdb8
 4115 0db2 05       		.uleb128 0x5
 4116 0db3 03       		.byte	0x3
 4117 0db4 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4118 0db8 37       		.uleb128 0x37
 4119 0db9 970D0000 		.4byte	0xd97
 4120 0dbd 36       		.uleb128 0x36
 4121 0dbe 38000000 		.4byte	.LASF114
 4122 0dc2 01       		.byte	0x1
 4123 0dc3 5B       		.byte	0x5b
 4124 0dc4 83000000 		.4byte	0x83
 4125 0dc8 05       		.uleb128 0x5
 4126 0dc9 03       		.byte	0x3
 4127 0dca 00000000 		.4byte	CySysClkPumpConfig
 4128 0dce 38       		.uleb128 0x38
 4129 0dcf BD020000 		.4byte	.LASF115
 4130 0dd3 BD020000 		.4byte	.LASF115
 4131 0dd7 03       		.byte	0x3
 4132 0dd8 E5       		.byte	0xe5
 4133 0dd9 38       		.uleb128 0x38
 4134 0dda 6E050000 		.4byte	.LASF116
 4135 0dde 6E050000 		.4byte	.LASF116
 4136 0de2 03       		.byte	0x3
 4137 0de3 E6       		.byte	0xe6
 4138 0de4 38       		.uleb128 0x38
 4139 0de5 C1050000 		.4byte	.LASF117
 4140 0de9 C1050000 		.4byte	.LASF117
 4141 0ded 03       		.byte	0x3
 4142 0dee DC       		.byte	0xdc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 133


 4143 0def 38       		.uleb128 0x38
 4144 0df0 AC070000 		.4byte	.LASF118
 4145 0df4 AC070000 		.4byte	.LASF118
 4146 0df8 04       		.byte	0x4
 4147 0df9 52       		.byte	0x52
 4148 0dfa 38       		.uleb128 0x38
 4149 0dfb 54070000 		.4byte	.LASF119
 4150 0dff 54070000 		.4byte	.LASF119
 4151 0e03 05       		.byte	0x5
 4152 0e04 54       		.byte	0x54
 4153 0e05 00       		.byte	0
 4154              		.section	.debug_abbrev,"",%progbits
 4155              	.Ldebug_abbrev0:
 4156 0000 01       		.uleb128 0x1
 4157 0001 11       		.uleb128 0x11
 4158 0002 01       		.byte	0x1
 4159 0003 25       		.uleb128 0x25
 4160 0004 0E       		.uleb128 0xe
 4161 0005 13       		.uleb128 0x13
 4162 0006 0B       		.uleb128 0xb
 4163 0007 03       		.uleb128 0x3
 4164 0008 0E       		.uleb128 0xe
 4165 0009 1B       		.uleb128 0x1b
 4166 000a 0E       		.uleb128 0xe
 4167 000b 55       		.uleb128 0x55
 4168 000c 17       		.uleb128 0x17
 4169 000d 11       		.uleb128 0x11
 4170 000e 01       		.uleb128 0x1
 4171 000f 10       		.uleb128 0x10
 4172 0010 17       		.uleb128 0x17
 4173 0011 00       		.byte	0
 4174 0012 00       		.byte	0
 4175 0013 02       		.uleb128 0x2
 4176 0014 24       		.uleb128 0x24
 4177 0015 00       		.byte	0
 4178 0016 0B       		.uleb128 0xb
 4179 0017 0B       		.uleb128 0xb
 4180 0018 3E       		.uleb128 0x3e
 4181 0019 0B       		.uleb128 0xb
 4182 001a 03       		.uleb128 0x3
 4183 001b 0E       		.uleb128 0xe
 4184 001c 00       		.byte	0
 4185 001d 00       		.byte	0
 4186 001e 03       		.uleb128 0x3
 4187 001f 24       		.uleb128 0x24
 4188 0020 00       		.byte	0
 4189 0021 0B       		.uleb128 0xb
 4190 0022 0B       		.uleb128 0xb
 4191 0023 3E       		.uleb128 0x3e
 4192 0024 0B       		.uleb128 0xb
 4193 0025 03       		.uleb128 0x3
 4194 0026 08       		.uleb128 0x8
 4195 0027 00       		.byte	0
 4196 0028 00       		.byte	0
 4197 0029 04       		.uleb128 0x4
 4198 002a 16       		.uleb128 0x16
 4199 002b 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 134


 4200 002c 03       		.uleb128 0x3
 4201 002d 0E       		.uleb128 0xe
 4202 002e 3A       		.uleb128 0x3a
 4203 002f 0B       		.uleb128 0xb
 4204 0030 3B       		.uleb128 0x3b
 4205 0031 05       		.uleb128 0x5
 4206 0032 49       		.uleb128 0x49
 4207 0033 13       		.uleb128 0x13
 4208 0034 00       		.byte	0
 4209 0035 00       		.byte	0
 4210 0036 05       		.uleb128 0x5
 4211 0037 35       		.uleb128 0x35
 4212 0038 00       		.byte	0
 4213 0039 49       		.uleb128 0x49
 4214 003a 13       		.uleb128 0x13
 4215 003b 00       		.byte	0
 4216 003c 00       		.byte	0
 4217 003d 06       		.uleb128 0x6
 4218 003e 0F       		.uleb128 0xf
 4219 003f 00       		.byte	0
 4220 0040 0B       		.uleb128 0xb
 4221 0041 0B       		.uleb128 0xb
 4222 0042 49       		.uleb128 0x49
 4223 0043 13       		.uleb128 0x13
 4224 0044 00       		.byte	0
 4225 0045 00       		.byte	0
 4226 0046 07       		.uleb128 0x7
 4227 0047 15       		.uleb128 0x15
 4228 0048 00       		.byte	0
 4229 0049 27       		.uleb128 0x27
 4230 004a 19       		.uleb128 0x19
 4231 004b 00       		.byte	0
 4232 004c 00       		.byte	0
 4233 004d 08       		.uleb128 0x8
 4234 004e 16       		.uleb128 0x16
 4235 004f 00       		.byte	0
 4236 0050 03       		.uleb128 0x3
 4237 0051 0E       		.uleb128 0xe
 4238 0052 3A       		.uleb128 0x3a
 4239 0053 0B       		.uleb128 0xb
 4240 0054 3B       		.uleb128 0x3b
 4241 0055 0B       		.uleb128 0xb
 4242 0056 49       		.uleb128 0x49
 4243 0057 13       		.uleb128 0x13
 4244 0058 00       		.byte	0
 4245 0059 00       		.byte	0
 4246 005a 09       		.uleb128 0x9
 4247 005b 2E       		.uleb128 0x2e
 4248 005c 01       		.byte	0x1
 4249 005d 3F       		.uleb128 0x3f
 4250 005e 19       		.uleb128 0x19
 4251 005f 03       		.uleb128 0x3
 4252 0060 0E       		.uleb128 0xe
 4253 0061 3A       		.uleb128 0x3a
 4254 0062 0B       		.uleb128 0xb
 4255 0063 3B       		.uleb128 0x3b
 4256 0064 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 135


 4257 0065 27       		.uleb128 0x27
 4258 0066 19       		.uleb128 0x19
 4259 0067 20       		.uleb128 0x20
 4260 0068 0B       		.uleb128 0xb
 4261 0069 01       		.uleb128 0x1
 4262 006a 13       		.uleb128 0x13
 4263 006b 00       		.byte	0
 4264 006c 00       		.byte	0
 4265 006d 0A       		.uleb128 0xa
 4266 006e 34       		.uleb128 0x34
 4267 006f 00       		.byte	0
 4268 0070 03       		.uleb128 0x3
 4269 0071 08       		.uleb128 0x8
 4270 0072 3A       		.uleb128 0x3a
 4271 0073 0B       		.uleb128 0xb
 4272 0074 3B       		.uleb128 0x3b
 4273 0075 0B       		.uleb128 0xb
 4274 0076 49       		.uleb128 0x49
 4275 0077 13       		.uleb128 0x13
 4276 0078 00       		.byte	0
 4277 0079 00       		.byte	0
 4278 007a 0B       		.uleb128 0xb
 4279 007b 34       		.uleb128 0x34
 4280 007c 00       		.byte	0
 4281 007d 03       		.uleb128 0x3
 4282 007e 0E       		.uleb128 0xe
 4283 007f 3A       		.uleb128 0x3a
 4284 0080 0B       		.uleb128 0xb
 4285 0081 3B       		.uleb128 0x3b
 4286 0082 0B       		.uleb128 0xb
 4287 0083 49       		.uleb128 0x49
 4288 0084 13       		.uleb128 0x13
 4289 0085 00       		.byte	0
 4290 0086 00       		.byte	0
 4291 0087 0C       		.uleb128 0xc
 4292 0088 2E       		.uleb128 0x2e
 4293 0089 00       		.byte	0
 4294 008a 3F       		.uleb128 0x3f
 4295 008b 19       		.uleb128 0x19
 4296 008c 03       		.uleb128 0x3
 4297 008d 0E       		.uleb128 0xe
 4298 008e 3A       		.uleb128 0x3a
 4299 008f 0B       		.uleb128 0xb
 4300 0090 3B       		.uleb128 0x3b
 4301 0091 05       		.uleb128 0x5
 4302 0092 27       		.uleb128 0x27
 4303 0093 19       		.uleb128 0x19
 4304 0094 20       		.uleb128 0x20
 4305 0095 0B       		.uleb128 0xb
 4306 0096 00       		.byte	0
 4307 0097 00       		.byte	0
 4308 0098 0D       		.uleb128 0xd
 4309 0099 2E       		.uleb128 0x2e
 4310 009a 01       		.byte	0x1
 4311 009b 3F       		.uleb128 0x3f
 4312 009c 19       		.uleb128 0x19
 4313 009d 03       		.uleb128 0x3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 136


 4314 009e 0E       		.uleb128 0xe
 4315 009f 3A       		.uleb128 0x3a
 4316 00a0 0B       		.uleb128 0xb
 4317 00a1 3B       		.uleb128 0x3b
 4318 00a2 05       		.uleb128 0x5
 4319 00a3 27       		.uleb128 0x27
 4320 00a4 19       		.uleb128 0x19
 4321 00a5 20       		.uleb128 0x20
 4322 00a6 0B       		.uleb128 0xb
 4323 00a7 01       		.uleb128 0x1
 4324 00a8 13       		.uleb128 0x13
 4325 00a9 00       		.byte	0
 4326 00aa 00       		.byte	0
 4327 00ab 0E       		.uleb128 0xe
 4328 00ac 05       		.uleb128 0x5
 4329 00ad 00       		.byte	0
 4330 00ae 03       		.uleb128 0x3
 4331 00af 0E       		.uleb128 0xe
 4332 00b0 3A       		.uleb128 0x3a
 4333 00b1 0B       		.uleb128 0xb
 4334 00b2 3B       		.uleb128 0x3b
 4335 00b3 05       		.uleb128 0x5
 4336 00b4 49       		.uleb128 0x49
 4337 00b5 13       		.uleb128 0x13
 4338 00b6 00       		.byte	0
 4339 00b7 00       		.byte	0
 4340 00b8 0F       		.uleb128 0xf
 4341 00b9 2E       		.uleb128 0x2e
 4342 00ba 01       		.byte	0x1
 4343 00bb 03       		.uleb128 0x3
 4344 00bc 0E       		.uleb128 0xe
 4345 00bd 3A       		.uleb128 0x3a
 4346 00be 0B       		.uleb128 0xb
 4347 00bf 3B       		.uleb128 0x3b
 4348 00c0 05       		.uleb128 0x5
 4349 00c1 27       		.uleb128 0x27
 4350 00c2 19       		.uleb128 0x19
 4351 00c3 20       		.uleb128 0x20
 4352 00c4 0B       		.uleb128 0xb
 4353 00c5 01       		.uleb128 0x1
 4354 00c6 13       		.uleb128 0x13
 4355 00c7 00       		.byte	0
 4356 00c8 00       		.byte	0
 4357 00c9 10       		.uleb128 0x10
 4358 00ca 34       		.uleb128 0x34
 4359 00cb 00       		.byte	0
 4360 00cc 03       		.uleb128 0x3
 4361 00cd 08       		.uleb128 0x8
 4362 00ce 3A       		.uleb128 0x3a
 4363 00cf 0B       		.uleb128 0xb
 4364 00d0 3B       		.uleb128 0x3b
 4365 00d1 05       		.uleb128 0x5
 4366 00d2 49       		.uleb128 0x49
 4367 00d3 13       		.uleb128 0x13
 4368 00d4 00       		.byte	0
 4369 00d5 00       		.byte	0
 4370 00d6 11       		.uleb128 0x11
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 137


 4371 00d7 2E       		.uleb128 0x2e
 4372 00d8 01       		.byte	0x1
 4373 00d9 3F       		.uleb128 0x3f
 4374 00da 19       		.uleb128 0x19
 4375 00db 03       		.uleb128 0x3
 4376 00dc 0E       		.uleb128 0xe
 4377 00dd 3A       		.uleb128 0x3a
 4378 00de 0B       		.uleb128 0xb
 4379 00df 3B       		.uleb128 0x3b
 4380 00e0 05       		.uleb128 0x5
 4381 00e1 27       		.uleb128 0x27
 4382 00e2 19       		.uleb128 0x19
 4383 00e3 49       		.uleb128 0x49
 4384 00e4 13       		.uleb128 0x13
 4385 00e5 20       		.uleb128 0x20
 4386 00e6 0B       		.uleb128 0xb
 4387 00e7 01       		.uleb128 0x1
 4388 00e8 13       		.uleb128 0x13
 4389 00e9 00       		.byte	0
 4390 00ea 00       		.byte	0
 4391 00eb 12       		.uleb128 0x12
 4392 00ec 34       		.uleb128 0x34
 4393 00ed 00       		.byte	0
 4394 00ee 03       		.uleb128 0x3
 4395 00ef 0E       		.uleb128 0xe
 4396 00f0 3A       		.uleb128 0x3a
 4397 00f1 0B       		.uleb128 0xb
 4398 00f2 3B       		.uleb128 0x3b
 4399 00f3 05       		.uleb128 0x5
 4400 00f4 49       		.uleb128 0x49
 4401 00f5 13       		.uleb128 0x13
 4402 00f6 00       		.byte	0
 4403 00f7 00       		.byte	0
 4404 00f8 13       		.uleb128 0x13
 4405 00f9 2E       		.uleb128 0x2e
 4406 00fa 00       		.byte	0
 4407 00fb 3F       		.uleb128 0x3f
 4408 00fc 19       		.uleb128 0x19
 4409 00fd 03       		.uleb128 0x3
 4410 00fe 0E       		.uleb128 0xe
 4411 00ff 3A       		.uleb128 0x3a
 4412 0100 0B       		.uleb128 0xb
 4413 0101 3B       		.uleb128 0x3b
 4414 0102 0B       		.uleb128 0xb
 4415 0103 27       		.uleb128 0x27
 4416 0104 19       		.uleb128 0x19
 4417 0105 11       		.uleb128 0x11
 4418 0106 01       		.uleb128 0x1
 4419 0107 12       		.uleb128 0x12
 4420 0108 06       		.uleb128 0x6
 4421 0109 40       		.uleb128 0x40
 4422 010a 18       		.uleb128 0x18
 4423 010b 9742     		.uleb128 0x2117
 4424 010d 19       		.uleb128 0x19
 4425 010e 00       		.byte	0
 4426 010f 00       		.byte	0
 4427 0110 14       		.uleb128 0x14
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 138


 4428 0111 2E       		.uleb128 0x2e
 4429 0112 00       		.byte	0
 4430 0113 3F       		.uleb128 0x3f
 4431 0114 19       		.uleb128 0x19
 4432 0115 03       		.uleb128 0x3
 4433 0116 0E       		.uleb128 0xe
 4434 0117 3A       		.uleb128 0x3a
 4435 0118 0B       		.uleb128 0xb
 4436 0119 3B       		.uleb128 0x3b
 4437 011a 05       		.uleb128 0x5
 4438 011b 27       		.uleb128 0x27
 4439 011c 19       		.uleb128 0x19
 4440 011d 11       		.uleb128 0x11
 4441 011e 01       		.uleb128 0x1
 4442 011f 12       		.uleb128 0x12
 4443 0120 06       		.uleb128 0x6
 4444 0121 40       		.uleb128 0x40
 4445 0122 18       		.uleb128 0x18
 4446 0123 9742     		.uleb128 0x2117
 4447 0125 19       		.uleb128 0x19
 4448 0126 00       		.byte	0
 4449 0127 00       		.byte	0
 4450 0128 15       		.uleb128 0x15
 4451 0129 2E       		.uleb128 0x2e
 4452 012a 01       		.byte	0x1
 4453 012b 3F       		.uleb128 0x3f
 4454 012c 19       		.uleb128 0x19
 4455 012d 03       		.uleb128 0x3
 4456 012e 0E       		.uleb128 0xe
 4457 012f 3A       		.uleb128 0x3a
 4458 0130 0B       		.uleb128 0xb
 4459 0131 3B       		.uleb128 0x3b
 4460 0132 0B       		.uleb128 0xb
 4461 0133 27       		.uleb128 0x27
 4462 0134 19       		.uleb128 0x19
 4463 0135 11       		.uleb128 0x11
 4464 0136 01       		.uleb128 0x1
 4465 0137 12       		.uleb128 0x12
 4466 0138 06       		.uleb128 0x6
 4467 0139 40       		.uleb128 0x40
 4468 013a 18       		.uleb128 0x18
 4469 013b 9742     		.uleb128 0x2117
 4470 013d 19       		.uleb128 0x19
 4471 013e 01       		.uleb128 0x1
 4472 013f 13       		.uleb128 0x13
 4473 0140 00       		.byte	0
 4474 0141 00       		.byte	0
 4475 0142 16       		.uleb128 0x16
 4476 0143 898201   		.uleb128 0x4109
 4477 0146 00       		.byte	0
 4478 0147 11       		.uleb128 0x11
 4479 0148 01       		.uleb128 0x1
 4480 0149 31       		.uleb128 0x31
 4481 014a 13       		.uleb128 0x13
 4482 014b 00       		.byte	0
 4483 014c 00       		.byte	0
 4484 014d 17       		.uleb128 0x17
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 139


 4485 014e 2E       		.uleb128 0x2e
 4486 014f 00       		.byte	0
 4487 0150 3F       		.uleb128 0x3f
 4488 0151 19       		.uleb128 0x19
 4489 0152 03       		.uleb128 0x3
 4490 0153 0E       		.uleb128 0xe
 4491 0154 3A       		.uleb128 0x3a
 4492 0155 0B       		.uleb128 0xb
 4493 0156 3B       		.uleb128 0x3b
 4494 0157 05       		.uleb128 0x5
 4495 0158 27       		.uleb128 0x27
 4496 0159 19       		.uleb128 0x19
 4497 015a 49       		.uleb128 0x49
 4498 015b 13       		.uleb128 0x13
 4499 015c 11       		.uleb128 0x11
 4500 015d 01       		.uleb128 0x1
 4501 015e 12       		.uleb128 0x12
 4502 015f 06       		.uleb128 0x6
 4503 0160 40       		.uleb128 0x40
 4504 0161 18       		.uleb128 0x18
 4505 0162 9742     		.uleb128 0x2117
 4506 0164 19       		.uleb128 0x19
 4507 0165 00       		.byte	0
 4508 0166 00       		.byte	0
 4509 0167 18       		.uleb128 0x18
 4510 0168 2E       		.uleb128 0x2e
 4511 0169 01       		.byte	0x1
 4512 016a 3F       		.uleb128 0x3f
 4513 016b 19       		.uleb128 0x19
 4514 016c 03       		.uleb128 0x3
 4515 016d 0E       		.uleb128 0xe
 4516 016e 3A       		.uleb128 0x3a
 4517 016f 0B       		.uleb128 0xb
 4518 0170 3B       		.uleb128 0x3b
 4519 0171 05       		.uleb128 0x5
 4520 0172 27       		.uleb128 0x27
 4521 0173 19       		.uleb128 0x19
 4522 0174 11       		.uleb128 0x11
 4523 0175 01       		.uleb128 0x1
 4524 0176 12       		.uleb128 0x12
 4525 0177 06       		.uleb128 0x6
 4526 0178 40       		.uleb128 0x40
 4527 0179 18       		.uleb128 0x18
 4528 017a 9742     		.uleb128 0x2117
 4529 017c 19       		.uleb128 0x19
 4530 017d 01       		.uleb128 0x1
 4531 017e 13       		.uleb128 0x13
 4532 017f 00       		.byte	0
 4533 0180 00       		.byte	0
 4534 0181 19       		.uleb128 0x19
 4535 0182 05       		.uleb128 0x5
 4536 0183 00       		.byte	0
 4537 0184 03       		.uleb128 0x3
 4538 0185 0E       		.uleb128 0xe
 4539 0186 3A       		.uleb128 0x3a
 4540 0187 0B       		.uleb128 0xb
 4541 0188 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 140


 4542 0189 05       		.uleb128 0x5
 4543 018a 49       		.uleb128 0x49
 4544 018b 13       		.uleb128 0x13
 4545 018c 02       		.uleb128 0x2
 4546 018d 17       		.uleb128 0x17
 4547 018e 00       		.byte	0
 4548 018f 00       		.byte	0
 4549 0190 1A       		.uleb128 0x1a
 4550 0191 34       		.uleb128 0x34
 4551 0192 00       		.byte	0
 4552 0193 03       		.uleb128 0x3
 4553 0194 0E       		.uleb128 0xe
 4554 0195 3A       		.uleb128 0x3a
 4555 0196 0B       		.uleb128 0xb
 4556 0197 3B       		.uleb128 0x3b
 4557 0198 05       		.uleb128 0x5
 4558 0199 49       		.uleb128 0x49
 4559 019a 13       		.uleb128 0x13
 4560 019b 02       		.uleb128 0x2
 4561 019c 17       		.uleb128 0x17
 4562 019d 00       		.byte	0
 4563 019e 00       		.byte	0
 4564 019f 1B       		.uleb128 0x1b
 4565 01a0 05       		.uleb128 0x5
 4566 01a1 00       		.byte	0
 4567 01a2 03       		.uleb128 0x3
 4568 01a3 0E       		.uleb128 0xe
 4569 01a4 3A       		.uleb128 0x3a
 4570 01a5 0B       		.uleb128 0xb
 4571 01a6 3B       		.uleb128 0x3b
 4572 01a7 05       		.uleb128 0x5
 4573 01a8 49       		.uleb128 0x49
 4574 01a9 13       		.uleb128 0x13
 4575 01aa 02       		.uleb128 0x2
 4576 01ab 18       		.uleb128 0x18
 4577 01ac 00       		.byte	0
 4578 01ad 00       		.byte	0
 4579 01ae 1C       		.uleb128 0x1c
 4580 01af 2E       		.uleb128 0x2e
 4581 01b0 01       		.byte	0x1
 4582 01b1 3F       		.uleb128 0x3f
 4583 01b2 19       		.uleb128 0x19
 4584 01b3 03       		.uleb128 0x3
 4585 01b4 0E       		.uleb128 0xe
 4586 01b5 3A       		.uleb128 0x3a
 4587 01b6 0B       		.uleb128 0xb
 4588 01b7 3B       		.uleb128 0x3b
 4589 01b8 05       		.uleb128 0x5
 4590 01b9 27       		.uleb128 0x27
 4591 01ba 19       		.uleb128 0x19
 4592 01bb 49       		.uleb128 0x49
 4593 01bc 13       		.uleb128 0x13
 4594 01bd 11       		.uleb128 0x11
 4595 01be 01       		.uleb128 0x1
 4596 01bf 12       		.uleb128 0x12
 4597 01c0 06       		.uleb128 0x6
 4598 01c1 40       		.uleb128 0x40
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 141


 4599 01c2 18       		.uleb128 0x18
 4600 01c3 9742     		.uleb128 0x2117
 4601 01c5 19       		.uleb128 0x19
 4602 01c6 01       		.uleb128 0x1
 4603 01c7 13       		.uleb128 0x13
 4604 01c8 00       		.byte	0
 4605 01c9 00       		.byte	0
 4606 01ca 1D       		.uleb128 0x1d
 4607 01cb 2E       		.uleb128 0x2e
 4608 01cc 00       		.byte	0
 4609 01cd 31       		.uleb128 0x31
 4610 01ce 13       		.uleb128 0x13
 4611 01cf 11       		.uleb128 0x11
 4612 01d0 01       		.uleb128 0x1
 4613 01d1 12       		.uleb128 0x12
 4614 01d2 06       		.uleb128 0x6
 4615 01d3 40       		.uleb128 0x40
 4616 01d4 18       		.uleb128 0x18
 4617 01d5 9742     		.uleb128 0x2117
 4618 01d7 19       		.uleb128 0x19
 4619 01d8 00       		.byte	0
 4620 01d9 00       		.byte	0
 4621 01da 1E       		.uleb128 0x1e
 4622 01db 34       		.uleb128 0x34
 4623 01dc 00       		.byte	0
 4624 01dd 03       		.uleb128 0x3
 4625 01de 0E       		.uleb128 0xe
 4626 01df 3A       		.uleb128 0x3a
 4627 01e0 0B       		.uleb128 0xb
 4628 01e1 3B       		.uleb128 0x3b
 4629 01e2 05       		.uleb128 0x5
 4630 01e3 49       		.uleb128 0x49
 4631 01e4 13       		.uleb128 0x13
 4632 01e5 02       		.uleb128 0x2
 4633 01e6 18       		.uleb128 0x18
 4634 01e7 00       		.byte	0
 4635 01e8 00       		.byte	0
 4636 01e9 1F       		.uleb128 0x1f
 4637 01ea 2E       		.uleb128 0x2e
 4638 01eb 01       		.byte	0x1
 4639 01ec 31       		.uleb128 0x31
 4640 01ed 13       		.uleb128 0x13
 4641 01ee 11       		.uleb128 0x11
 4642 01ef 01       		.uleb128 0x1
 4643 01f0 12       		.uleb128 0x12
 4644 01f1 06       		.uleb128 0x6
 4645 01f2 40       		.uleb128 0x40
 4646 01f3 18       		.uleb128 0x18
 4647 01f4 9742     		.uleb128 0x2117
 4648 01f6 19       		.uleb128 0x19
 4649 01f7 01       		.uleb128 0x1
 4650 01f8 13       		.uleb128 0x13
 4651 01f9 00       		.byte	0
 4652 01fa 00       		.byte	0
 4653 01fb 20       		.uleb128 0x20
 4654 01fc 05       		.uleb128 0x5
 4655 01fd 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 142


 4656 01fe 31       		.uleb128 0x31
 4657 01ff 13       		.uleb128 0x13
 4658 0200 02       		.uleb128 0x2
 4659 0201 17       		.uleb128 0x17
 4660 0202 00       		.byte	0
 4661 0203 00       		.byte	0
 4662 0204 21       		.uleb128 0x21
 4663 0205 05       		.uleb128 0x5
 4664 0206 00       		.byte	0
 4665 0207 31       		.uleb128 0x31
 4666 0208 13       		.uleb128 0x13
 4667 0209 02       		.uleb128 0x2
 4668 020a 18       		.uleb128 0x18
 4669 020b 00       		.byte	0
 4670 020c 00       		.byte	0
 4671 020d 22       		.uleb128 0x22
 4672 020e 34       		.uleb128 0x34
 4673 020f 00       		.byte	0
 4674 0210 31       		.uleb128 0x31
 4675 0211 13       		.uleb128 0x13
 4676 0212 02       		.uleb128 0x2
 4677 0213 18       		.uleb128 0x18
 4678 0214 00       		.byte	0
 4679 0215 00       		.byte	0
 4680 0216 23       		.uleb128 0x23
 4681 0217 34       		.uleb128 0x34
 4682 0218 00       		.byte	0
 4683 0219 31       		.uleb128 0x31
 4684 021a 13       		.uleb128 0x13
 4685 021b 1C       		.uleb128 0x1c
 4686 021c 06       		.uleb128 0x6
 4687 021d 00       		.byte	0
 4688 021e 00       		.byte	0
 4689 021f 24       		.uleb128 0x24
 4690 0220 34       		.uleb128 0x34
 4691 0221 00       		.byte	0
 4692 0222 03       		.uleb128 0x3
 4693 0223 0E       		.uleb128 0xe
 4694 0224 3A       		.uleb128 0x3a
 4695 0225 0B       		.uleb128 0xb
 4696 0226 3B       		.uleb128 0x3b
 4697 0227 05       		.uleb128 0x5
 4698 0228 49       		.uleb128 0x49
 4699 0229 13       		.uleb128 0x13
 4700 022a 1C       		.uleb128 0x1c
 4701 022b 06       		.uleb128 0x6
 4702 022c 00       		.byte	0
 4703 022d 00       		.byte	0
 4704 022e 25       		.uleb128 0x25
 4705 022f 34       		.uleb128 0x34
 4706 0230 00       		.byte	0
 4707 0231 31       		.uleb128 0x31
 4708 0232 13       		.uleb128 0x13
 4709 0233 00       		.byte	0
 4710 0234 00       		.byte	0
 4711 0235 26       		.uleb128 0x26
 4712 0236 34       		.uleb128 0x34
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 143


 4713 0237 00       		.byte	0
 4714 0238 31       		.uleb128 0x31
 4715 0239 13       		.uleb128 0x13
 4716 023a 1C       		.uleb128 0x1c
 4717 023b 0B       		.uleb128 0xb
 4718 023c 00       		.byte	0
 4719 023d 00       		.byte	0
 4720 023e 27       		.uleb128 0x27
 4721 023f 0B       		.uleb128 0xb
 4722 0240 01       		.byte	0x1
 4723 0241 11       		.uleb128 0x11
 4724 0242 01       		.uleb128 0x1
 4725 0243 12       		.uleb128 0x12
 4726 0244 06       		.uleb128 0x6
 4727 0245 01       		.uleb128 0x1
 4728 0246 13       		.uleb128 0x13
 4729 0247 00       		.byte	0
 4730 0248 00       		.byte	0
 4731 0249 28       		.uleb128 0x28
 4732 024a 34       		.uleb128 0x34
 4733 024b 00       		.byte	0
 4734 024c 31       		.uleb128 0x31
 4735 024d 13       		.uleb128 0x13
 4736 024e 02       		.uleb128 0x2
 4737 024f 17       		.uleb128 0x17
 4738 0250 00       		.byte	0
 4739 0251 00       		.byte	0
 4740 0252 29       		.uleb128 0x29
 4741 0253 898201   		.uleb128 0x4109
 4742 0256 01       		.byte	0x1
 4743 0257 11       		.uleb128 0x11
 4744 0258 01       		.uleb128 0x1
 4745 0259 31       		.uleb128 0x31
 4746 025a 13       		.uleb128 0x13
 4747 025b 01       		.uleb128 0x1
 4748 025c 13       		.uleb128 0x13
 4749 025d 00       		.byte	0
 4750 025e 00       		.byte	0
 4751 025f 2A       		.uleb128 0x2a
 4752 0260 8A8201   		.uleb128 0x410a
 4753 0263 00       		.byte	0
 4754 0264 02       		.uleb128 0x2
 4755 0265 18       		.uleb128 0x18
 4756 0266 9142     		.uleb128 0x2111
 4757 0268 18       		.uleb128 0x18
 4758 0269 00       		.byte	0
 4759 026a 00       		.byte	0
 4760 026b 2B       		.uleb128 0x2b
 4761 026c 898201   		.uleb128 0x4109
 4762 026f 01       		.byte	0x1
 4763 0270 11       		.uleb128 0x11
 4764 0271 01       		.uleb128 0x1
 4765 0272 31       		.uleb128 0x31
 4766 0273 13       		.uleb128 0x13
 4767 0274 00       		.byte	0
 4768 0275 00       		.byte	0
 4769 0276 2C       		.uleb128 0x2c
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 144


 4770 0277 01       		.uleb128 0x1
 4771 0278 01       		.byte	0x1
 4772 0279 49       		.uleb128 0x49
 4773 027a 13       		.uleb128 0x13
 4774 027b 01       		.uleb128 0x1
 4775 027c 13       		.uleb128 0x13
 4776 027d 00       		.byte	0
 4777 027e 00       		.byte	0
 4778 027f 2D       		.uleb128 0x2d
 4779 0280 21       		.uleb128 0x21
 4780 0281 00       		.byte	0
 4781 0282 49       		.uleb128 0x49
 4782 0283 13       		.uleb128 0x13
 4783 0284 2F       		.uleb128 0x2f
 4784 0285 0B       		.uleb128 0xb
 4785 0286 00       		.byte	0
 4786 0287 00       		.byte	0
 4787 0288 2E       		.uleb128 0x2e
 4788 0289 1D       		.uleb128 0x1d
 4789 028a 00       		.byte	0
 4790 028b 31       		.uleb128 0x31
 4791 028c 13       		.uleb128 0x13
 4792 028d 52       		.uleb128 0x52
 4793 028e 01       		.uleb128 0x1
 4794 028f 55       		.uleb128 0x55
 4795 0290 17       		.uleb128 0x17
 4796 0291 58       		.uleb128 0x58
 4797 0292 0B       		.uleb128 0xb
 4798 0293 59       		.uleb128 0x59
 4799 0294 05       		.uleb128 0x5
 4800 0295 00       		.byte	0
 4801 0296 00       		.byte	0
 4802 0297 2F       		.uleb128 0x2f
 4803 0298 2E       		.uleb128 0x2e
 4804 0299 01       		.byte	0x1
 4805 029a 3F       		.uleb128 0x3f
 4806 029b 19       		.uleb128 0x19
 4807 029c 03       		.uleb128 0x3
 4808 029d 0E       		.uleb128 0xe
 4809 029e 3A       		.uleb128 0x3a
 4810 029f 0B       		.uleb128 0xb
 4811 02a0 3B       		.uleb128 0x3b
 4812 02a1 05       		.uleb128 0x5
 4813 02a2 27       		.uleb128 0x27
 4814 02a3 19       		.uleb128 0x19
 4815 02a4 11       		.uleb128 0x11
 4816 02a5 01       		.uleb128 0x1
 4817 02a6 12       		.uleb128 0x12
 4818 02a7 06       		.uleb128 0x6
 4819 02a8 40       		.uleb128 0x40
 4820 02a9 18       		.uleb128 0x18
 4821 02aa 9642     		.uleb128 0x2116
 4822 02ac 19       		.uleb128 0x19
 4823 02ad 01       		.uleb128 0x1
 4824 02ae 13       		.uleb128 0x13
 4825 02af 00       		.byte	0
 4826 02b0 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 145


 4827 02b1 30       		.uleb128 0x30
 4828 02b2 34       		.uleb128 0x34
 4829 02b3 00       		.byte	0
 4830 02b4 03       		.uleb128 0x3
 4831 02b5 08       		.uleb128 0x8
 4832 02b6 3A       		.uleb128 0x3a
 4833 02b7 0B       		.uleb128 0xb
 4834 02b8 3B       		.uleb128 0x3b
 4835 02b9 05       		.uleb128 0x5
 4836 02ba 49       		.uleb128 0x49
 4837 02bb 13       		.uleb128 0x13
 4838 02bc 02       		.uleb128 0x2
 4839 02bd 17       		.uleb128 0x17
 4840 02be 00       		.byte	0
 4841 02bf 00       		.byte	0
 4842 02c0 31       		.uleb128 0x31
 4843 02c1 1D       		.uleb128 0x1d
 4844 02c2 01       		.byte	0x1
 4845 02c3 31       		.uleb128 0x31
 4846 02c4 13       		.uleb128 0x13
 4847 02c5 52       		.uleb128 0x52
 4848 02c6 01       		.uleb128 0x1
 4849 02c7 55       		.uleb128 0x55
 4850 02c8 17       		.uleb128 0x17
 4851 02c9 58       		.uleb128 0x58
 4852 02ca 0B       		.uleb128 0xb
 4853 02cb 59       		.uleb128 0x59
 4854 02cc 05       		.uleb128 0x5
 4855 02cd 01       		.uleb128 0x1
 4856 02ce 13       		.uleb128 0x13
 4857 02cf 00       		.byte	0
 4858 02d0 00       		.byte	0
 4859 02d1 32       		.uleb128 0x32
 4860 02d2 0B       		.uleb128 0xb
 4861 02d3 01       		.byte	0x1
 4862 02d4 55       		.uleb128 0x55
 4863 02d5 17       		.uleb128 0x17
 4864 02d6 00       		.byte	0
 4865 02d7 00       		.byte	0
 4866 02d8 33       		.uleb128 0x33
 4867 02d9 1D       		.uleb128 0x1d
 4868 02da 00       		.byte	0
 4869 02db 31       		.uleb128 0x31
 4870 02dc 13       		.uleb128 0x13
 4871 02dd 11       		.uleb128 0x11
 4872 02de 01       		.uleb128 0x1
 4873 02df 12       		.uleb128 0x12
 4874 02e0 06       		.uleb128 0x6
 4875 02e1 58       		.uleb128 0x58
 4876 02e2 0B       		.uleb128 0xb
 4877 02e3 59       		.uleb128 0x59
 4878 02e4 05       		.uleb128 0x5
 4879 02e5 00       		.byte	0
 4880 02e6 00       		.byte	0
 4881 02e7 34       		.uleb128 0x34
 4882 02e8 2E       		.uleb128 0x2e
 4883 02e9 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 146


 4884 02ea 31       		.uleb128 0x31
 4885 02eb 13       		.uleb128 0x13
 4886 02ec 11       		.uleb128 0x11
 4887 02ed 01       		.uleb128 0x1
 4888 02ee 12       		.uleb128 0x12
 4889 02ef 06       		.uleb128 0x6
 4890 02f0 40       		.uleb128 0x40
 4891 02f1 18       		.uleb128 0x18
 4892 02f2 9642     		.uleb128 0x2116
 4893 02f4 19       		.uleb128 0x19
 4894 02f5 01       		.uleb128 0x1
 4895 02f6 13       		.uleb128 0x13
 4896 02f7 00       		.byte	0
 4897 02f8 00       		.byte	0
 4898 02f9 35       		.uleb128 0x35
 4899 02fa 34       		.uleb128 0x34
 4900 02fb 00       		.byte	0
 4901 02fc 03       		.uleb128 0x3
 4902 02fd 0E       		.uleb128 0xe
 4903 02fe 3A       		.uleb128 0x3a
 4904 02ff 0B       		.uleb128 0xb
 4905 0300 3B       		.uleb128 0x3b
 4906 0301 0B       		.uleb128 0xb
 4907 0302 49       		.uleb128 0x49
 4908 0303 13       		.uleb128 0x13
 4909 0304 02       		.uleb128 0x2
 4910 0305 18       		.uleb128 0x18
 4911 0306 00       		.byte	0
 4912 0307 00       		.byte	0
 4913 0308 36       		.uleb128 0x36
 4914 0309 34       		.uleb128 0x34
 4915 030a 00       		.byte	0
 4916 030b 03       		.uleb128 0x3
 4917 030c 0E       		.uleb128 0xe
 4918 030d 3A       		.uleb128 0x3a
 4919 030e 0B       		.uleb128 0xb
 4920 030f 3B       		.uleb128 0x3b
 4921 0310 0B       		.uleb128 0xb
 4922 0311 49       		.uleb128 0x49
 4923 0312 13       		.uleb128 0x13
 4924 0313 3F       		.uleb128 0x3f
 4925 0314 19       		.uleb128 0x19
 4926 0315 02       		.uleb128 0x2
 4927 0316 18       		.uleb128 0x18
 4928 0317 00       		.byte	0
 4929 0318 00       		.byte	0
 4930 0319 37       		.uleb128 0x37
 4931 031a 26       		.uleb128 0x26
 4932 031b 00       		.byte	0
 4933 031c 49       		.uleb128 0x49
 4934 031d 13       		.uleb128 0x13
 4935 031e 00       		.byte	0
 4936 031f 00       		.byte	0
 4937 0320 38       		.uleb128 0x38
 4938 0321 2E       		.uleb128 0x2e
 4939 0322 00       		.byte	0
 4940 0323 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 147


 4941 0324 19       		.uleb128 0x19
 4942 0325 3C       		.uleb128 0x3c
 4943 0326 19       		.uleb128 0x19
 4944 0327 6E       		.uleb128 0x6e
 4945 0328 0E       		.uleb128 0xe
 4946 0329 03       		.uleb128 0x3
 4947 032a 0E       		.uleb128 0xe
 4948 032b 3A       		.uleb128 0x3a
 4949 032c 0B       		.uleb128 0xb
 4950 032d 3B       		.uleb128 0x3b
 4951 032e 0B       		.uleb128 0xb
 4952 032f 00       		.byte	0
 4953 0330 00       		.byte	0
 4954 0331 00       		.byte	0
 4955              		.section	.debug_loc,"",%progbits
 4956              	.Ldebug_loc0:
 4957              	.LLST0:
 4958 0000 00000000 		.4byte	.LVL1
 4959 0004 07000000 		.4byte	.LVL2-1
 4960 0008 0100     		.2byte	0x1
 4961 000a 50       		.byte	0x50
 4962 000b 07000000 		.4byte	.LVL2-1
 4963 000f 1A000000 		.4byte	.LVL6
 4964 0013 0100     		.2byte	0x1
 4965 0015 54       		.byte	0x54
 4966 0016 1A000000 		.4byte	.LVL6
 4967 001a 20000000 		.4byte	.LFE6
 4968 001e 0400     		.2byte	0x4
 4969 0020 F3       		.byte	0xf3
 4970 0021 01       		.uleb128 0x1
 4971 0022 50       		.byte	0x50
 4972 0023 9F       		.byte	0x9f
 4973 0024 00000000 		.4byte	0
 4974 0028 00000000 		.4byte	0
 4975              	.LLST1:
 4976 002c 08000000 		.4byte	.LVL2
 4977 0030 19000000 		.4byte	.LVL5-1
 4978 0034 0100     		.2byte	0x1
 4979 0036 50       		.byte	0x50
 4980 0037 00000000 		.4byte	0
 4981 003b 00000000 		.4byte	0
 4982              	.LLST2:
 4983 003f 10000000 		.4byte	.LVL3
 4984 0043 14000000 		.4byte	.LVL4
 4985 0047 0100     		.2byte	0x1
 4986 0049 52       		.byte	0x52
 4987 004a 14000000 		.4byte	.LVL4
 4988 004e 19000000 		.4byte	.LVL5-1
 4989 0052 0100     		.2byte	0x1
 4990 0054 53       		.byte	0x53
 4991 0055 00000000 		.4byte	0
 4992 0059 00000000 		.4byte	0
 4993              	.LLST3:
 4994 005d 06000000 		.4byte	.LVL8
 4995 0061 0D000000 		.4byte	.LVL10-1
 4996 0065 0100     		.2byte	0x1
 4997 0067 50       		.byte	0x50
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 148


 4998 0068 00000000 		.4byte	0
 4999 006c 00000000 		.4byte	0
 5000              	.LLST4:
 5001 0070 0A000000 		.4byte	.LVL9
 5002 0074 12000000 		.4byte	.LVL11
 5003 0078 0500     		.2byte	0x5
 5004 007a 74       		.byte	0x74
 5005 007b 00       		.sleb128 0
 5006 007c 37       		.byte	0x37
 5007 007d 1A       		.byte	0x1a
 5008 007e 9F       		.byte	0x9f
 5009 007f 12000000 		.4byte	.LVL11
 5010 0083 18000000 		.4byte	.LFE8
 5011 0087 0100     		.2byte	0x1
 5012 0089 50       		.byte	0x50
 5013 008a 00000000 		.4byte	0
 5014 008e 00000000 		.4byte	0
 5015              	.LLST5:
 5016 0092 00000000 		.4byte	.LVL12
 5017 0096 07000000 		.4byte	.LVL13-1
 5018 009a 0100     		.2byte	0x1
 5019 009c 50       		.byte	0x50
 5020 009d 07000000 		.4byte	.LVL13-1
 5021 00a1 0C000000 		.4byte	.LVL14
 5022 00a5 0100     		.2byte	0x1
 5023 00a7 54       		.byte	0x54
 5024 00a8 0C000000 		.4byte	.LVL14
 5025 00ac 2C000000 		.4byte	.LFE9
 5026 00b0 0400     		.2byte	0x4
 5027 00b2 F3       		.byte	0xf3
 5028 00b3 01       		.uleb128 0x1
 5029 00b4 50       		.byte	0x50
 5030 00b5 9F       		.byte	0x9f
 5031 00b6 00000000 		.4byte	0
 5032 00ba 00000000 		.4byte	0
 5033              	.LLST6:
 5034 00be 08000000 		.4byte	.LVL13
 5035 00c2 21000000 		.4byte	.LVL15-1
 5036 00c6 0100     		.2byte	0x1
 5037 00c8 50       		.byte	0x50
 5038 00c9 00000000 		.4byte	0
 5039 00cd 00000000 		.4byte	0
 5040              	.LLST7:
 5041 00d1 00000000 		.4byte	.LVL16
 5042 00d5 08000000 		.4byte	.LVL17
 5043 00d9 0100     		.2byte	0x1
 5044 00db 50       		.byte	0x50
 5045 00dc 08000000 		.4byte	.LVL17
 5046 00e0 14000000 		.4byte	.LFE15
 5047 00e4 0100     		.2byte	0x1
 5048 00e6 52       		.byte	0x52
 5049 00e7 00000000 		.4byte	0
 5050 00eb 00000000 		.4byte	0
 5051              	.LLST8:
 5052 00ef 0A000000 		.4byte	.LVL18
 5053 00f3 0C000000 		.4byte	.LVL19
 5054 00f7 0500     		.2byte	0x5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 149


 5055 00f9 70       		.byte	0x70
 5056 00fa 00       		.sleb128 0
 5057 00fb 49       		.byte	0x49
 5058 00fc 1A       		.byte	0x1a
 5059 00fd 9F       		.byte	0x9f
 5060 00fe 0C000000 		.4byte	.LVL19
 5061 0102 14000000 		.4byte	.LFE15
 5062 0106 0100     		.2byte	0x1
 5063 0108 50       		.byte	0x50
 5064 0109 00000000 		.4byte	0
 5065 010d 00000000 		.4byte	0
 5066              	.LLST9:
 5067 0111 00000000 		.4byte	.LVL22
 5068 0115 04000000 		.4byte	.LVL23
 5069 0119 0100     		.2byte	0x1
 5070 011b 50       		.byte	0x50
 5071 011c 04000000 		.4byte	.LVL23
 5072 0120 0E000000 		.4byte	.LFE18
 5073 0124 0400     		.2byte	0x4
 5074 0126 F3       		.byte	0xf3
 5075 0127 01       		.uleb128 0x1
 5076 0128 50       		.byte	0x50
 5077 0129 9F       		.byte	0x9f
 5078 012a 00000000 		.4byte	0
 5079 012e 00000000 		.4byte	0
 5080              	.LLST10:
 5081 0132 00000000 		.4byte	.LVL25
 5082 0136 04000000 		.4byte	.LVL26
 5083 013a 0100     		.2byte	0x1
 5084 013c 50       		.byte	0x50
 5085 013d 04000000 		.4byte	.LVL26
 5086 0141 0C000000 		.4byte	.LFE19
 5087 0145 0400     		.2byte	0x4
 5088 0147 F3       		.byte	0xf3
 5089 0148 01       		.uleb128 0x1
 5090 0149 50       		.byte	0x50
 5091 014a 9F       		.byte	0x9f
 5092 014b 00000000 		.4byte	0
 5093 014f 00000000 		.4byte	0
 5094              	.LLST11:
 5095 0153 00000000 		.4byte	.LVL27
 5096 0157 04000000 		.4byte	.LVL28
 5097 015b 0100     		.2byte	0x1
 5098 015d 50       		.byte	0x50
 5099 015e 04000000 		.4byte	.LVL28
 5100 0162 10000000 		.4byte	.LFE20
 5101 0166 0400     		.2byte	0x4
 5102 0168 F3       		.byte	0xf3
 5103 0169 01       		.uleb128 0x1
 5104 016a 50       		.byte	0x50
 5105 016b 9F       		.byte	0x9f
 5106 016c 00000000 		.4byte	0
 5107 0170 00000000 		.4byte	0
 5108              	.LLST12:
 5109 0174 00000000 		.4byte	.LVL30
 5110 0178 04000000 		.4byte	.LVL31
 5111 017c 0100     		.2byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 150


 5112 017e 50       		.byte	0x50
 5113 017f 04000000 		.4byte	.LVL31
 5114 0183 10000000 		.4byte	.LFE21
 5115 0187 0400     		.2byte	0x4
 5116 0189 F3       		.byte	0xf3
 5117 018a 01       		.uleb128 0x1
 5118 018b 50       		.byte	0x50
 5119 018c 9F       		.byte	0x9f
 5120 018d 00000000 		.4byte	0
 5121 0191 00000000 		.4byte	0
 5122              	.LLST13:
 5123 0195 00000000 		.4byte	.LVL32
 5124 0199 17000000 		.4byte	.LVL34-1
 5125 019d 0100     		.2byte	0x1
 5126 019f 50       		.byte	0x50
 5127 01a0 17000000 		.4byte	.LVL34-1
 5128 01a4 34000000 		.4byte	.LFE22
 5129 01a8 0400     		.2byte	0x4
 5130 01aa F3       		.byte	0xf3
 5131 01ab 01       		.uleb128 0x1
 5132 01ac 50       		.byte	0x50
 5133 01ad 9F       		.byte	0x9f
 5134 01ae 00000000 		.4byte	0
 5135 01b2 00000000 		.4byte	0
 5136              	.LLST14:
 5137 01b6 00000000 		.4byte	.LVL32
 5138 01ba 17000000 		.4byte	.LVL34-1
 5139 01be 0100     		.2byte	0x1
 5140 01c0 51       		.byte	0x51
 5141 01c1 17000000 		.4byte	.LVL34-1
 5142 01c5 34000000 		.4byte	.LFE22
 5143 01c9 0400     		.2byte	0x4
 5144 01cb F3       		.byte	0xf3
 5145 01cc 01       		.uleb128 0x1
 5146 01cd 51       		.byte	0x51
 5147 01ce 9F       		.byte	0x9f
 5148 01cf 00000000 		.4byte	0
 5149 01d3 00000000 		.4byte	0
 5150              	.LLST15:
 5151 01d7 18000000 		.4byte	.LVL34
 5152 01db 2B000000 		.4byte	.LVL38-1
 5153 01df 0100     		.2byte	0x1
 5154 01e1 50       		.byte	0x50
 5155 01e2 00000000 		.4byte	0
 5156 01e6 00000000 		.4byte	0
 5157              	.LLST16:
 5158 01ea 10000000 		.4byte	.LVL33
 5159 01ee 2C000000 		.4byte	.LVL39
 5160 01f2 0100     		.2byte	0x1
 5161 01f4 55       		.byte	0x55
 5162 01f5 00000000 		.4byte	0
 5163 01f9 00000000 		.4byte	0
 5164              	.LLST17:
 5165 01fd 22000000 		.4byte	.LVL35
 5166 0201 26000000 		.4byte	.LVL37
 5167 0205 0100     		.2byte	0x1
 5168 0207 53       		.byte	0x53
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 151


 5169 0208 26000000 		.4byte	.LVL37
 5170 020c 2C000000 		.4byte	.LVL40
 5171 0210 0100     		.2byte	0x1
 5172 0212 57       		.byte	0x57
 5173 0213 00000000 		.4byte	0
 5174 0217 00000000 		.4byte	0
 5175              	.LLST18:
 5176 021b 00000000 		.4byte	.LVL41
 5177 021f 18000000 		.4byte	.LVL44
 5178 0223 0100     		.2byte	0x1
 5179 0225 50       		.byte	0x50
 5180 0226 18000000 		.4byte	.LVL44
 5181 022a 20000000 		.4byte	.LFE23
 5182 022e 0400     		.2byte	0x4
 5183 0230 F3       		.byte	0xf3
 5184 0231 01       		.uleb128 0x1
 5185 0232 50       		.byte	0x50
 5186 0233 9F       		.byte	0x9f
 5187 0234 00000000 		.4byte	0
 5188 0238 00000000 		.4byte	0
 5189              	.LLST19:
 5190 023c 0A000000 		.4byte	.LVL42
 5191 0240 16000000 		.4byte	.LVL43
 5192 0244 0F00     		.2byte	0xf
 5193 0246 71       		.byte	0x71
 5194 0247 00       		.sleb128 0
 5195 0248 70       		.byte	0x70
 5196 0249 00       		.sleb128 0
 5197 024a 33       		.byte	0x33
 5198 024b 1A       		.byte	0x1a
 5199 024c 08       		.byte	0x8
 5200 024d FF       		.byte	0xff
 5201 024e 1A       		.byte	0x1a
 5202 024f 33       		.byte	0x33
 5203 0250 24       		.byte	0x24
 5204 0251 23       		.byte	0x23
 5205 0252 06       		.uleb128 0x6
 5206 0253 25       		.byte	0x25
 5207 0254 9F       		.byte	0x9f
 5208 0255 00000000 		.4byte	0
 5209 0259 00000000 		.4byte	0
 5210              	.LLST20:
 5211 025d 00000000 		.4byte	.LVL45
 5212 0261 04000000 		.4byte	.LVL46
 5213 0265 0100     		.2byte	0x1
 5214 0267 50       		.byte	0x50
 5215 0268 04000000 		.4byte	.LVL46
 5216 026c 14000000 		.4byte	.LFE24
 5217 0270 0400     		.2byte	0x4
 5218 0272 F3       		.byte	0xf3
 5219 0273 01       		.uleb128 0x1
 5220 0274 50       		.byte	0x50
 5221 0275 9F       		.byte	0x9f
 5222 0276 00000000 		.4byte	0
 5223 027a 00000000 		.4byte	0
 5224              	.LLST21:
 5225 027e 00000000 		.4byte	.LVL47
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 152


 5226 0282 06000000 		.4byte	.LVL48
 5227 0286 0100     		.2byte	0x1
 5228 0288 50       		.byte	0x50
 5229 0289 06000000 		.4byte	.LVL48
 5230 028d 18000000 		.4byte	.LFE25
 5231 0291 0400     		.2byte	0x4
 5232 0293 F3       		.byte	0xf3
 5233 0294 01       		.uleb128 0x1
 5234 0295 50       		.byte	0x50
 5235 0296 9F       		.byte	0x9f
 5236 0297 00000000 		.4byte	0
 5237 029b 00000000 		.4byte	0
 5238              	.LLST22:
 5239 029f 00000000 		.4byte	.LVL49
 5240 02a3 04000000 		.4byte	.LVL50
 5241 02a7 0100     		.2byte	0x1
 5242 02a9 50       		.byte	0x50
 5243 02aa 04000000 		.4byte	.LVL50
 5244 02ae 14000000 		.4byte	.LFE26
 5245 02b2 0400     		.2byte	0x4
 5246 02b4 F3       		.byte	0xf3
 5247 02b5 01       		.uleb128 0x1
 5248 02b6 50       		.byte	0x50
 5249 02b7 9F       		.byte	0x9f
 5250 02b8 00000000 		.4byte	0
 5251 02bc 00000000 		.4byte	0
 5252              	.LLST23:
 5253 02c0 00000000 		.4byte	.LVL51
 5254 02c4 04000000 		.4byte	.LVL52
 5255 02c8 0100     		.2byte	0x1
 5256 02ca 50       		.byte	0x50
 5257 02cb 04000000 		.4byte	.LVL52
 5258 02cf 14000000 		.4byte	.LFE27
 5259 02d3 0400     		.2byte	0x4
 5260 02d5 F3       		.byte	0xf3
 5261 02d6 01       		.uleb128 0x1
 5262 02d7 50       		.byte	0x50
 5263 02d8 9F       		.byte	0x9f
 5264 02d9 00000000 		.4byte	0
 5265 02dd 00000000 		.4byte	0
 5266              	.LLST24:
 5267 02e1 00000000 		.4byte	.LVL53
 5268 02e5 04000000 		.4byte	.LVL54
 5269 02e9 0100     		.2byte	0x1
 5270 02eb 50       		.byte	0x50
 5271 02ec 04000000 		.4byte	.LVL54
 5272 02f0 14000000 		.4byte	.LFE28
 5273 02f4 0400     		.2byte	0x4
 5274 02f6 F3       		.byte	0xf3
 5275 02f7 01       		.uleb128 0x1
 5276 02f8 50       		.byte	0x50
 5277 02f9 9F       		.byte	0x9f
 5278 02fa 00000000 		.4byte	0
 5279 02fe 00000000 		.4byte	0
 5280              	.LLST25:
 5281 0302 00000000 		.4byte	.LVL56
 5282 0306 08000000 		.4byte	.LVL57
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 153


 5283 030a 0100     		.2byte	0x1
 5284 030c 50       		.byte	0x50
 5285 030d 08000000 		.4byte	.LVL57
 5286 0311 22000000 		.4byte	.LVL61
 5287 0315 0100     		.2byte	0x1
 5288 0317 54       		.byte	0x54
 5289 0318 00000000 		.4byte	0
 5290 031c 00000000 		.4byte	0
 5291              	.LLST26:
 5292 0320 14000000 		.4byte	.LVL65
 5293 0324 18000000 		.4byte	.LVL66
 5294 0328 0200     		.2byte	0x2
 5295 032a 30       		.byte	0x30
 5296 032b 9F       		.byte	0x9f
 5297 032c 18000000 		.4byte	.LVL66
 5298 0330 26000000 		.4byte	.LVL67
 5299 0334 0100     		.2byte	0x1
 5300 0336 52       		.byte	0x52
 5301 0337 26000000 		.4byte	.LVL67
 5302 033b 28000000 		.4byte	.LVL68
 5303 033f 0300     		.2byte	0x3
 5304 0341 72       		.byte	0x72
 5305 0342 7D       		.sleb128 -3
 5306 0343 9F       		.byte	0x9f
 5307 0344 28000000 		.4byte	.LVL68
 5308 0348 30000000 		.4byte	.LVL70
 5309 034c 0100     		.2byte	0x1
 5310 034e 52       		.byte	0x52
 5311 034f 00000000 		.4byte	0
 5312 0353 00000000 		.4byte	0
 5313              	.LLST27:
 5314 0357 14000000 		.4byte	.LVL65
 5315 035b 26000000 		.4byte	.LVL67
 5316 035f 0200     		.2byte	0x2
 5317 0361 33       		.byte	0x33
 5318 0362 9F       		.byte	0x9f
 5319 0363 26000000 		.4byte	.LVL67
 5320 0367 28000000 		.4byte	.LVL68
 5321 036b 0100     		.2byte	0x1
 5322 036d 52       		.byte	0x52
 5323 036e 28000000 		.4byte	.LVL68
 5324 0372 30000000 		.4byte	.LVL70
 5325 0376 0200     		.2byte	0x2
 5326 0378 33       		.byte	0x33
 5327 0379 9F       		.byte	0x9f
 5328 037a 30000000 		.4byte	.LVL70
 5329 037e 6A000000 		.4byte	.LVL73
 5330 0382 0100     		.2byte	0x1
 5331 0384 52       		.byte	0x52
 5332 0385 6A000000 		.4byte	.LVL73
 5333 0389 6E000000 		.4byte	.LVL74
 5334 038d 0700     		.2byte	0x7
 5335 038f 70       		.byte	0x70
 5336 0390 B39C8080 		.sleb128 -268431821
 5336      7F
 5337 0395 9F       		.byte	0x9f
 5338 0396 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 154


 5339 039a 00000000 		.4byte	0
 5340              	.LLST28:
 5341 039e 14000000 		.4byte	.LVL65
 5342 03a2 AA000000 		.4byte	.LVL82
 5343 03a6 0100     		.2byte	0x1
 5344 03a8 54       		.byte	0x54
 5345 03a9 00000000 		.4byte	0
 5346 03ad 00000000 		.4byte	0
 5347              	.LLST29:
 5348 03b1 50000000 		.4byte	.LVL71
 5349 03b5 5C000000 		.4byte	.LVL72
 5350 03b9 0100     		.2byte	0x1
 5351 03bb 50       		.byte	0x50
 5352 03bc 5C000000 		.4byte	.LVL72
 5353 03c0 76000000 		.4byte	.LVL76
 5354 03c4 0700     		.2byte	0x7
 5355 03c6 73       		.byte	0x73
 5356 03c7 00       		.sleb128 0
 5357 03c8 44       		.byte	0x44
 5358 03c9 40       		.byte	0x40
 5359 03ca 24       		.byte	0x24
 5360 03cb 21       		.byte	0x21
 5361 03cc 9F       		.byte	0x9f
 5362 03cd 80000000 		.4byte	.LVL77
 5363 03d1 86000000 		.4byte	.LVL78
 5364 03d5 0100     		.2byte	0x1
 5365 03d7 53       		.byte	0x53
 5366 03d8 86000000 		.4byte	.LVL78
 5367 03dc 8A000000 		.4byte	.LVL79
 5368 03e0 0200     		.2byte	0x2
 5369 03e2 71       		.byte	0x71
 5370 03e3 00       		.sleb128 0
 5371 03e4 00000000 		.4byte	0
 5372 03e8 00000000 		.4byte	0
 5373              	.LLST30:
 5374 03ec 6E000000 		.4byte	.LVL74
 5375 03f0 72000000 		.4byte	.LVL75
 5376 03f4 1900     		.2byte	0x19
 5377 03f6 70       		.byte	0x70
 5378 03f7 00       		.sleb128 0
 5379 03f8 76       		.byte	0x76
 5380 03f9 00       		.sleb128 0
 5381 03fa 22       		.byte	0x22
 5382 03fb 12       		.byte	0x12
 5383 03fc 40       		.byte	0x40
 5384 03fd 4B       		.byte	0x4b
 5385 03fe 24       		.byte	0x24
 5386 03ff 22       		.byte	0x22
 5387 0400 08       		.byte	0x8
 5388 0401 FF       		.byte	0xff
 5389 0402 16       		.byte	0x16
 5390 0403 14       		.byte	0x14
 5391 0404 40       		.byte	0x40
 5392 0405 4B       		.byte	0x4b
 5393 0406 24       		.byte	0x24
 5394 0407 22       		.byte	0x22
 5395 0408 2D       		.byte	0x2d
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 155


 5396 0409 28       		.byte	0x28
 5397 040a 0100     		.2byte	0x1
 5398 040c 16       		.byte	0x16
 5399 040d 13       		.byte	0x13
 5400 040e 9F       		.byte	0x9f
 5401 040f 00000000 		.4byte	0
 5402 0413 00000000 		.4byte	0
 5403              	.LLST31:
 5404 0417 00000000 		.4byte	.LVL83
 5405 041b 09000000 		.4byte	.LVL84-1
 5406 041f 0100     		.2byte	0x1
 5407 0421 50       		.byte	0x50
 5408 0422 09000000 		.4byte	.LVL84-1
 5409 0426 30000000 		.4byte	.LVL90
 5410 042a 0100     		.2byte	0x1
 5411 042c 54       		.byte	0x54
 5412 042d 30000000 		.4byte	.LVL90
 5413 0431 80000000 		.4byte	.LFE10
 5414 0435 0400     		.2byte	0x4
 5415 0437 F3       		.byte	0xf3
 5416 0438 01       		.uleb128 0x1
 5417 0439 50       		.byte	0x50
 5418 043a 9F       		.byte	0x9f
 5419 043b 00000000 		.4byte	0
 5420 043f 00000000 		.4byte	0
 5421              	.LLST32:
 5422 0443 00000000 		.4byte	.LVL83
 5423 0447 16000000 		.4byte	.LVL87
 5424 044b 0200     		.2byte	0x2
 5425 044d 30       		.byte	0x30
 5426 044e 9F       		.byte	0x9f
 5427 044f 16000000 		.4byte	.LVL87
 5428 0453 1C000000 		.4byte	.LVL89
 5429 0457 0200     		.2byte	0x2
 5430 0459 31       		.byte	0x31
 5431 045a 9F       		.byte	0x9f
 5432 045b 1C000000 		.4byte	.LVL89
 5433 045f 55000000 		.4byte	.LVL91-1
 5434 0463 0100     		.2byte	0x1
 5435 0465 52       		.byte	0x52
 5436 0466 00000000 		.4byte	0
 5437 046a 00000000 		.4byte	0
 5438              	.LLST33:
 5439 046e 0C000000 		.4byte	.LVL85
 5440 0472 5E000000 		.4byte	.LVL93
 5441 0476 0100     		.2byte	0x1
 5442 0478 55       		.byte	0x55
 5443 0479 00000000 		.4byte	0
 5444 047d 00000000 		.4byte	0
 5445              	.LLST34:
 5446 0481 00000000 		.4byte	.LVL94
 5447 0485 08000000 		.4byte	.LVL95
 5448 0489 0100     		.2byte	0x1
 5449 048b 50       		.byte	0x50
 5450 048c 08000000 		.4byte	.LVL95
 5451 0490 14000000 		.4byte	.LFE32
 5452 0494 0400     		.2byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 156


 5453 0496 F3       		.byte	0xf3
 5454 0497 01       		.uleb128 0x1
 5455 0498 50       		.byte	0x50
 5456 0499 9F       		.byte	0x9f
 5457 049a 00000000 		.4byte	0
 5458 049e 00000000 		.4byte	0
 5459              	.LLST35:
 5460 04a2 00000000 		.4byte	.LVL97
 5461 04a6 0E000000 		.4byte	.LVL98
 5462 04aa 0100     		.2byte	0x1
 5463 04ac 50       		.byte	0x50
 5464 04ad 0E000000 		.4byte	.LVL98
 5465 04b1 44000000 		.4byte	.LFE11
 5466 04b5 0400     		.2byte	0x4
 5467 04b7 F3       		.byte	0xf3
 5468 04b8 01       		.uleb128 0x1
 5469 04b9 50       		.byte	0x50
 5470 04ba 9F       		.byte	0x9f
 5471 04bb 00000000 		.4byte	0
 5472 04bf 00000000 		.4byte	0
 5473              	.LLST36:
 5474 04c3 00000000 		.4byte	.LVL100
 5475 04c7 18000000 		.4byte	.LVL101
 5476 04cb 0100     		.2byte	0x1
 5477 04cd 50       		.byte	0x50
 5478 04ce 18000000 		.4byte	.LVL101
 5479 04d2 48000000 		.4byte	.LFE33
 5480 04d6 0400     		.2byte	0x4
 5481 04d8 F3       		.byte	0xf3
 5482 04d9 01       		.uleb128 0x1
 5483 04da 50       		.byte	0x50
 5484 04db 9F       		.byte	0x9f
 5485 04dc 00000000 		.4byte	0
 5486 04e0 00000000 		.4byte	0
 5487              	.LLST37:
 5488 04e4 00000000 		.4byte	.LVL104
 5489 04e8 0C000000 		.4byte	.LVL105
 5490 04ec 0200     		.2byte	0x2
 5491 04ee 30       		.byte	0x30
 5492 04ef 9F       		.byte	0x9f
 5493 04f0 0C000000 		.4byte	.LVL105
 5494 04f4 10000000 		.4byte	.LVL106
 5495 04f8 0200     		.2byte	0x2
 5496 04fa 31       		.byte	0x31
 5497 04fb 9F       		.byte	0x9f
 5498 04fc 10000000 		.4byte	.LVL106
 5499 0500 12000000 		.4byte	.LVL107
 5500 0504 0200     		.2byte	0x2
 5501 0506 32       		.byte	0x32
 5502 0507 9F       		.byte	0x9f
 5503 0508 12000000 		.4byte	.LVL107
 5504 050c 14000000 		.4byte	.LVL108
 5505 0510 0200     		.2byte	0x2
 5506 0512 33       		.byte	0x33
 5507 0513 9F       		.byte	0x9f
 5508 0514 14000000 		.4byte	.LVL108
 5509 0518 60000000 		.4byte	.LFE35
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 157


 5510 051c 0200     		.2byte	0x2
 5511 051e 35       		.byte	0x35
 5512 051f 9F       		.byte	0x9f
 5513 0520 00000000 		.4byte	0
 5514 0524 00000000 		.4byte	0
 5515              	.LLST38:
 5516 0528 18000000 		.4byte	.LVL110
 5517 052c 22000000 		.4byte	.LVL111
 5518 0530 0200     		.2byte	0x2
 5519 0532 31       		.byte	0x31
 5520 0533 9F       		.byte	0x9f
 5521 0534 00000000 		.4byte	0
 5522 0538 00000000 		.4byte	0
 5523              	.LLST40:
 5524 053c 14000000 		.4byte	.LVL108
 5525 0540 18000000 		.4byte	.LVL110
 5526 0544 0600     		.2byte	0x6
 5527 0546 03       		.byte	0x3
 5528 0547 00000000 		.4byte	CySysTickServiceCallbacks
 5529 054b 9F       		.byte	0x9f
 5530 054c 00000000 		.4byte	0
 5531 0550 00000000 		.4byte	0
 5532              	.LLST41:
 5533 0554 14000000 		.4byte	.LVL108
 5534 0558 18000000 		.4byte	.LVL110
 5535 055c 0200     		.2byte	0x2
 5536 055e 3F       		.byte	0x3f
 5537 055f 9F       		.byte	0x9f
 5538 0560 00000000 		.4byte	0
 5539 0564 00000000 		.4byte	0
 5540              	.LLST42:
 5541 0568 14000000 		.4byte	.LVL108
 5542 056c 16000000 		.4byte	.LVL109
 5543 0570 0500     		.2byte	0x5
 5544 0572 0C       		.byte	0xc
 5545 0573 3C000020 		.4byte	0x2000003c
 5546 0577 16000000 		.4byte	.LVL109
 5547 057b 18000000 		.4byte	.LVL110
 5548 057f 0200     		.2byte	0x2
 5549 0581 73       		.byte	0x73
 5550 0582 00       		.sleb128 0
 5551 0583 00000000 		.4byte	0
 5552 0587 00000000 		.4byte	0
 5553              	.LLST43:
 5554 058b 38000000 		.4byte	.LVL114
 5555 058f 3C000000 		.4byte	.LVL115
 5556 0593 0200     		.2byte	0x2
 5557 0595 3F       		.byte	0x3f
 5558 0596 9F       		.byte	0x9f
 5559 0597 00000000 		.4byte	0
 5560 059b 00000000 		.4byte	0
 5561              	.LLST44:
 5562 059f 2C000000 		.4byte	.LVL112
 5563 05a3 34000000 		.4byte	.LVL113
 5564 05a7 0100     		.2byte	0x1
 5565 05a9 50       		.byte	0x50
 5566 05aa 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 158


 5567 05ae 00000000 		.4byte	0
 5568              	.LLST45:
 5569 05b2 00000000 		.4byte	.LVL119
 5570 05b6 04000000 		.4byte	.LVL120
 5571 05ba 0100     		.2byte	0x1
 5572 05bc 50       		.byte	0x50
 5573 05bd 04000000 		.4byte	.LVL120
 5574 05c1 10000000 		.4byte	.LFE40
 5575 05c5 0400     		.2byte	0x4
 5576 05c7 F3       		.byte	0xf3
 5577 05c8 01       		.uleb128 0x1
 5578 05c9 50       		.byte	0x50
 5579 05ca 9F       		.byte	0x9f
 5580 05cb 00000000 		.4byte	0
 5581 05cf 00000000 		.4byte	0
 5582              	.LLST46:
 5583 05d3 0A000000 		.4byte	.LVL122
 5584 05d7 0E000000 		.4byte	.LVL123
 5585 05db 0200     		.2byte	0x2
 5586 05dd 31       		.byte	0x31
 5587 05de 9F       		.byte	0x9f
 5588 05df 00000000 		.4byte	0
 5589 05e3 00000000 		.4byte	0
 5590              	.LLST47:
 5591 05e7 00000000 		.4byte	.LVL126
 5592 05eb 06000000 		.4byte	.LVL127
 5593 05ef 0100     		.2byte	0x1
 5594 05f1 50       		.byte	0x50
 5595 05f2 06000000 		.4byte	.LVL127
 5596 05f6 10000000 		.4byte	.LFE47
 5597 05fa 0400     		.2byte	0x4
 5598 05fc F3       		.byte	0xf3
 5599 05fd 01       		.uleb128 0x1
 5600 05fe 50       		.byte	0x50
 5601 05ff 9F       		.byte	0x9f
 5602 0600 00000000 		.4byte	0
 5603 0604 00000000 		.4byte	0
 5604              	.LLST48:
 5605 0608 00000000 		.4byte	.LVL128
 5606 060c 04000000 		.4byte	.LVL129
 5607 0610 0100     		.2byte	0x1
 5608 0612 50       		.byte	0x50
 5609 0613 04000000 		.4byte	.LVL129
 5610 0617 0C000000 		.4byte	.LFE48
 5611 061b 0400     		.2byte	0x4
 5612 061d F3       		.byte	0xf3
 5613 061e 01       		.uleb128 0x1
 5614 061f 50       		.byte	0x50
 5615 0620 9F       		.byte	0x9f
 5616 0621 00000000 		.4byte	0
 5617 0625 00000000 		.4byte	0
 5618              	.LLST49:
 5619 0629 00000000 		.4byte	.LVL131
 5620 062d 08000000 		.4byte	.LVL132
 5621 0631 0100     		.2byte	0x1
 5622 0633 50       		.byte	0x50
 5623 0634 08000000 		.4byte	.LVL132
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 159


 5624 0638 20000000 		.4byte	.LFE51
 5625 063c 0400     		.2byte	0x4
 5626 063e F3       		.byte	0xf3
 5627 063f 01       		.uleb128 0x1
 5628 0640 50       		.byte	0x50
 5629 0641 9F       		.byte	0x9f
 5630 0642 00000000 		.4byte	0
 5631 0646 00000000 		.4byte	0
 5632              	.LLST50:
 5633 064a 0A000000 		.4byte	.LVL133
 5634 064e 12000000 		.4byte	.LVL134
 5635 0652 0100     		.2byte	0x1
 5636 0654 53       		.byte	0x53
 5637 0655 12000000 		.4byte	.LVL134
 5638 0659 20000000 		.4byte	.LFE51
 5639 065d 0100     		.2byte	0x1
 5640 065f 50       		.byte	0x50
 5641 0660 00000000 		.4byte	0
 5642 0664 00000000 		.4byte	0
 5643              	.LLST51:
 5644 0668 00000000 		.4byte	.LVL135
 5645 066c 08000000 		.4byte	.LVL136
 5646 0670 0100     		.2byte	0x1
 5647 0672 50       		.byte	0x50
 5648 0673 08000000 		.4byte	.LVL136
 5649 0677 20000000 		.4byte	.LFE52
 5650 067b 0400     		.2byte	0x4
 5651 067d F3       		.byte	0xf3
 5652 067e 01       		.uleb128 0x1
 5653 067f 50       		.byte	0x50
 5654 0680 9F       		.byte	0x9f
 5655 0681 00000000 		.4byte	0
 5656 0685 00000000 		.4byte	0
 5657              	.LLST52:
 5658 0689 0A000000 		.4byte	.LVL137
 5659 068d 12000000 		.4byte	.LVL138
 5660 0691 0100     		.2byte	0x1
 5661 0693 53       		.byte	0x53
 5662 0694 12000000 		.4byte	.LVL138
 5663 0698 20000000 		.4byte	.LFE52
 5664 069c 0100     		.2byte	0x1
 5665 069e 50       		.byte	0x50
 5666 069f 00000000 		.4byte	0
 5667 06a3 00000000 		.4byte	0
 5668              	.LLST53:
 5669 06a7 00000000 		.4byte	.LVL139
 5670 06ab 08000000 		.4byte	.LVL140
 5671 06af 0100     		.2byte	0x1
 5672 06b1 50       		.byte	0x50
 5673 06b2 08000000 		.4byte	.LVL140
 5674 06b6 20000000 		.4byte	.LFE53
 5675 06ba 0400     		.2byte	0x4
 5676 06bc F3       		.byte	0xf3
 5677 06bd 01       		.uleb128 0x1
 5678 06be 50       		.byte	0x50
 5679 06bf 9F       		.byte	0x9f
 5680 06c0 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 160


 5681 06c4 00000000 		.4byte	0
 5682              	.LLST54:
 5683 06c8 0A000000 		.4byte	.LVL141
 5684 06cc 12000000 		.4byte	.LVL142
 5685 06d0 0100     		.2byte	0x1
 5686 06d2 53       		.byte	0x53
 5687 06d3 12000000 		.4byte	.LVL142
 5688 06d7 20000000 		.4byte	.LFE53
 5689 06db 0100     		.2byte	0x1
 5690 06dd 50       		.byte	0x50
 5691 06de 00000000 		.4byte	0
 5692 06e2 00000000 		.4byte	0
 5693              	.LLST55:
 5694 06e6 00000000 		.4byte	.LVL143
 5695 06ea 06000000 		.4byte	.LVL144
 5696 06ee 0100     		.2byte	0x1
 5697 06f0 50       		.byte	0x50
 5698 06f1 06000000 		.4byte	.LVL144
 5699 06f5 08000000 		.4byte	.LVL145
 5700 06f9 0400     		.2byte	0x4
 5701 06fb F3       		.byte	0xf3
 5702 06fc 01       		.uleb128 0x1
 5703 06fd 50       		.byte	0x50
 5704 06fe 9F       		.byte	0x9f
 5705 06ff 08000000 		.4byte	.LVL145
 5706 0703 0E000000 		.4byte	.LVL146
 5707 0707 0100     		.2byte	0x1
 5708 0709 50       		.byte	0x50
 5709 070a 0E000000 		.4byte	.LVL146
 5710 070e 10000000 		.4byte	.LVL147
 5711 0712 0400     		.2byte	0x4
 5712 0714 F3       		.byte	0xf3
 5713 0715 01       		.uleb128 0x1
 5714 0716 50       		.byte	0x50
 5715 0717 9F       		.byte	0x9f
 5716 0718 10000000 		.4byte	.LVL147
 5717 071c 16000000 		.4byte	.LVL148
 5718 0720 0100     		.2byte	0x1
 5719 0722 50       		.byte	0x50
 5720 0723 16000000 		.4byte	.LVL148
 5721 0727 3C000000 		.4byte	.LFE54
 5722 072b 0400     		.2byte	0x4
 5723 072d F3       		.byte	0xf3
 5724 072e 01       		.uleb128 0x1
 5725 072f 50       		.byte	0x50
 5726 0730 9F       		.byte	0x9f
 5727 0731 00000000 		.4byte	0
 5728 0735 00000000 		.4byte	0
 5729              	.LLST56:
 5730 0739 00000000 		.4byte	.LVL143
 5731 073d 1C000000 		.4byte	.LVL149
 5732 0741 0100     		.2byte	0x1
 5733 0743 51       		.byte	0x51
 5734 0744 1C000000 		.4byte	.LVL149
 5735 0748 3C000000 		.4byte	.LFE54
 5736 074c 0400     		.2byte	0x4
 5737 074e F3       		.byte	0xf3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 161


 5738 074f 01       		.uleb128 0x1
 5739 0750 51       		.byte	0x51
 5740 0751 9F       		.byte	0x9f
 5741 0752 00000000 		.4byte	0
 5742 0756 00000000 		.4byte	0
 5743              	.LLST57:
 5744 075a 1E000000 		.4byte	.LVL150
 5745 075e 26000000 		.4byte	.LVL151
 5746 0762 0100     		.2byte	0x1
 5747 0764 53       		.byte	0x53
 5748 0765 26000000 		.4byte	.LVL151
 5749 0769 28000000 		.4byte	.LVL152
 5750 076d 0100     		.2byte	0x1
 5751 076f 51       		.byte	0x51
 5752 0770 00000000 		.4byte	0
 5753 0774 00000000 		.4byte	0
 5754              		.section	.debug_aranges,"",%progbits
 5755 0000 C4010000 		.4byte	0x1c4
 5756 0004 0200     		.2byte	0x2
 5757 0006 00000000 		.4byte	.Ldebug_info0
 5758 000a 04       		.byte	0x4
 5759 000b 00       		.byte	0
 5760 000c 0000     		.2byte	0
 5761 000e 0000     		.2byte	0
 5762 0010 00000000 		.4byte	.LFB1
 5763 0014 14000000 		.4byte	.LFE1-.LFB1
 5764 0018 00000000 		.4byte	.LFB4
 5765 001c 14000000 		.4byte	.LFE4-.LFB4
 5766 0020 00000000 		.4byte	.LFB2
 5767 0024 18000000 		.4byte	.LFE2-.LFB2
 5768 0028 00000000 		.4byte	.LFB5
 5769 002c 10000000 		.4byte	.LFE5-.LFB5
 5770 0030 00000000 		.4byte	.LFB6
 5771 0034 20000000 		.4byte	.LFE6-.LFB6
 5772 0038 00000000 		.4byte	.LFB7
 5773 003c 34000000 		.4byte	.LFE7-.LFB7
 5774 0040 00000000 		.4byte	.LFB8
 5775 0044 18000000 		.4byte	.LFE8-.LFB8
 5776 0048 00000000 		.4byte	.LFB9
 5777 004c 2C000000 		.4byte	.LFE9-.LFB9
 5778 0050 00000000 		.4byte	.LFB12
 5779 0054 20000000 		.4byte	.LFE12-.LFB12
 5780 0058 00000000 		.4byte	.LFB13
 5781 005c 10000000 		.4byte	.LFE13-.LFB13
 5782 0060 00000000 		.4byte	.LFB14
 5783 0064 0C000000 		.4byte	.LFE14-.LFB14
 5784 0068 00000000 		.4byte	.LFB15
 5785 006c 14000000 		.4byte	.LFE15-.LFB15
 5786 0070 00000000 		.4byte	.LFB16
 5787 0074 10000000 		.4byte	.LFE16-.LFB16
 5788 0078 00000000 		.4byte	.LFB17
 5789 007c 0C000000 		.4byte	.LFE17-.LFB17
 5790 0080 00000000 		.4byte	.LFB18
 5791 0084 0E000000 		.4byte	.LFE18-.LFB18
 5792 0088 00000000 		.4byte	.LFB19
 5793 008c 0C000000 		.4byte	.LFE19-.LFB19
 5794 0090 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 162


 5795 0094 10000000 		.4byte	.LFE20-.LFB20
 5796 0098 00000000 		.4byte	.LFB21
 5797 009c 10000000 		.4byte	.LFE21-.LFB21
 5798 00a0 00000000 		.4byte	.LFB22
 5799 00a4 34000000 		.4byte	.LFE22-.LFB22
 5800 00a8 00000000 		.4byte	.LFB23
 5801 00ac 20000000 		.4byte	.LFE23-.LFB23
 5802 00b0 00000000 		.4byte	.LFB24
 5803 00b4 14000000 		.4byte	.LFE24-.LFB24
 5804 00b8 00000000 		.4byte	.LFB25
 5805 00bc 18000000 		.4byte	.LFE25-.LFB25
 5806 00c0 00000000 		.4byte	.LFB26
 5807 00c4 14000000 		.4byte	.LFE26-.LFB26
 5808 00c8 00000000 		.4byte	.LFB27
 5809 00cc 14000000 		.4byte	.LFE27-.LFB27
 5810 00d0 00000000 		.4byte	.LFB28
 5811 00d4 14000000 		.4byte	.LFE28-.LFB28
 5812 00d8 00000000 		.4byte	.LFB29
 5813 00dc 04000000 		.4byte	.LFE29-.LFB29
 5814 00e0 00000000 		.4byte	.LFB30
 5815 00e4 18000000 		.4byte	.LFE30-.LFB30
 5816 00e8 00000000 		.4byte	.LFB31
 5817 00ec 2C000000 		.4byte	.LFE31-.LFB31
 5818 00f0 00000000 		.4byte	.LFB3
 5819 00f4 D4000000 		.4byte	.LFE3-.LFB3
 5820 00f8 00000000 		.4byte	.LFB10
 5821 00fc 80000000 		.4byte	.LFE10-.LFB10
 5822 0100 00000000 		.4byte	.LFB32
 5823 0104 14000000 		.4byte	.LFE32-.LFB32
 5824 0108 00000000 		.4byte	.LFB11
 5825 010c 44000000 		.4byte	.LFE11-.LFB11
 5826 0110 00000000 		.4byte	.LFB33
 5827 0114 48000000 		.4byte	.LFE33-.LFB33
 5828 0118 00000000 		.4byte	.LFB35
 5829 011c 60000000 		.4byte	.LFE35-.LFB35
 5830 0120 00000000 		.4byte	.LFB37
 5831 0124 10000000 		.4byte	.LFE37-.LFB37
 5832 0128 00000000 		.4byte	.LFB38
 5833 012c 10000000 		.4byte	.LFE38-.LFB38
 5834 0130 00000000 		.4byte	.LFB36
 5835 0134 18000000 		.4byte	.LFE36-.LFB36
 5836 0138 00000000 		.4byte	.LFB34
 5837 013c 1C000000 		.4byte	.LFE34-.LFB34
 5838 0140 00000000 		.4byte	.LFB39
 5839 0144 10000000 		.4byte	.LFE39-.LFB39
 5840 0148 00000000 		.4byte	.LFB40
 5841 014c 10000000 		.4byte	.LFE40-.LFB40
 5842 0150 00000000 		.4byte	.LFB41
 5843 0154 10000000 		.4byte	.LFE41-.LFB41
 5844 0158 00000000 		.4byte	.LFB42
 5845 015c 10000000 		.4byte	.LFE42-.LFB42
 5846 0160 00000000 		.4byte	.LFB43
 5847 0164 18000000 		.4byte	.LFE43-.LFB43
 5848 0168 00000000 		.4byte	.LFB44
 5849 016c 10000000 		.4byte	.LFE44-.LFB44
 5850 0170 00000000 		.4byte	.LFB45
 5851 0174 10000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 163


 5852 0178 00000000 		.4byte	.LFB49
 5853 017c 24000000 		.4byte	.LFE49-.LFB49
 5854 0180 00000000 		.4byte	.LFB46
 5855 0184 0C000000 		.4byte	.LFE46-.LFB46
 5856 0188 00000000 		.4byte	.LFB47
 5857 018c 10000000 		.4byte	.LFE47-.LFB47
 5858 0190 00000000 		.4byte	.LFB48
 5859 0194 0C000000 		.4byte	.LFE48-.LFB48
 5860 0198 00000000 		.4byte	.LFB50
 5861 019c 74000000 		.4byte	.LFE50-.LFB50
 5862 01a0 00000000 		.4byte	.LFB51
 5863 01a4 20000000 		.4byte	.LFE51-.LFB51
 5864 01a8 00000000 		.4byte	.LFB52
 5865 01ac 20000000 		.4byte	.LFE52-.LFB52
 5866 01b0 00000000 		.4byte	.LFB53
 5867 01b4 20000000 		.4byte	.LFE53-.LFB53
 5868 01b8 00000000 		.4byte	.LFB54
 5869 01bc 3C000000 		.4byte	.LFE54-.LFB54
 5870 01c0 00000000 		.4byte	0
 5871 01c4 00000000 		.4byte	0
 5872              		.section	.debug_ranges,"",%progbits
 5873              	.Ldebug_ranges0:
 5874 0000 2C000000 		.4byte	.LBB18
 5875 0004 2E000000 		.4byte	.LBE18
 5876 0008 2E000000 		.4byte	.LBB21
 5877 000c 30000000 		.4byte	.LBE21
 5878 0010 00000000 		.4byte	0
 5879 0014 00000000 		.4byte	0
 5880 0018 04000000 		.4byte	.LBB34
 5881 001c 06000000 		.4byte	.LBE34
 5882 0020 18000000 		.4byte	.LBB47
 5883 0024 1E000000 		.4byte	.LBE47
 5884 0028 20000000 		.4byte	.LBB48
 5885 002c 22000000 		.4byte	.LBE48
 5886 0030 00000000 		.4byte	0
 5887 0034 00000000 		.4byte	0
 5888 0038 08000000 		.4byte	.LBB41
 5889 003c 0A000000 		.4byte	.LBE41
 5890 0040 14000000 		.4byte	.LBB45
 5891 0044 16000000 		.4byte	.LBE45
 5892 0048 16000000 		.4byte	.LBB46
 5893 004c 18000000 		.4byte	.LBE46
 5894 0050 00000000 		.4byte	0
 5895 0054 00000000 		.4byte	0
 5896 0058 2C000000 		.4byte	.LBB49
 5897 005c 2E000000 		.4byte	.LBE49
 5898 0060 30000000 		.4byte	.LBB56
 5899 0064 32000000 		.4byte	.LBE56
 5900 0068 38000000 		.4byte	.LBB60
 5901 006c 3C000000 		.4byte	.LBE60
 5902 0070 00000000 		.4byte	0
 5903 0074 00000000 		.4byte	0
 5904 0078 2E000000 		.4byte	.LBB53
 5905 007c 30000000 		.4byte	.LBE53
 5906 0080 32000000 		.4byte	.LBB57
 5907 0084 34000000 		.4byte	.LBE57
 5908 0088 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 164


 5909 008c 00000000 		.4byte	0
 5910 0090 04000000 		.4byte	.LBB63
 5911 0094 06000000 		.4byte	.LBE63
 5912 0098 0A000000 		.4byte	.LBB66
 5913 009c 0E000000 		.4byte	.LBE66
 5914 00a0 00000000 		.4byte	0
 5915 00a4 00000000 		.4byte	0
 5916 00a8 00000000 		.4byte	.LFB1
 5917 00ac 14000000 		.4byte	.LFE1
 5918 00b0 00000000 		.4byte	.LFB4
 5919 00b4 14000000 		.4byte	.LFE4
 5920 00b8 00000000 		.4byte	.LFB2
 5921 00bc 18000000 		.4byte	.LFE2
 5922 00c0 00000000 		.4byte	.LFB5
 5923 00c4 10000000 		.4byte	.LFE5
 5924 00c8 00000000 		.4byte	.LFB6
 5925 00cc 20000000 		.4byte	.LFE6
 5926 00d0 00000000 		.4byte	.LFB7
 5927 00d4 34000000 		.4byte	.LFE7
 5928 00d8 00000000 		.4byte	.LFB8
 5929 00dc 18000000 		.4byte	.LFE8
 5930 00e0 00000000 		.4byte	.LFB9
 5931 00e4 2C000000 		.4byte	.LFE9
 5932 00e8 00000000 		.4byte	.LFB12
 5933 00ec 20000000 		.4byte	.LFE12
 5934 00f0 00000000 		.4byte	.LFB13
 5935 00f4 10000000 		.4byte	.LFE13
 5936 00f8 00000000 		.4byte	.LFB14
 5937 00fc 0C000000 		.4byte	.LFE14
 5938 0100 00000000 		.4byte	.LFB15
 5939 0104 14000000 		.4byte	.LFE15
 5940 0108 00000000 		.4byte	.LFB16
 5941 010c 10000000 		.4byte	.LFE16
 5942 0110 00000000 		.4byte	.LFB17
 5943 0114 0C000000 		.4byte	.LFE17
 5944 0118 00000000 		.4byte	.LFB18
 5945 011c 0E000000 		.4byte	.LFE18
 5946 0120 00000000 		.4byte	.LFB19
 5947 0124 0C000000 		.4byte	.LFE19
 5948 0128 00000000 		.4byte	.LFB20
 5949 012c 10000000 		.4byte	.LFE20
 5950 0130 00000000 		.4byte	.LFB21
 5951 0134 10000000 		.4byte	.LFE21
 5952 0138 00000000 		.4byte	.LFB22
 5953 013c 34000000 		.4byte	.LFE22
 5954 0140 00000000 		.4byte	.LFB23
 5955 0144 20000000 		.4byte	.LFE23
 5956 0148 00000000 		.4byte	.LFB24
 5957 014c 14000000 		.4byte	.LFE24
 5958 0150 00000000 		.4byte	.LFB25
 5959 0154 18000000 		.4byte	.LFE25
 5960 0158 00000000 		.4byte	.LFB26
 5961 015c 14000000 		.4byte	.LFE26
 5962 0160 00000000 		.4byte	.LFB27
 5963 0164 14000000 		.4byte	.LFE27
 5964 0168 00000000 		.4byte	.LFB28
 5965 016c 14000000 		.4byte	.LFE28
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 165


 5966 0170 00000000 		.4byte	.LFB29
 5967 0174 04000000 		.4byte	.LFE29
 5968 0178 00000000 		.4byte	.LFB30
 5969 017c 18000000 		.4byte	.LFE30
 5970 0180 00000000 		.4byte	.LFB31
 5971 0184 2C000000 		.4byte	.LFE31
 5972 0188 00000000 		.4byte	.LFB3
 5973 018c D4000000 		.4byte	.LFE3
 5974 0190 00000000 		.4byte	.LFB10
 5975 0194 80000000 		.4byte	.LFE10
 5976 0198 00000000 		.4byte	.LFB32
 5977 019c 14000000 		.4byte	.LFE32
 5978 01a0 00000000 		.4byte	.LFB11
 5979 01a4 44000000 		.4byte	.LFE11
 5980 01a8 00000000 		.4byte	.LFB33
 5981 01ac 48000000 		.4byte	.LFE33
 5982 01b0 00000000 		.4byte	.LFB35
 5983 01b4 60000000 		.4byte	.LFE35
 5984 01b8 00000000 		.4byte	.LFB37
 5985 01bc 10000000 		.4byte	.LFE37
 5986 01c0 00000000 		.4byte	.LFB38
 5987 01c4 10000000 		.4byte	.LFE38
 5988 01c8 00000000 		.4byte	.LFB36
 5989 01cc 18000000 		.4byte	.LFE36
 5990 01d0 00000000 		.4byte	.LFB34
 5991 01d4 1C000000 		.4byte	.LFE34
 5992 01d8 00000000 		.4byte	.LFB39
 5993 01dc 10000000 		.4byte	.LFE39
 5994 01e0 00000000 		.4byte	.LFB40
 5995 01e4 10000000 		.4byte	.LFE40
 5996 01e8 00000000 		.4byte	.LFB41
 5997 01ec 10000000 		.4byte	.LFE41
 5998 01f0 00000000 		.4byte	.LFB42
 5999 01f4 10000000 		.4byte	.LFE42
 6000 01f8 00000000 		.4byte	.LFB43
 6001 01fc 18000000 		.4byte	.LFE43
 6002 0200 00000000 		.4byte	.LFB44
 6003 0204 10000000 		.4byte	.LFE44
 6004 0208 00000000 		.4byte	.LFB45
 6005 020c 10000000 		.4byte	.LFE45
 6006 0210 00000000 		.4byte	.LFB49
 6007 0214 24000000 		.4byte	.LFE49
 6008 0218 00000000 		.4byte	.LFB46
 6009 021c 0C000000 		.4byte	.LFE46
 6010 0220 00000000 		.4byte	.LFB47
 6011 0224 10000000 		.4byte	.LFE47
 6012 0228 00000000 		.4byte	.LFB48
 6013 022c 0C000000 		.4byte	.LFE48
 6014 0230 00000000 		.4byte	.LFB50
 6015 0234 74000000 		.4byte	.LFE50
 6016 0238 00000000 		.4byte	.LFB51
 6017 023c 20000000 		.4byte	.LFE51
 6018 0240 00000000 		.4byte	.LFB52
 6019 0244 20000000 		.4byte	.LFE52
 6020 0248 00000000 		.4byte	.LFB53
 6021 024c 20000000 		.4byte	.LFE53
 6022 0250 00000000 		.4byte	.LFB54
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 166


 6023 0254 3C000000 		.4byte	.LFE54
 6024 0258 00000000 		.4byte	0
 6025 025c 00000000 		.4byte	0
 6026              		.section	.debug_line,"",%progbits
 6027              	.Ldebug_line0:
 6028 0000 BF050000 		.section	.debug_str,"MS",%progbits,1
 6028      02006700 
 6028      00000201 
 6028      FB0E0D00 
 6028      01010101 
 6029              	.LASF37:
 6030 0000 72616D56 		.ascii	"ramVectorTable\000"
 6030      6563746F 
 6030      72546162 
 6030      6C6500
 6031              	.LASF10:
 6032 000f 75696E74 		.ascii	"uint16\000"
 6032      313600
 6033              	.LASF57:
 6034 0016 696E7453 		.ascii	"intState\000"
 6034      74617465 
 6034      00
 6035              	.LASF41:
 6036 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6036      73436C6B 
 6036      57726974 
 6036      65486663 
 6036      6C6B4469 
 6037              	.LASF114:
 6038 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 6038      73436C6B 
 6038      50756D70 
 6038      436F6E66 
 6038      696700
 6039              	.LASF36:
 6040 004b 6F6C6449 		.ascii	"oldIsr\000"
 6040      737200
 6041              	.LASF96:
 6042 0052 72657456 		.ascii	"retVal\000"
 6042      616C00
 6043              	.LASF56:
 6044 0059 43794469 		.ascii	"CyDisableInts\000"
 6044      7361626C 
 6044      65496E74 
 6044      7300
 6045              	.LASF7:
 6046 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 6046      206C6F6E 
 6046      6720756E 
 6046      7369676E 
 6046      65642069 
 6047              	.LASF76:
 6048 007e 70617261 		.ascii	"parameters\000"
 6048      6D657465 
 6048      727300
 6049              	.LASF58:
 6050 0089 4379456E 		.ascii	"CyEnableInts\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 167


 6050      61626C65 
 6050      496E7473 
 6050      00
 6051              	.LASF105:
 6052 0096 696E7465 		.ascii	"interfaceNumber\000"
 6052      72666163 
 6052      654E756D 
 6052      62657200 
 6053              	.LASF72:
 6054 00a6 4379536F 		.ascii	"CySoftwareReset\000"
 6054      66747761 
 6054      72655265 
 6054      73657400 
 6055              	.LASF86:
 6056 00b6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6056      73546963 
 6056      6B456E61 
 6056      626C6549 
 6056      6E746572 
 6057              	.LASF67:
 6058 00cf 4379496E 		.ascii	"CyIntGetState\000"
 6058      74476574 
 6058      53746174 
 6058      6500
 6059              	.LASF6:
 6060 00dd 6C6F6E67 		.ascii	"long long int\000"
 6060      206C6F6E 
 6060      6720696E 
 6060      7400
 6061              	.LASF0:
 6062 00eb 7369676E 		.ascii	"signed char\000"
 6062      65642063 
 6062      68617200 
 6063              	.LASF21:
 6064 00f7 66726571 		.ascii	"freq\000"
 6064      00
 6065              	.LASF83:
 6066 00fc 43794465 		.ascii	"CyDelayFreq\000"
 6066      6C617946 
 6066      72657100 
 6067              	.LASF22:
 6068 0108 696E7465 		.ascii	"interruptState\000"
 6068      72727570 
 6068      74537461 
 6068      746500
 6069              	.LASF24:
 6070 0117 6C664C69 		.ascii	"lfLimit\000"
 6070      6D697400 
 6071              	.LASF90:
 6072 011f 43795379 		.ascii	"CySysTickGetReload\000"
 6072      73546963 
 6072      6B476574 
 6072      52656C6F 
 6072      616400
 6073              	.LASF50:
 6074 0132 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6074      73436C6B 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 168


 6074      496D6F47 
 6074      65745763 
 6074      6F4C6F63 
 6075              	.LASF78:
 6076 0148 77636F4C 		.ascii	"wcoLock\000"
 6076      6F636B00 
 6077              	.LASF4:
 6078 0150 6C6F6E67 		.ascii	"long int\000"
 6078      20696E74 
 6078      00
 6079              	.LASF68:
 6080 0159 4379496E 		.ascii	"CyIntDisable\000"
 6080      74446973 
 6080      61626C65 
 6080      00
 6081              	.LASF77:
 6082 0166 72656756 		.ascii	"regValues\000"
 6082      616C7565 
 6082      7300
 6083              	.LASF43:
 6084 0170 43795379 		.ascii	"CySysEnablePumpClock\000"
 6084      73456E61 
 6084      626C6550 
 6084      756D7043 
 6084      6C6F636B 
 6085              	.LASF9:
 6086 0185 75696E74 		.ascii	"uint8\000"
 6086      3800
 6087              	.LASF108:
 6088 018b 63796465 		.ascii	"cydelayFreqKhz\000"
 6088      6C617946 
 6088      7265714B 
 6088      687A00
 6089              	.LASF45:
 6090 019a 656E6162 		.ascii	"enable\000"
 6090      6C6500
 6091              	.LASF13:
 6092 01a1 646F7562 		.ascii	"double\000"
 6092      6C6500
 6093              	.LASF65:
 6094 01a8 73686966 		.ascii	"shift\000"
 6094      7400
 6095              	.LASF31:
 6096 01ae 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6096      734C7664 
 6096      436C6561 
 6096      72496E74 
 6096      65727275 
 6097              	.LASF11:
 6098 01c5 75696E74 		.ascii	"uint32\000"
 6098      333200
 6099              	.LASF59:
 6100 01cc 6D61736B 		.ascii	"mask\000"
 6100      00
 6101              	.LASF52:
 6102 01d1 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6102      73436C6B 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 169


 6102      47657453 
 6102      7973636C 
 6102      6B536F75 
 6103              	.LASF26:
 6104 01e9 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6104      73436C6B 
 6104      496D6F45 
 6104      6E61626C 
 6104      6557636F 
 6105              	.LASF66:
 6106 0202 4379496E 		.ascii	"CyIntGetPriority\000"
 6106      74476574 
 6106      5072696F 
 6106      72697479 
 6106      00
 6107              	.LASF110:
 6108 0213 63796465 		.ascii	"cydelay32kMs\000"
 6108      6C617933 
 6108      326B4D73 
 6108      00
 6109              	.LASF84:
 6110 0220 43795379 		.ascii	"CySysTickInit\000"
 6110      73546963 
 6110      6B496E69 
 6110      7400
 6111              	.LASF34:
 6112 022e 76616C75 		.ascii	"value\000"
 6112      6500
 6113              	.LASF29:
 6114 0234 636C6F63 		.ascii	"clockSource\000"
 6114      6B536F75 
 6114      72636500 
 6115              	.LASF98:
 6116 0240 43794765 		.ascii	"CyGetUniqueId\000"
 6116      74556E69 
 6116      71756549 
 6116      6400
 6117              	.LASF93:
 6118 024e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6118      73546963 
 6118      6B476574 
 6118      436F756E 
 6118      74466C61 
 6119              	.LASF8:
 6120 0264 756E7369 		.ascii	"unsigned int\000"
 6120      676E6564 
 6120      20696E74 
 6120      00
 6121              	.LASF32:
 6122 0271 43795379 		.ascii	"CySysTickClear\000"
 6122      73546963 
 6122      6B436C65 
 6122      617200
 6123              	.LASF5:
 6124 0280 6C6F6E67 		.ascii	"long unsigned int\000"
 6124      20756E73 
 6124      69676E65 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 170


 6124      6420696E 
 6124      7400
 6125              	.LASF51:
 6126 0292 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6126      734C7664 
 6126      47657449 
 6126      6E746572 
 6126      72757074 
 6127              	.LASF40:
 6128 02ad 43795379 		.ascii	"CySysClkImoStop\000"
 6128      73436C6B 
 6128      496D6F53 
 6128      746F7000 
 6129              	.LASF115:
 6130 02bd 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6130      74657243 
 6130      72697469 
 6130      63616C53 
 6130      65637469 
 6131              	.LASF69:
 6132 02d4 4379496E 		.ascii	"CyIntSetPending\000"
 6132      74536574 
 6132      50656E64 
 6132      696E6700 
 6133              	.LASF97:
 6134 02e4 43795379 		.ascii	"CySysTickGetCallback\000"
 6134      73546963 
 6134      6B476574 
 6134      43616C6C 
 6134      6261636B 
 6135              	.LASF53:
 6136 02f9 43795379 		.ascii	"CySysGetResetReason\000"
 6136      73476574 
 6136      52657365 
 6136      74526561 
 6136      736F6E00 
 6137              	.LASF3:
 6138 030d 73686F72 		.ascii	"short unsigned int\000"
 6138      7420756E 
 6138      7369676E 
 6138      65642069 
 6138      6E7400
 6139              	.LASF23:
 6140 0320 72656754 		.ascii	"regTmp\000"
 6140      6D7000
 6141              	.LASF27:
 6142 0327 43795379 		.ascii	"CySysTickSetClockSource\000"
 6142      73546963 
 6142      6B536574 
 6142      436C6F63 
 6142      6B536F75 
 6143              	.LASF61:
 6144 033f 4379496E 		.ascii	"CyIntSetVector\000"
 6144      74536574 
 6144      56656374 
 6144      6F7200
 6145              	.LASF30:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 171


 6146 034e 6E756D62 		.ascii	"number\000"
 6146      657200
 6147              	.LASF64:
 6148 0355 7072696F 		.ascii	"priority\000"
 6148      72697479 
 6148      00
 6149              	.LASF75:
 6150 035e 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6150      73436C6B 
 6150      57726974 
 6150      65496D6F 
 6150      46726571 
 6151              	.LASF102:
 6152 0373 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6152      73536574 
 6152      466C6173 
 6152      68416363 
 6152      65737341 
 6153              	.LASF122:
 6154 0392 5A3A5C47 		.ascii	"Z:\\Git\\WA101\\ww101-shield\\firmware\\TestProgram"
 6154      69745C57 
 6154      41313031 
 6154      5C777731 
 6154      30312D73 
 6155 03c0 344D2E63 		.ascii	"4M.cydsn\000"
 6155      7964736E 
 6155      00
 6156              	.LASF124:
 6157 03c9 4379496E 		.ascii	"CyIntSetSysVector\000"
 6157      74536574 
 6157      53797356 
 6157      6563746F 
 6157      7200
 6158              	.LASF39:
 6159 03db 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6159      73436C6B 
 6159      496D6F44 
 6159      69736162 
 6159      6C655763 
 6160              	.LASF16:
 6161 03f5 72656733 		.ascii	"reg32\000"
 6161      3200
 6162              	.LASF88:
 6163 03fb 43795379 		.ascii	"CySysTickStart\000"
 6163      73546963 
 6163      6B537461 
 6163      727400
 6164              	.LASF55:
 6165 040a 72657475 		.ascii	"returnStatus\000"
 6165      726E5374 
 6165      61747573 
 6165      00
 6166              	.LASF101:
 6167 0417 736F7572 		.ascii	"source\000"
 6167      636500
 6168              	.LASF19:
 6169 041e 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 172


 6169      74797065 
 6169      00
 6170              	.LASF111:
 6171 0427 43795379 		.ascii	"CySysTickInitVar\000"
 6171      73546963 
 6171      6B496E69 
 6171      74566172 
 6171      00
 6172              	.LASF104:
 6173 0438 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6173      73536574 
 6173      50657269 
 6173      70686572 
 6173      616C4163 
 6174              	.LASF70:
 6175 045c 4379496E 		.ascii	"CyIntClearPending\000"
 6175      74436C65 
 6175      61725065 
 6175      6E64696E 
 6175      6700
 6176              	.LASF18:
 6177 046e 6C6F6E67 		.ascii	"long double\000"
 6177      20646F75 
 6177      626C6500 
 6178              	.LASF35:
 6179 047a 61646472 		.ascii	"address\000"
 6179      65737300 
 6180              	.LASF120:
 6181 0482 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6181      43313120 
 6181      352E342E 
 6181      31203230 
 6181      31363036 
 6182 04b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6182      20726576 
 6182      6973696F 
 6182      6E203233 
 6182      37373135 
 6183 04e8 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 6183      66756E63 
 6183      74696F6E 
 6183      2D736563 
 6183      74696F6E 
 6184              	.LASF46:
 6185 0510 73797363 		.ascii	"sysclkSource\000"
 6185      6C6B536F 
 6185      75726365 
 6185      00
 6186              	.LASF95:
 6187 051d 66756E63 		.ascii	"function\000"
 6187      74696F6E 
 6187      00
 6188              	.LASF112:
 6189 0526 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6189      6F467265 
 6189      714D687A 
 6189      32526567 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 173


 6189      00
 6190              	.LASF91:
 6191 0537 43795379 		.ascii	"CySysTickGetValue\000"
 6191      73546963 
 6191      6B476574 
 6191      56616C75 
 6191      6500
 6192              	.LASF107:
 6193 0549 63796465 		.ascii	"cydelayFreqHz\000"
 6193      6C617946 
 6193      72657148 
 6193      7A00
 6194              	.LASF63:
 6195 0557 4379496E 		.ascii	"CyIntSetPriority\000"
 6195      74536574 
 6195      5072696F 
 6195      72697479 
 6195      00
 6196              	.LASF12:
 6197 0568 666C6F61 		.ascii	"float\000"
 6197      7400
 6198              	.LASF116:
 6199 056e 43794578 		.ascii	"CyExitCriticalSection\000"
 6199      69744372 
 6199      69746963 
 6199      616C5365 
 6199      6374696F 
 6200              	.LASF81:
 6201 0584 43795379 		.ascii	"CySysLvdEnable\000"
 6201      734C7664 
 6201      456E6162 
 6201      6C6500
 6202              	.LASF20:
 6203 0593 63795379 		.ascii	"cySysTickCallback\000"
 6203      73546963 
 6203      6B43616C 
 6203      6C626163 
 6203      6B00
 6204              	.LASF62:
 6205 05a5 4379496E 		.ascii	"CyIntGetVector\000"
 6205      74476574 
 6205      56656374 
 6205      6F7200
 6206              	.LASF74:
 6207 05b4 6D696C6C 		.ascii	"milliseconds\000"
 6207      69736563 
 6207      6F6E6473 
 6207      00
 6208              	.LASF117:
 6209 05c1 43794465 		.ascii	"CyDelayCycles\000"
 6209      6C617943 
 6209      79636C65 
 6209      7300
 6210              	.LASF15:
 6211 05cf 72656738 		.ascii	"reg8\000"
 6211      00
 6212              	.LASF82:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 174


 6213 05d4 74687265 		.ascii	"threshold\000"
 6213      73686F6C 
 6213      6400
 6214              	.LASF71:
 6215 05de 43794861 		.ascii	"CyHalt\000"
 6215      6C7400
 6216              	.LASF100:
 6217 05e5 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6217      73536574 
 6217      52616D41 
 6217      63636573 
 6217      73417262 
 6218              	.LASF1:
 6219 0602 756E7369 		.ascii	"unsigned char\000"
 6219      676E6564 
 6219      20636861 
 6219      7200
 6220              	.LASF54:
 6221 0610 72656173 		.ascii	"reason\000"
 6221      6F6E00
 6222              	.LASF2:
 6223 0617 73686F72 		.ascii	"short int\000"
 6223      7420696E 
 6223      7400
 6224              	.LASF28:
 6225 0621 4379496E 		.ascii	"CyIntEnable\000"
 6225      74456E61 
 6225      626C6500 
 6226              	.LASF60:
 6227 062d 4379496E 		.ascii	"CyIntGetSysVector\000"
 6227      74476574 
 6227      53797356 
 6227      6563746F 
 6227      7200
 6228              	.LASF44:
 6229 063f 636C6B53 		.ascii	"clkSelect\000"
 6229      656C6563 
 6229      7400
 6230              	.LASF79:
 6231 0649 43794465 		.ascii	"CyDelayUs\000"
 6231      6C617955 
 6231      7300
 6232              	.LASF123:
 6233 0653 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6233      73546963 
 6233      6B536572 
 6233      76696365 
 6233      43616C6C 
 6234              	.LASF14:
 6235 066d 63686172 		.ascii	"char\000"
 6235      00
 6236              	.LASF113:
 6237 0672 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 6237      6F467265 
 6237      714D687A 
 6237      3244706C 
 6237      6C4F6666 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 175


 6238              	.LASF17:
 6239 068a 63796973 		.ascii	"cyisraddress\000"
 6239      72616464 
 6239      72657373 
 6239      00
 6240              	.LASF87:
 6241 0697 43795379 		.ascii	"CySysTickEnable\000"
 6241      73546963 
 6241      6B456E61 
 6241      626C6500 
 6242              	.LASF47:
 6243 06a7 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6243      73436C6B 
 6243      57726974 
 6243      65537973 
 6243      636C6B44 
 6244              	.LASF94:
 6245 06be 43795379 		.ascii	"CySysTickSetCallback\000"
 6245      73546963 
 6245      6B536574 
 6245      43616C6C 
 6245      6261636B 
 6246              	.LASF106:
 6247 06d3 43795379 		.ascii	"CySysTickCallbacks\000"
 6247      73546963 
 6247      6B43616C 
 6247      6C626163 
 6247      6B7300
 6248              	.LASF99:
 6249 06e6 756E6971 		.ascii	"uniqueId\000"
 6249      75654964 
 6249      00
 6250              	.LASF25:
 6251 06ef 666C6173 		.ascii	"flashCtlReg\000"
 6251      6843746C 
 6251      52656700 
 6252              	.LASF73:
 6253 06fb 43794465 		.ascii	"CyDelay\000"
 6253      6C617900 
 6254              	.LASF92:
 6255 0703 43795379 		.ascii	"CySysTickGetClockSource\000"
 6255      73546963 
 6255      6B476574 
 6255      436C6F63 
 6255      6B536F75 
 6256              	.LASF89:
 6257 071b 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6257      73546963 
 6257      6B446973 
 6257      61626C65 
 6257      496E7465 
 6258              	.LASF49:
 6259 0735 43795379 		.ascii	"CySysLvdDisable\000"
 6259      734C7664 
 6259      44697361 
 6259      626C6500 
 6260              	.LASF109:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 176


 6261 0745 63796465 		.ascii	"cydelayFreqMhz\000"
 6261      6C617946 
 6261      7265714D 
 6261      687A00
 6262              	.LASF119:
 6263 0754 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6263      73436C6B 
 6263      57636F45 
 6263      6E61626C 
 6263      656400
 6264              	.LASF103:
 6265 0767 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6265      73536574 
 6265      446D6163 
 6265      41636365 
 6265      73734172 
 6266              	.LASF85:
 6267 0785 43795379 		.ascii	"CySysTickStop\000"
 6267      73546963 
 6267      6B53746F 
 6267      7000
 6268              	.LASF48:
 6269 0793 64697669 		.ascii	"divider\000"
 6269      64657200 
 6270              	.LASF38:
 6271 079b 43795379 		.ascii	"CySysClkImoStart\000"
 6271      73436C6B 
 6271      496D6F53 
 6271      74617274 
 6271      00
 6272              	.LASF118:
 6273 07ac 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6273      73466C61 
 6273      73685365 
 6273      74576169 
 6273      74437963 
 6274              	.LASF121:
 6275 07c4 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6275      72617465 
 6275      645F536F 
 6275      75726365 
 6275      5C50536F 
 6276              	.LASF80:
 6277 07e3 6D696372 		.ascii	"microseconds\000"
 6277      6F736563 
 6277      6F6E6473 
 6277      00
 6278              	.LASF42:
 6279 07f0 746D7052 		.ascii	"tmpReg\000"
 6279      656700
 6280              	.LASF33:
 6281 07f7 43795379 		.ascii	"CySysTickSetReload\000"
 6281      73546963 
 6281      6B536574 
 6281      52656C6F 
 6281      616400
 6282              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccpiQIHU.s 			page 177


