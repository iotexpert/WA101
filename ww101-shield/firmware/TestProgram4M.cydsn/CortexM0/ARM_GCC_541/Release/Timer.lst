ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer_Init,"ax",%progbits
  20              		.align	1
  21              		.global	Timer_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	Timer_Init, %function
  25              	Timer_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\Timer.c"
   1:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer.c **** * File Name: Timer.c
   3:Generated_Source\PSoC4/Timer.c **** * Version 2.10
   4:Generated_Source\PSoC4/Timer.c **** *
   5:Generated_Source\PSoC4/Timer.c **** * Description:
   6:Generated_Source\PSoC4/Timer.c **** *  This file provides the source code to the API for the Timer
   7:Generated_Source\PSoC4/Timer.c **** *  component
   8:Generated_Source\PSoC4/Timer.c **** *
   9:Generated_Source\PSoC4/Timer.c **** * Note:
  10:Generated_Source\PSoC4/Timer.c **** *  None
  11:Generated_Source\PSoC4/Timer.c **** *
  12:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Timer.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Timer.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Timer.c **** 
  19:Generated_Source\PSoC4/Timer.c **** #include "Timer.h"
  20:Generated_Source\PSoC4/Timer.c **** 
  21:Generated_Source\PSoC4/Timer.c **** uint8 Timer_initVar = 0u;
  22:Generated_Source\PSoC4/Timer.c **** 
  23:Generated_Source\PSoC4/Timer.c **** 
  24:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Init
  26:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Timer.c **** *
  28:Generated_Source\PSoC4/Timer.c **** * Summary:
  29:Generated_Source\PSoC4/Timer.c **** *  Initialize/Restore default Timer configuration.
  30:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 2


  31:Generated_Source\PSoC4/Timer.c **** * Parameters:
  32:Generated_Source\PSoC4/Timer.c **** *  None
  33:Generated_Source\PSoC4/Timer.c **** *
  34:Generated_Source\PSoC4/Timer.c **** * Return:
  35:Generated_Source\PSoC4/Timer.c **** *  None
  36:Generated_Source\PSoC4/Timer.c **** *
  37:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/Timer.c **** void Timer_Init(void)
  39:Generated_Source\PSoC4/Timer.c **** {
  28              		.loc 1 39 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  40:Generated_Source\PSoC4/Timer.c **** 
  41:Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
  43:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/Timer.c ****         
  45:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/Timer.c **** 
  48:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/Timer.c ****         
  51:Generated_Source\PSoC4/Timer.c ****          /* Set other values */
  52:Generated_Source\PSoC4/Timer.c ****         Timer_SetCounterMode(Timer_COUNT_DOWN);
  53:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCounter(Timer_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
  56:Generated_Source\PSoC4/Timer.c **** 
  57:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
  58:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_TIMER_BASE_CONFIG;
  33              		.loc 1 58 0
  34 0000 084A     		ldr	r2, .L2
  35 0002 094B     		ldr	r3, .L2+4
  59:Generated_Source\PSoC4/Timer.c ****         
  60:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/Timer.c ****     
  63:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/Timer.c ****         
  66:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/Timer.c **** 
  69:Generated_Source\PSoC4/Timer.c ****         #if (Timer__COMPARE == Timer_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompare(Timer_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/Timer.c **** 
  72:Generated_Source\PSoC4/Timer.c ****             #if (1u == Timer_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/Timer.c ****                 Timer_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCompareBuf(Timer_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/Timer.c ****             #endif  /* (1u == Timer_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__COMPARE == Timer_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/Timer.c **** 
  78:Generated_Source\PSoC4/Timer.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/Timer.c ****         #if (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 3


  80:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(1u);
  81:Generated_Source\PSoC4/Timer.c ****         #elif(Timer__COUNT_DOWN == Timer_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/Timer.c ****         #else
  84:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(0u);
  85:Generated_Source\PSoC4/Timer.c ****         #endif /* (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
  87:Generated_Source\PSoC4/Timer.c **** 
  88:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
  89:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/Timer.c **** 
  91:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
  92:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/Timer.c ****         #else
  95:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_ALIGN | Timer_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/Timer.c ****             
  97:Generated_Source\PSoC4/Timer.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/Timer.c ****             #if (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(1u);
 100:Generated_Source\PSoC4/Timer.c ****             #elif (Timer__RIGHT == Timer_PWM_ALIGN)
 101:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(Timer_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/Timer.c ****             #else 
 103:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(0u);
 104:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 106:Generated_Source\PSoC4/Timer.c **** 
 107:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_DT == Timer_PWM_MODE)
 108:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_DT == Timer_PWM_MODE) */
 110:Generated_Source\PSoC4/Timer.c **** 
 111:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM == Timer_PWM_MODE)
 112:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM == Timer_PWM_MODE) */
 114:Generated_Source\PSoC4/Timer.c **** 
 115:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/Timer.c ****     
 118:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/Timer.c **** 
 121:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
 123:Generated_Source\PSoC4/Timer.c ****             Timer_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/Timer.c ****                     (Timer_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/Timer.c ****                     Timer_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/Timer.c ****                     Timer_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/Timer.c ****         #else
 128:Generated_Source\PSoC4/Timer.c ****             #if (Timer__LEFT == Timer_PWM_ALIGN)
 129:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_LEFT == Timer_PWM_ALIGN) */
 131:Generated_Source\PSoC4/Timer.c **** 
 132:Generated_Source\PSoC4/Timer.c ****             #if (Timer__RIGHT == Timer_PWM_ALIGN)
 133:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_RIGHT == Timer_PWM_ALIGN) */
 135:Generated_Source\PSoC4/Timer.c **** 
 136:Generated_Source\PSoC4/Timer.c ****             #if (Timer__CENTER == Timer_PWM_ALIGN)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 4


 137:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_CENTER == Timer_PWM_ALIGN) */
 139:Generated_Source\PSoC4/Timer.c **** 
 140:Generated_Source\PSoC4/Timer.c ****             #if (Timer__ASYMMETRIC == Timer_PWM_ALIGN)
 141:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer__ASYMMETRIC == Timer_PWM_ALIGN) */
 143:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 144:Generated_Source\PSoC4/Timer.c **** 
 145:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCompare(Timer_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/Timer.c **** 
 149:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/Timer.c ****             Timer_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompareBuf(Timer_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/Timer.c **** 
 154:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/Timer.c ****             Timer_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/Timer.c ****             Timer_WritePeriodBuf(Timer_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 159:Generated_Source\PSoC4/Timer.c ****     
 160:Generated_Source\PSoC4/Timer.c **** }
  36              		.loc 1 160 0
  37              		@ sp needed
  58:Generated_Source\PSoC4/Timer.c ****         
  38              		.loc 1 58 0
  39 0004 1A60     		str	r2, [r3]
  61:Generated_Source\PSoC4/Timer.c ****     
  40              		.loc 1 61 0
  41 0006 8E22     		movs	r2, #142
  42 0008 084B     		ldr	r3, .L2+8
  43 000a 5200     		lsls	r2, r2, #1
  44 000c 1A60     		str	r2, [r3]
  45              	.LVL0:
  46              	.LBB8:
  47              	.LBB9:
 161:Generated_Source\PSoC4/Timer.c **** 
 162:Generated_Source\PSoC4/Timer.c **** 
 163:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Enable
 165:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 166:Generated_Source\PSoC4/Timer.c **** *
 167:Generated_Source\PSoC4/Timer.c **** * Summary:
 168:Generated_Source\PSoC4/Timer.c **** *  Enables the Timer.
 169:Generated_Source\PSoC4/Timer.c **** *
 170:Generated_Source\PSoC4/Timer.c **** * Parameters:
 171:Generated_Source\PSoC4/Timer.c **** *  None
 172:Generated_Source\PSoC4/Timer.c **** *
 173:Generated_Source\PSoC4/Timer.c **** * Return:
 174:Generated_Source\PSoC4/Timer.c **** *  None
 175:Generated_Source\PSoC4/Timer.c **** *
 176:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/Timer.c **** void Timer_Enable(void)
 178:Generated_Source\PSoC4/Timer.c **** {
 179:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 5


 180:Generated_Source\PSoC4/Timer.c **** 
 181:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 183:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/Timer.c **** 
 185:Generated_Source\PSoC4/Timer.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 187:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 189:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__PWM_SEL == Timer_CONFIG) */
 191:Generated_Source\PSoC4/Timer.c **** 
 192:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 193:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 195:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__TIMER == Timer_CONFIG) */
 197:Generated_Source\PSoC4/Timer.c ****     
 198:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
 199:Generated_Source\PSoC4/Timer.c ****         #if (0u != Timer_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_RELOAD);
 201:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u != Timer_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
 203:Generated_Source\PSoC4/Timer.c **** }
 204:Generated_Source\PSoC4/Timer.c **** 
 205:Generated_Source\PSoC4/Timer.c **** 
 206:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Start
 208:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 209:Generated_Source\PSoC4/Timer.c **** *
 210:Generated_Source\PSoC4/Timer.c **** * Summary:
 211:Generated_Source\PSoC4/Timer.c **** *  Initializes the Timer with default customizer
 212:Generated_Source\PSoC4/Timer.c **** *  values when called the first time and enables the Timer.
 213:Generated_Source\PSoC4/Timer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/Timer.c **** *  just enabled.
 215:Generated_Source\PSoC4/Timer.c **** *
 216:Generated_Source\PSoC4/Timer.c **** * Parameters:
 217:Generated_Source\PSoC4/Timer.c **** *  None
 218:Generated_Source\PSoC4/Timer.c **** *
 219:Generated_Source\PSoC4/Timer.c **** * Return:
 220:Generated_Source\PSoC4/Timer.c **** *  None
 221:Generated_Source\PSoC4/Timer.c **** *
 222:Generated_Source\PSoC4/Timer.c **** * Global variables:
 223:Generated_Source\PSoC4/Timer.c **** *  Timer_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/Timer.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/Timer.c **** *  to 1 the first time Timer_Start() is called. This allows
 226:Generated_Source\PSoC4/Timer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/Timer.c **** *  calls to the Timer_Start() routine.
 228:Generated_Source\PSoC4/Timer.c **** *
 229:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/Timer.c **** void Timer_Start(void)
 231:Generated_Source\PSoC4/Timer.c **** {
 232:Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 233:Generated_Source\PSoC4/Timer.c ****     {
 234:Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 235:Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 236:Generated_Source\PSoC4/Timer.c ****     }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 6


 237:Generated_Source\PSoC4/Timer.c **** 
 238:Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 239:Generated_Source\PSoC4/Timer.c **** }
 240:Generated_Source\PSoC4/Timer.c **** 
 241:Generated_Source\PSoC4/Timer.c **** 
 242:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Stop
 244:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 245:Generated_Source\PSoC4/Timer.c **** *
 246:Generated_Source\PSoC4/Timer.c **** * Summary:
 247:Generated_Source\PSoC4/Timer.c **** *  Disables the Timer.
 248:Generated_Source\PSoC4/Timer.c **** *
 249:Generated_Source\PSoC4/Timer.c **** * Parameters:
 250:Generated_Source\PSoC4/Timer.c **** *  None
 251:Generated_Source\PSoC4/Timer.c **** *
 252:Generated_Source\PSoC4/Timer.c **** * Return:
 253:Generated_Source\PSoC4/Timer.c **** *  None
 254:Generated_Source\PSoC4/Timer.c **** *
 255:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/Timer.c **** void Timer_Stop(void)
 257:Generated_Source\PSoC4/Timer.c **** {
 258:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/Timer.c **** 
 260:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 261:Generated_Source\PSoC4/Timer.c **** 
 262:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 263:Generated_Source\PSoC4/Timer.c **** 
 264:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 265:Generated_Source\PSoC4/Timer.c **** }
 266:Generated_Source\PSoC4/Timer.c **** 
 267:Generated_Source\PSoC4/Timer.c **** 
 268:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetMode
 270:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 271:Generated_Source\PSoC4/Timer.c **** *
 272:Generated_Source\PSoC4/Timer.c **** * Summary:
 273:Generated_Source\PSoC4/Timer.c **** *  Sets the operation mode of the Timer. This function is used when
 274:Generated_Source\PSoC4/Timer.c **** *  configured as a generic Timer and the actual mode of operation is
 275:Generated_Source\PSoC4/Timer.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/Timer.c **** *
 277:Generated_Source\PSoC4/Timer.c **** * Parameters:
 278:Generated_Source\PSoC4/Timer.c **** *  mode: Mode for the Timer to operate in
 279:Generated_Source\PSoC4/Timer.c **** *   Values:
 280:Generated_Source\PSoC4/Timer.c **** *   - Timer_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/Timer.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/Timer.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM - PWM
 286:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/Timer.c **** *
 289:Generated_Source\PSoC4/Timer.c **** * Return:
 290:Generated_Source\PSoC4/Timer.c **** *  None
 291:Generated_Source\PSoC4/Timer.c **** *
 292:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/Timer.c **** void Timer_SetMode(uint32 mode)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 7


 294:Generated_Source\PSoC4/Timer.c **** {
 295:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/Timer.c **** 
 297:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 298:Generated_Source\PSoC4/Timer.c **** 
 299:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 300:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 301:Generated_Source\PSoC4/Timer.c **** 
 302:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 303:Generated_Source\PSoC4/Timer.c **** }
 304:Generated_Source\PSoC4/Timer.c **** 
 305:Generated_Source\PSoC4/Timer.c **** 
 306:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetQDMode
 308:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 309:Generated_Source\PSoC4/Timer.c **** *
 310:Generated_Source\PSoC4/Timer.c **** * Summary:
 311:Generated_Source\PSoC4/Timer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/Timer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/Timer.c **** *
 314:Generated_Source\PSoC4/Timer.c **** * Parameters:
 315:Generated_Source\PSoC4/Timer.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/Timer.c **** *   Values:
 317:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/Timer.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/Timer.c **** *
 322:Generated_Source\PSoC4/Timer.c **** * Return:
 323:Generated_Source\PSoC4/Timer.c **** *  None
 324:Generated_Source\PSoC4/Timer.c **** *
 325:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/Timer.c **** void Timer_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/Timer.c **** {
 328:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/Timer.c **** 
 330:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 331:Generated_Source\PSoC4/Timer.c **** 
 332:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 333:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 334:Generated_Source\PSoC4/Timer.c **** 
 335:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 336:Generated_Source\PSoC4/Timer.c **** }
 337:Generated_Source\PSoC4/Timer.c **** 
 338:Generated_Source\PSoC4/Timer.c **** 
 339:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPrescaler
 341:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 342:Generated_Source\PSoC4/Timer.c **** *
 343:Generated_Source\PSoC4/Timer.c **** * Summary:
 344:Generated_Source\PSoC4/Timer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/Timer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/Timer.c **** *
 347:Generated_Source\PSoC4/Timer.c **** * Parameters:
 348:Generated_Source\PSoC4/Timer.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/Timer.c **** *   Values:
 350:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 8


 351:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/Timer.c **** *
 359:Generated_Source\PSoC4/Timer.c **** * Return:
 360:Generated_Source\PSoC4/Timer.c **** *  None
 361:Generated_Source\PSoC4/Timer.c **** *
 362:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/Timer.c **** void Timer_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/Timer.c **** {
 365:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/Timer.c **** 
 367:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 368:Generated_Source\PSoC4/Timer.c **** 
 369:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 370:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 371:Generated_Source\PSoC4/Timer.c **** 
 372:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 373:Generated_Source\PSoC4/Timer.c **** }
 374:Generated_Source\PSoC4/Timer.c **** 
 375:Generated_Source\PSoC4/Timer.c **** 
 376:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetOneShot
 378:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 379:Generated_Source\PSoC4/Timer.c **** *
 380:Generated_Source\PSoC4/Timer.c **** * Summary:
 381:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the Timer runs
 382:Generated_Source\PSoC4/Timer.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/Timer.c **** *  Timer operates in the continuous mode.
 384:Generated_Source\PSoC4/Timer.c **** *
 385:Generated_Source\PSoC4/Timer.c **** * Parameters:
 386:Generated_Source\PSoC4/Timer.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/Timer.c **** *   Values:
 388:Generated_Source\PSoC4/Timer.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/Timer.c **** *
 391:Generated_Source\PSoC4/Timer.c **** * Return:
 392:Generated_Source\PSoC4/Timer.c **** *  None
 393:Generated_Source\PSoC4/Timer.c **** *
 394:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/Timer.c **** void Timer_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/Timer.c **** {
 397:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/Timer.c **** 
 399:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 400:Generated_Source\PSoC4/Timer.c **** 
 401:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 402:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 403:Generated_Source\PSoC4/Timer.c ****                                                                Timer_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/Timer.c **** 
 405:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 406:Generated_Source\PSoC4/Timer.c **** }
 407:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 9


 408:Generated_Source\PSoC4/Timer.c **** 
 409:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMMode
 411:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Timer.c **** *
 413:Generated_Source\PSoC4/Timer.c **** * Summary:
 414:Generated_Source\PSoC4/Timer.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/Timer.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/Timer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/Timer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/Timer.c **** *  the mode.
 419:Generated_Source\PSoC4/Timer.c **** *
 420:Generated_Source\PSoC4/Timer.c **** * Parameters:
 421:Generated_Source\PSoC4/Timer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/Timer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/Timer.c **** *   Values:
 424:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/Timer.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/Timer.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/Timer.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/Timer.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/Timer.c **** *
 445:Generated_Source\PSoC4/Timer.c **** * Return:
 446:Generated_Source\PSoC4/Timer.c **** *  None
 447:Generated_Source\PSoC4/Timer.c **** *
 448:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/Timer.c **** {
 451:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 452:Generated_Source\PSoC4/Timer.c **** }
 453:Generated_Source\PSoC4/Timer.c **** 
 454:Generated_Source\PSoC4/Timer.c **** 
 455:Generated_Source\PSoC4/Timer.c **** 
 456:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMSyncKill
 458:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 459:Generated_Source\PSoC4/Timer.c **** *
 460:Generated_Source\PSoC4/Timer.c **** * Summary:
 461:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/Timer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/Timer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/Timer.c **** *  and PWM with dead time modes.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 10


 465:Generated_Source\PSoC4/Timer.c **** *
 466:Generated_Source\PSoC4/Timer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/Timer.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/Timer.c **** *
 469:Generated_Source\PSoC4/Timer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/Timer.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/Timer.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/Timer.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/Timer.c **** 
 474:Generated_Source\PSoC4/Timer.c **** *
 475:Generated_Source\PSoC4/Timer.c **** * Parameters:
 476:Generated_Source\PSoC4/Timer.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/Timer.c **** *   Values:
 478:Generated_Source\PSoC4/Timer.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/Timer.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/Timer.c **** *
 481:Generated_Source\PSoC4/Timer.c **** * Return:
 482:Generated_Source\PSoC4/Timer.c **** *  None
 483:Generated_Source\PSoC4/Timer.c **** *
 484:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/Timer.c **** {
 487:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/Timer.c **** 
 489:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 490:Generated_Source\PSoC4/Timer.c **** 
 491:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 492:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 493:Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/Timer.c **** 
 495:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 496:Generated_Source\PSoC4/Timer.c **** }
 497:Generated_Source\PSoC4/Timer.c **** 
 498:Generated_Source\PSoC4/Timer.c **** 
 499:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMStopOnKill
 501:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 502:Generated_Source\PSoC4/Timer.c **** *
 503:Generated_Source\PSoC4/Timer.c **** * Summary:
 504:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/Timer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/Timer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/Timer.c **** *
 508:Generated_Source\PSoC4/Timer.c **** *
 509:Generated_Source\PSoC4/Timer.c **** * Parameters:
 510:Generated_Source\PSoC4/Timer.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/Timer.c **** *   Values:
 512:Generated_Source\PSoC4/Timer.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/Timer.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/Timer.c **** *
 515:Generated_Source\PSoC4/Timer.c **** * Return:
 516:Generated_Source\PSoC4/Timer.c **** *  None
 517:Generated_Source\PSoC4/Timer.c **** *
 518:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/Timer.c **** {
 521:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 11


 522:Generated_Source\PSoC4/Timer.c **** 
 523:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 524:Generated_Source\PSoC4/Timer.c **** 
 525:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 526:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 527:Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/Timer.c **** 
 529:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 530:Generated_Source\PSoC4/Timer.c **** }
 531:Generated_Source\PSoC4/Timer.c **** 
 532:Generated_Source\PSoC4/Timer.c **** 
 533:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMDeadTime
 535:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 536:Generated_Source\PSoC4/Timer.c **** *
 537:Generated_Source\PSoC4/Timer.c **** * Summary:
 538:Generated_Source\PSoC4/Timer.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/Timer.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/Timer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/Timer.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/Timer.c **** 
 543:Generated_Source\PSoC4/Timer.c **** *
 544:Generated_Source\PSoC4/Timer.c **** * Parameters:
 545:Generated_Source\PSoC4/Timer.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/Timer.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/Timer.c **** *
 548:Generated_Source\PSoC4/Timer.c **** * Return:
 549:Generated_Source\PSoC4/Timer.c **** *  None
 550:Generated_Source\PSoC4/Timer.c **** *
 551:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/Timer.c **** {
 554:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/Timer.c **** 
 556:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 557:Generated_Source\PSoC4/Timer.c **** 
 558:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 559:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 560:Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/Timer.c **** 
 562:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 563:Generated_Source\PSoC4/Timer.c **** }
 564:Generated_Source\PSoC4/Timer.c **** 
 565:Generated_Source\PSoC4/Timer.c **** 
 566:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMInvert
 568:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 569:Generated_Source\PSoC4/Timer.c **** *
 570:Generated_Source\PSoC4/Timer.c **** * Summary:
 571:Generated_Source\PSoC4/Timer.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/Timer.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/Timer.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/Timer.c **** *
 575:Generated_Source\PSoC4/Timer.c **** * Parameters:
 576:Generated_Source\PSoC4/Timer.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/Timer.c **** *   Values:
 578:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE   - Inverts the line output
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 12


 579:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/Timer.c **** *
 581:Generated_Source\PSoC4/Timer.c **** * Return:
 582:Generated_Source\PSoC4/Timer.c **** *  None
 583:Generated_Source\PSoC4/Timer.c **** *
 584:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/Timer.c **** {
 587:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/Timer.c **** 
 589:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 590:Generated_Source\PSoC4/Timer.c **** 
 591:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 592:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 593:Generated_Source\PSoC4/Timer.c **** 
 594:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 595:Generated_Source\PSoC4/Timer.c **** }
 596:Generated_Source\PSoC4/Timer.c **** 
 597:Generated_Source\PSoC4/Timer.c **** 
 598:Generated_Source\PSoC4/Timer.c **** 
 599:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCounter
 601:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 602:Generated_Source\PSoC4/Timer.c **** *
 603:Generated_Source\PSoC4/Timer.c **** * Summary:
 604:Generated_Source\PSoC4/Timer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/Timer.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/Timer.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/Timer.c **** *
 608:Generated_Source\PSoC4/Timer.c **** * Parameters:
 609:Generated_Source\PSoC4/Timer.c **** *  count: value to write
 610:Generated_Source\PSoC4/Timer.c **** *
 611:Generated_Source\PSoC4/Timer.c **** * Return:
 612:Generated_Source\PSoC4/Timer.c **** *  None
 613:Generated_Source\PSoC4/Timer.c **** *
 614:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/Timer.c **** {
 617:Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 618:Generated_Source\PSoC4/Timer.c **** }
 619:Generated_Source\PSoC4/Timer.c **** 
 620:Generated_Source\PSoC4/Timer.c **** 
 621:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCounter
 623:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 624:Generated_Source\PSoC4/Timer.c **** *
 625:Generated_Source\PSoC4/Timer.c **** * Summary:
 626:Generated_Source\PSoC4/Timer.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/Timer.c **** *
 628:Generated_Source\PSoC4/Timer.c **** * Parameters:
 629:Generated_Source\PSoC4/Timer.c **** *  None
 630:Generated_Source\PSoC4/Timer.c **** *
 631:Generated_Source\PSoC4/Timer.c **** * Return:
 632:Generated_Source\PSoC4/Timer.c **** *  Current counter value
 633:Generated_Source\PSoC4/Timer.c **** *
 634:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCounter(void)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 13


 636:Generated_Source\PSoC4/Timer.c **** {
 637:Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 638:Generated_Source\PSoC4/Timer.c **** }
 639:Generated_Source\PSoC4/Timer.c **** 
 640:Generated_Source\PSoC4/Timer.c **** 
 641:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCounterMode
 643:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Timer.c **** *
 645:Generated_Source\PSoC4/Timer.c **** * Summary:
 646:Generated_Source\PSoC4/Timer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/Timer.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/Timer.c **** *
 649:Generated_Source\PSoC4/Timer.c **** * Parameters:
 650:Generated_Source\PSoC4/Timer.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/Timer.c **** *   Values:
 652:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/Timer.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/Timer.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/Timer.c **** *                                         and period
 659:Generated_Source\PSoC4/Timer.c **** *
 660:Generated_Source\PSoC4/Timer.c **** * Return:
 661:Generated_Source\PSoC4/Timer.c **** *  None
 662:Generated_Source\PSoC4/Timer.c **** *
 663:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/Timer.c **** void Timer_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/Timer.c **** {
 666:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/Timer.c **** 
 668:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 669:Generated_Source\PSoC4/Timer.c **** 
 670:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 671:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 672:Generated_Source\PSoC4/Timer.c **** 
 673:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 674:Generated_Source\PSoC4/Timer.c **** }
 675:Generated_Source\PSoC4/Timer.c **** 
 676:Generated_Source\PSoC4/Timer.c **** 
 677:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriod
 679:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 680:Generated_Source\PSoC4/Timer.c **** *
 681:Generated_Source\PSoC4/Timer.c **** * Summary:
 682:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/Timer.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/Timer.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/Timer.c **** *
 686:Generated_Source\PSoC4/Timer.c **** * Parameters:
 687:Generated_Source\PSoC4/Timer.c **** *  period: Period value
 688:Generated_Source\PSoC4/Timer.c **** *
 689:Generated_Source\PSoC4/Timer.c **** * Return:
 690:Generated_Source\PSoC4/Timer.c **** *  None
 691:Generated_Source\PSoC4/Timer.c **** *
 692:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 14


 693:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/Timer.c **** {
 695:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 696:Generated_Source\PSoC4/Timer.c **** }
 697:Generated_Source\PSoC4/Timer.c **** 
 698:Generated_Source\PSoC4/Timer.c **** 
 699:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriod
 701:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 702:Generated_Source\PSoC4/Timer.c **** *
 703:Generated_Source\PSoC4/Timer.c **** * Summary:
 704:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/Timer.c **** *
 706:Generated_Source\PSoC4/Timer.c **** * Parameters:
 707:Generated_Source\PSoC4/Timer.c **** *  None
 708:Generated_Source\PSoC4/Timer.c **** *
 709:Generated_Source\PSoC4/Timer.c **** * Return:
 710:Generated_Source\PSoC4/Timer.c **** *  Period value
 711:Generated_Source\PSoC4/Timer.c **** *
 712:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriod(void)
 714:Generated_Source\PSoC4/Timer.c **** {
 715:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 716:Generated_Source\PSoC4/Timer.c **** }
 717:Generated_Source\PSoC4/Timer.c **** 
 718:Generated_Source\PSoC4/Timer.c **** 
 719:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCompareSwap
 721:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 722:Generated_Source\PSoC4/Timer.c **** *
 723:Generated_Source\PSoC4/Timer.c **** * Summary:
 724:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/Timer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/Timer.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/Timer.c **** *
 729:Generated_Source\PSoC4/Timer.c **** * Parameters:
 730:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 731:Generated_Source\PSoC4/Timer.c **** *   Values:
 732:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/Timer.c **** *
 735:Generated_Source\PSoC4/Timer.c **** * Return:
 736:Generated_Source\PSoC4/Timer.c **** *  None
 737:Generated_Source\PSoC4/Timer.c **** *
 738:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/Timer.c **** void Timer_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/Timer.c **** {
 741:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/Timer.c **** 
 743:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 744:Generated_Source\PSoC4/Timer.c **** 
 745:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 746:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 747:Generated_Source\PSoC4/Timer.c **** 
 748:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 749:Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 15


 750:Generated_Source\PSoC4/Timer.c **** 
 751:Generated_Source\PSoC4/Timer.c **** 
 752:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriodBuf
 754:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 755:Generated_Source\PSoC4/Timer.c **** *
 756:Generated_Source\PSoC4/Timer.c **** * Summary:
 757:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/Timer.c **** *
 759:Generated_Source\PSoC4/Timer.c **** * Parameters:
 760:Generated_Source\PSoC4/Timer.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/Timer.c **** *
 762:Generated_Source\PSoC4/Timer.c **** * Return:
 763:Generated_Source\PSoC4/Timer.c **** *  None
 764:Generated_Source\PSoC4/Timer.c **** *
 765:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/Timer.c **** {
 768:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 769:Generated_Source\PSoC4/Timer.c **** }
 770:Generated_Source\PSoC4/Timer.c **** 
 771:Generated_Source\PSoC4/Timer.c **** 
 772:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriodBuf
 774:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 775:Generated_Source\PSoC4/Timer.c **** *
 776:Generated_Source\PSoC4/Timer.c **** * Summary:
 777:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/Timer.c **** *
 779:Generated_Source\PSoC4/Timer.c **** * Parameters:
 780:Generated_Source\PSoC4/Timer.c **** *  None
 781:Generated_Source\PSoC4/Timer.c **** *
 782:Generated_Source\PSoC4/Timer.c **** * Return:
 783:Generated_Source\PSoC4/Timer.c **** *  Period value
 784:Generated_Source\PSoC4/Timer.c **** *
 785:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/Timer.c **** {
 788:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 789:Generated_Source\PSoC4/Timer.c **** }
 790:Generated_Source\PSoC4/Timer.c **** 
 791:Generated_Source\PSoC4/Timer.c **** 
 792:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPeriodSwap
 794:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 795:Generated_Source\PSoC4/Timer.c **** *
 796:Generated_Source\PSoC4/Timer.c **** * Summary:
 797:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/Timer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/Timer.c **** *  switch event.
 801:Generated_Source\PSoC4/Timer.c **** *
 802:Generated_Source\PSoC4/Timer.c **** * Parameters:
 803:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 804:Generated_Source\PSoC4/Timer.c **** *   Values:
 805:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 16


 807:Generated_Source\PSoC4/Timer.c **** *
 808:Generated_Source\PSoC4/Timer.c **** * Return:
 809:Generated_Source\PSoC4/Timer.c **** *  None
 810:Generated_Source\PSoC4/Timer.c **** *
 811:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/Timer.c **** void Timer_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/Timer.c **** {
 814:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/Timer.c **** 
 816:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 817:Generated_Source\PSoC4/Timer.c **** 
 818:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 819:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 820:Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/Timer.c **** 
 822:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 823:Generated_Source\PSoC4/Timer.c **** }
 824:Generated_Source\PSoC4/Timer.c **** 
 825:Generated_Source\PSoC4/Timer.c **** 
 826:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompare
 828:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 829:Generated_Source\PSoC4/Timer.c **** *
 830:Generated_Source\PSoC4/Timer.c **** * Summary:
 831:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/Timer.c **** *
 834:Generated_Source\PSoC4/Timer.c **** * Parameters:
 835:Generated_Source\PSoC4/Timer.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/Timer.c **** *
 837:Generated_Source\PSoC4/Timer.c **** * Return:
 838:Generated_Source\PSoC4/Timer.c **** *  None
 839:Generated_Source\PSoC4/Timer.c **** *
 840:Generated_Source\PSoC4/Timer.c **** * Note:
 841:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/Timer.c **** *
 848:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/Timer.c **** {
 851:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/Timer.c **** 
 855:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/Timer.c **** 
 858:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/Timer.c ****         {
 860:Generated_Source\PSoC4/Timer.c ****             compare++;
 861:Generated_Source\PSoC4/Timer.c ****         }
 862:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/Timer.c ****         {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 17


 864:Generated_Source\PSoC4/Timer.c ****             compare--;
 865:Generated_Source\PSoC4/Timer.c ****         }
 866:Generated_Source\PSoC4/Timer.c ****         else
 867:Generated_Source\PSoC4/Timer.c ****         {
 868:Generated_Source\PSoC4/Timer.c ****         }
 869:Generated_Source\PSoC4/Timer.c ****         
 870:Generated_Source\PSoC4/Timer.c ****     
 871:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/Timer.c ****     
 873:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 874:Generated_Source\PSoC4/Timer.c **** }
 875:Generated_Source\PSoC4/Timer.c **** 
 876:Generated_Source\PSoC4/Timer.c **** 
 877:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompare
 879:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 880:Generated_Source\PSoC4/Timer.c **** *
 881:Generated_Source\PSoC4/Timer.c **** * Summary:
 882:Generated_Source\PSoC4/Timer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/Timer.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/Timer.c **** *
 888:Generated_Source\PSoC4/Timer.c **** * Parameters:
 889:Generated_Source\PSoC4/Timer.c **** *  None
 890:Generated_Source\PSoC4/Timer.c **** *
 891:Generated_Source\PSoC4/Timer.c **** * Return:
 892:Generated_Source\PSoC4/Timer.c **** *  Compare value
 893:Generated_Source\PSoC4/Timer.c **** *
 894:Generated_Source\PSoC4/Timer.c **** * Note:
 895:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/Timer.c **** *
 899:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompare(void)
 901:Generated_Source\PSoC4/Timer.c **** {
 902:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/Timer.c **** 
 907:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/Timer.c ****         
 910:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_REG;
 911:Generated_Source\PSoC4/Timer.c ****         
 912:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/Timer.c ****         {
 914:Generated_Source\PSoC4/Timer.c ****             regVal--;
 915:Generated_Source\PSoC4/Timer.c ****         }
 916:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/Timer.c ****         {
 918:Generated_Source\PSoC4/Timer.c ****             regVal++;
 919:Generated_Source\PSoC4/Timer.c ****         }
 920:Generated_Source\PSoC4/Timer.c ****         else
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 18


 921:Generated_Source\PSoC4/Timer.c ****         {
 922:Generated_Source\PSoC4/Timer.c ****         }
 923:Generated_Source\PSoC4/Timer.c **** 
 924:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
 925:Generated_Source\PSoC4/Timer.c ****     #else
 926:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 927:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/Timer.c **** }
 929:Generated_Source\PSoC4/Timer.c **** 
 930:Generated_Source\PSoC4/Timer.c **** 
 931:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompareBuf
 933:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 934:Generated_Source\PSoC4/Timer.c **** *
 935:Generated_Source\PSoC4/Timer.c **** * Summary:
 936:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/Timer.c **** *
 939:Generated_Source\PSoC4/Timer.c **** * Parameters:
 940:Generated_Source\PSoC4/Timer.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/Timer.c **** *
 942:Generated_Source\PSoC4/Timer.c **** * Return:
 943:Generated_Source\PSoC4/Timer.c **** *  None
 944:Generated_Source\PSoC4/Timer.c **** *
 945:Generated_Source\PSoC4/Timer.c **** * Note:
 946:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/Timer.c **** *
 953:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/Timer.c **** {
 956:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/Timer.c **** 
 960:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/Timer.c **** 
 963:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/Timer.c ****         {
 965:Generated_Source\PSoC4/Timer.c ****             compareBuf++;
 966:Generated_Source\PSoC4/Timer.c ****         }
 967:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/Timer.c ****         {
 969:Generated_Source\PSoC4/Timer.c ****             compareBuf --;
 970:Generated_Source\PSoC4/Timer.c ****         }
 971:Generated_Source\PSoC4/Timer.c ****         else
 972:Generated_Source\PSoC4/Timer.c ****         {
 973:Generated_Source\PSoC4/Timer.c ****         }
 974:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/Timer.c ****     
 976:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 977:Generated_Source\PSoC4/Timer.c **** }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 19


 978:Generated_Source\PSoC4/Timer.c **** 
 979:Generated_Source\PSoC4/Timer.c **** 
 980:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompareBuf
 982:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 983:Generated_Source\PSoC4/Timer.c **** *
 984:Generated_Source\PSoC4/Timer.c **** * Summary:
 985:Generated_Source\PSoC4/Timer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/Timer.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/Timer.c **** *
 988:Generated_Source\PSoC4/Timer.c **** * Parameters:
 989:Generated_Source\PSoC4/Timer.c **** *  None
 990:Generated_Source\PSoC4/Timer.c **** *
 991:Generated_Source\PSoC4/Timer.c **** * Return:
 992:Generated_Source\PSoC4/Timer.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/Timer.c **** *
 994:Generated_Source\PSoC4/Timer.c **** * Note:
 995:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/Timer.c **** *
 999:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/Timer.c **** {
1002:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/Timer.c **** 
1007:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/Timer.c **** 
1010:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/Timer.c ****         
1012:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/Timer.c ****         {
1014:Generated_Source\PSoC4/Timer.c ****             regVal--;
1015:Generated_Source\PSoC4/Timer.c ****         }
1016:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/Timer.c ****         {
1018:Generated_Source\PSoC4/Timer.c ****             regVal++;
1019:Generated_Source\PSoC4/Timer.c ****         }
1020:Generated_Source\PSoC4/Timer.c ****         else
1021:Generated_Source\PSoC4/Timer.c ****         {
1022:Generated_Source\PSoC4/Timer.c ****         }
1023:Generated_Source\PSoC4/Timer.c **** 
1024:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
1025:Generated_Source\PSoC4/Timer.c ****     #else
1026:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
1027:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/Timer.c **** }
1029:Generated_Source\PSoC4/Timer.c **** 
1030:Generated_Source\PSoC4/Timer.c **** 
1031:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCapture
1033:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1034:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 20


1035:Generated_Source\PSoC4/Timer.c **** * Summary:
1036:Generated_Source\PSoC4/Timer.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/Timer.c **** *
1039:Generated_Source\PSoC4/Timer.c **** * Parameters:
1040:Generated_Source\PSoC4/Timer.c **** *  None
1041:Generated_Source\PSoC4/Timer.c **** *
1042:Generated_Source\PSoC4/Timer.c **** * Return:
1043:Generated_Source\PSoC4/Timer.c **** *  Capture value
1044:Generated_Source\PSoC4/Timer.c **** *
1045:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCapture(void)
1047:Generated_Source\PSoC4/Timer.c **** {
1048:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
1049:Generated_Source\PSoC4/Timer.c **** }
1050:Generated_Source\PSoC4/Timer.c **** 
1051:Generated_Source\PSoC4/Timer.c **** 
1052:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCaptureBuf
1054:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1055:Generated_Source\PSoC4/Timer.c **** *
1056:Generated_Source\PSoC4/Timer.c **** * Summary:
1057:Generated_Source\PSoC4/Timer.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/Timer.c **** *
1060:Generated_Source\PSoC4/Timer.c **** * Parameters:
1061:Generated_Source\PSoC4/Timer.c **** *  None
1062:Generated_Source\PSoC4/Timer.c **** *
1063:Generated_Source\PSoC4/Timer.c **** * Return:
1064:Generated_Source\PSoC4/Timer.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/Timer.c **** *
1066:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/Timer.c **** {
1069:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
1070:Generated_Source\PSoC4/Timer.c **** }
1071:Generated_Source\PSoC4/Timer.c **** 
1072:Generated_Source\PSoC4/Timer.c **** 
1073:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCaptureMode
1075:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1076:Generated_Source\PSoC4/Timer.c **** *
1077:Generated_Source\PSoC4/Timer.c **** * Summary:
1078:Generated_Source\PSoC4/Timer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/Timer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/Timer.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/Timer.c **** *
1082:Generated_Source\PSoC4/Timer.c **** * Parameters:
1083:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/Timer.c **** *   Values:
1085:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/Timer.c **** *
1090:Generated_Source\PSoC4/Timer.c **** * Return:
1091:Generated_Source\PSoC4/Timer.c **** *  None
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 21


1092:Generated_Source\PSoC4/Timer.c **** *
1093:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/Timer.c **** void Timer_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/Timer.c **** {
1096:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/Timer.c **** 
1098:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1099:Generated_Source\PSoC4/Timer.c **** 
1100:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
1101:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
1102:Generated_Source\PSoC4/Timer.c **** 
1103:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1104:Generated_Source\PSoC4/Timer.c **** }
1105:Generated_Source\PSoC4/Timer.c **** 
1106:Generated_Source\PSoC4/Timer.c **** 
1107:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetReloadMode
1109:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1110:Generated_Source\PSoC4/Timer.c **** *
1111:Generated_Source\PSoC4/Timer.c **** * Summary:
1112:Generated_Source\PSoC4/Timer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/Timer.c **** *  input.
1114:Generated_Source\PSoC4/Timer.c **** *
1115:Generated_Source\PSoC4/Timer.c **** * Parameters:
1116:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/Timer.c **** *   Values:
1118:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/Timer.c **** *
1123:Generated_Source\PSoC4/Timer.c **** * Return:
1124:Generated_Source\PSoC4/Timer.c **** *  None
1125:Generated_Source\PSoC4/Timer.c **** *
1126:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/Timer.c **** void Timer_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/Timer.c **** {
1129:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/Timer.c **** 
1131:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1132:Generated_Source\PSoC4/Timer.c **** 
1133:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
1134:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
1135:Generated_Source\PSoC4/Timer.c **** 
1136:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1137:Generated_Source\PSoC4/Timer.c **** }
1138:Generated_Source\PSoC4/Timer.c **** 
1139:Generated_Source\PSoC4/Timer.c **** 
1140:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStartMode
1142:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1143:Generated_Source\PSoC4/Timer.c **** *
1144:Generated_Source\PSoC4/Timer.c **** * Summary:
1145:Generated_Source\PSoC4/Timer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/Timer.c **** *  phiB input.
1147:Generated_Source\PSoC4/Timer.c **** *
1148:Generated_Source\PSoC4/Timer.c **** * Parameters:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 22


1149:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/Timer.c **** *   Values:
1151:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/Timer.c **** *
1156:Generated_Source\PSoC4/Timer.c **** * Return:
1157:Generated_Source\PSoC4/Timer.c **** *  None
1158:Generated_Source\PSoC4/Timer.c **** *
1159:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/Timer.c **** void Timer_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/Timer.c **** {
1162:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/Timer.c **** 
1164:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1165:Generated_Source\PSoC4/Timer.c **** 
1166:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
1167:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
1168:Generated_Source\PSoC4/Timer.c **** 
1169:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1170:Generated_Source\PSoC4/Timer.c **** }
1171:Generated_Source\PSoC4/Timer.c **** 
1172:Generated_Source\PSoC4/Timer.c **** 
1173:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStopMode
1175:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1176:Generated_Source\PSoC4/Timer.c **** *
1177:Generated_Source\PSoC4/Timer.c **** * Summary:
1178:Generated_Source\PSoC4/Timer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/Timer.c **** *
1180:Generated_Source\PSoC4/Timer.c **** * Parameters:
1181:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/Timer.c **** *   Values:
1183:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/Timer.c **** *
1188:Generated_Source\PSoC4/Timer.c **** * Return:
1189:Generated_Source\PSoC4/Timer.c **** *  None
1190:Generated_Source\PSoC4/Timer.c **** *
1191:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/Timer.c **** void Timer_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/Timer.c **** {
1194:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/Timer.c **** 
1196:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1197:Generated_Source\PSoC4/Timer.c **** 
1198:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
1199:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
1200:Generated_Source\PSoC4/Timer.c **** 
1201:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1202:Generated_Source\PSoC4/Timer.c **** }
1203:Generated_Source\PSoC4/Timer.c **** 
1204:Generated_Source\PSoC4/Timer.c **** 
1205:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 23


1206:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCountMode
1207:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1208:Generated_Source\PSoC4/Timer.c **** *
1209:Generated_Source\PSoC4/Timer.c **** * Summary:
1210:Generated_Source\PSoC4/Timer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/Timer.c **** *  input.
1212:Generated_Source\PSoC4/Timer.c **** *
1213:Generated_Source\PSoC4/Timer.c **** * Parameters:
1214:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/Timer.c **** *   Values:
1216:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/Timer.c **** *
1221:Generated_Source\PSoC4/Timer.c **** * Return:
1222:Generated_Source\PSoC4/Timer.c **** *  None
1223:Generated_Source\PSoC4/Timer.c **** *
1224:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/Timer.c **** void Timer_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/Timer.c **** {
1227:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/Timer.c **** 
1229:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1230:Generated_Source\PSoC4/Timer.c **** 
1231:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
1232:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
1233:Generated_Source\PSoC4/Timer.c **** 
1234:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1235:Generated_Source\PSoC4/Timer.c **** }
1236:Generated_Source\PSoC4/Timer.c **** 
1237:Generated_Source\PSoC4/Timer.c **** 
1238:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_TriggerCommand
1240:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1241:Generated_Source\PSoC4/Timer.c **** *
1242:Generated_Source\PSoC4/Timer.c **** * Summary:
1243:Generated_Source\PSoC4/Timer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/Timer.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/Timer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/Timer.c **** *
1247:Generated_Source\PSoC4/Timer.c **** * Parameters:
1248:Generated_Source\PSoC4/Timer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/Timer.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/Timer.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/Timer.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/Timer.c **** *        define.
1253:Generated_Source\PSoC4/Timer.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/Timer.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/Timer.c **** *   Values:
1256:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/Timer.c **** *
1261:Generated_Source\PSoC4/Timer.c **** * Return:
1262:Generated_Source\PSoC4/Timer.c **** *  None
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 24


1263:Generated_Source\PSoC4/Timer.c **** *
1264:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/Timer.c **** void Timer_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/Timer.c **** {
1267:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/Timer.c **** 
1269:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
1270:Generated_Source\PSoC4/Timer.c **** 
1271:Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
1272:Generated_Source\PSoC4/Timer.c **** 
1273:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
1274:Generated_Source\PSoC4/Timer.c **** }
1275:Generated_Source\PSoC4/Timer.c **** 
1276:Generated_Source\PSoC4/Timer.c **** 
1277:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadStatus
1279:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1280:Generated_Source\PSoC4/Timer.c **** *
1281:Generated_Source\PSoC4/Timer.c **** * Summary:
1282:Generated_Source\PSoC4/Timer.c **** *  Reads the status of the Timer.
1283:Generated_Source\PSoC4/Timer.c **** *
1284:Generated_Source\PSoC4/Timer.c **** * Parameters:
1285:Generated_Source\PSoC4/Timer.c **** *  None
1286:Generated_Source\PSoC4/Timer.c **** *
1287:Generated_Source\PSoC4/Timer.c **** * Return:
1288:Generated_Source\PSoC4/Timer.c **** *  Status
1289:Generated_Source\PSoC4/Timer.c **** *   Values:
1290:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/Timer.c **** *
1293:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadStatus(void)
1295:Generated_Source\PSoC4/Timer.c **** {
1296:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
1297:Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
1298:Generated_Source\PSoC4/Timer.c **** }
1299:Generated_Source\PSoC4/Timer.c **** 
1300:Generated_Source\PSoC4/Timer.c **** 
1301:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterruptMode
1303:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1304:Generated_Source\PSoC4/Timer.c **** *
1305:Generated_Source\PSoC4/Timer.c **** * Summary:
1306:Generated_Source\PSoC4/Timer.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/Timer.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/Timer.c **** *
1309:Generated_Source\PSoC4/Timer.c **** * Parameters:
1310:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/Timer.c **** *   Values:
1312:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/Timer.c **** *
1315:Generated_Source\PSoC4/Timer.c **** * Return:
1316:Generated_Source\PSoC4/Timer.c **** *  None
1317:Generated_Source\PSoC4/Timer.c **** *
1318:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterruptMode(uint32 interruptMask)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 25


1320:Generated_Source\PSoC4/Timer.c **** {
1321:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
  48              		.loc 1 1321 0
  49 000e 084B     		ldr	r3, .L2+12
  50 0010 1C3A     		subs	r2, r2, #28
  51 0012 FF3A     		subs	r2, r2, #255
  52 0014 1A60     		str	r2, [r3]
  53              	.LVL1:
  54              	.LBE9:
  55              	.LBE8:
  56              	.LBB10:
  57              	.LBB11:
 695:Generated_Source\PSoC4/Timer.c **** }
  58              		.loc 1 695 0
  59 0016 074B     		ldr	r3, .L2+16
  60 0018 1D32     		adds	r2, r2, #29
  61 001a 1A60     		str	r2, [r3]
  62              	.LVL2:
  63              	.LBE11:
  64              	.LBE10:
  65              	.LBB12:
  66              	.LBB13:
 617:Generated_Source\PSoC4/Timer.c **** }
  67              		.loc 1 617 0
  68 001c 0022     		movs	r2, #0
  69 001e 064B     		ldr	r3, .L2+20
  70 0020 1A60     		str	r2, [r3]
  71              	.LVL3:
  72              	.LBE13:
  73              	.LBE12:
 160:Generated_Source\PSoC4/Timer.c **** 
  74              		.loc 1 160 0
  75 0022 7047     		bx	lr
  76              	.L3:
  77              		.align	2
  78              	.L2:
  79 0024 00070402 		.word	33818368
  80 0028 00012040 		.word	1075839232
  81 002c 24012040 		.word	1075839268
  82 0030 38012040 		.word	1075839288
  83 0034 14012040 		.word	1075839252
  84 0038 08012040 		.word	1075839240
  85              		.cfi_endproc
  86              	.LFE1:
  87              		.size	Timer_Init, .-Timer_Init
  88              		.section	.text.Timer_Enable,"ax",%progbits
  89              		.align	1
  90              		.global	Timer_Enable
  91              		.code	16
  92              		.thumb_func
  93              		.type	Timer_Enable, %function
  94              	Timer_Enable:
  95              	.LFB2:
 178:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
  96              		.loc 1 178 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 26


  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 10B5     		push	{r4, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
 181:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 104              		.loc 1 181 0
 105 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 106              	.LVL4:
 182:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 107              		.loc 1 182 0
 108 0006 0121     		movs	r1, #1
 109 0008 034A     		ldr	r2, .L5
 203:Generated_Source\PSoC4/Timer.c **** 
 110              		.loc 1 203 0
 111              		@ sp needed
 182:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 112              		.loc 1 182 0
 113 000a 1368     		ldr	r3, [r2]
 114 000c 0B43     		orrs	r3, r1
 115 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/Timer.c **** 
 116              		.loc 1 183 0
 117 0010 FFF7FEFF 		bl	CyExitCriticalSection
 118              	.LVL5:
 203:Generated_Source\PSoC4/Timer.c **** 
 119              		.loc 1 203 0
 120 0014 10BD     		pop	{r4, pc}
 121              	.L6:
 122 0016 C046     		.align	2
 123              	.L5:
 124 0018 00002040 		.word	1075838976
 125              		.cfi_endproc
 126              	.LFE2:
 127              		.size	Timer_Enable, .-Timer_Enable
 128              		.section	.text.Timer_Start,"ax",%progbits
 129              		.align	1
 130              		.global	Timer_Start
 131              		.code	16
 132              		.thumb_func
 133              		.type	Timer_Start, %function
 134              	Timer_Start:
 135              	.LFB3:
 231:Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 136              		.loc 1 231 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140 0000 10B5     		push	{r4, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 4, -8
 143              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/Timer.c ****     {
 144              		.loc 1 232 0
 145 0002 054C     		ldr	r4, .L10
 146 0004 2378     		ldrb	r3, [r4]
 147 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 27


 148 0008 03D1     		bne	.L8
 234:Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 149              		.loc 1 234 0
 150 000a FFF7FEFF 		bl	Timer_Init
 151              	.LVL6:
 235:Generated_Source\PSoC4/Timer.c ****     }
 152              		.loc 1 235 0
 153 000e 0123     		movs	r3, #1
 154 0010 2370     		strb	r3, [r4]
 155              	.L8:
 238:Generated_Source\PSoC4/Timer.c **** }
 156              		.loc 1 238 0
 157 0012 FFF7FEFF 		bl	Timer_Enable
 158              	.LVL7:
 239:Generated_Source\PSoC4/Timer.c **** 
 159              		.loc 1 239 0
 160              		@ sp needed
 161 0016 10BD     		pop	{r4, pc}
 162              	.L11:
 163              		.align	2
 164              	.L10:
 165 0018 00000000 		.word	.LANCHOR0
 166              		.cfi_endproc
 167              	.LFE3:
 168              		.size	Timer_Start, .-Timer_Start
 169              		.section	.text.Timer_Stop,"ax",%progbits
 170              		.align	1
 171              		.global	Timer_Stop
 172              		.code	16
 173              		.thumb_func
 174              		.type	Timer_Stop, %function
 175              	Timer_Stop:
 176              	.LFB4:
 257:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 177              		.loc 1 257 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 10B5     		push	{r4, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 260:Generated_Source\PSoC4/Timer.c **** 
 185              		.loc 1 260 0
 186 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 187              	.LVL8:
 262:Generated_Source\PSoC4/Timer.c **** 
 188              		.loc 1 262 0
 189 0006 0121     		movs	r1, #1
 190 0008 034A     		ldr	r2, .L13
 265:Generated_Source\PSoC4/Timer.c **** 
 191              		.loc 1 265 0
 192              		@ sp needed
 262:Generated_Source\PSoC4/Timer.c **** 
 193              		.loc 1 262 0
 194 000a 1368     		ldr	r3, [r2]
 195 000c 8B43     		bics	r3, r1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 28


 196 000e 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/Timer.c **** }
 197              		.loc 1 264 0
 198 0010 FFF7FEFF 		bl	CyExitCriticalSection
 199              	.LVL9:
 265:Generated_Source\PSoC4/Timer.c **** 
 200              		.loc 1 265 0
 201 0014 10BD     		pop	{r4, pc}
 202              	.L14:
 203 0016 C046     		.align	2
 204              	.L13:
 205 0018 00002040 		.word	1075838976
 206              		.cfi_endproc
 207              	.LFE4:
 208              		.size	Timer_Stop, .-Timer_Stop
 209              		.section	.text.Timer_SetMode,"ax",%progbits
 210              		.align	1
 211              		.global	Timer_SetMode
 212              		.code	16
 213              		.thumb_func
 214              		.type	Timer_SetMode, %function
 215              	Timer_SetMode:
 216              	.LFB5:
 294:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 217              		.loc 1 294 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL10:
 222 0000 10B5     		push	{r4, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 4, -8
 225              		.cfi_offset 14, -4
 294:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 226              		.loc 1 294 0
 227 0002 0400     		movs	r4, r0
 297:Generated_Source\PSoC4/Timer.c **** 
 228              		.loc 1 297 0
 229 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 230              	.LVL11:
 299:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 231              		.loc 1 299 0
 232 0008 054B     		ldr	r3, .L16
 233 000a 064A     		ldr	r2, .L16+4
 234 000c 1968     		ldr	r1, [r3]
 303:Generated_Source\PSoC4/Timer.c **** 
 235              		.loc 1 303 0
 236              		@ sp needed
 299:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 237              		.loc 1 299 0
 238 000e 0A40     		ands	r2, r1
 239 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/Timer.c **** 
 240              		.loc 1 300 0
 241 0012 1A68     		ldr	r2, [r3]
 242 0014 1443     		orrs	r4, r2
 243              	.LVL12:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 29


 244 0016 1C60     		str	r4, [r3]
 302:Generated_Source\PSoC4/Timer.c **** }
 245              		.loc 1 302 0
 246 0018 FFF7FEFF 		bl	CyExitCriticalSection
 247              	.LVL13:
 303:Generated_Source\PSoC4/Timer.c **** 
 248              		.loc 1 303 0
 249 001c 10BD     		pop	{r4, pc}
 250              	.L17:
 251 001e C046     		.align	2
 252              	.L16:
 253 0020 00012040 		.word	1075839232
 254 0024 FFFFFFF8 		.word	-117440513
 255              		.cfi_endproc
 256              	.LFE5:
 257              		.size	Timer_SetMode, .-Timer_SetMode
 258              		.section	.text.Timer_SetQDMode,"ax",%progbits
 259              		.align	1
 260              		.global	Timer_SetQDMode
 261              		.code	16
 262              		.thumb_func
 263              		.type	Timer_SetQDMode, %function
 264              	Timer_SetQDMode:
 265              	.LFB6:
 327:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 266              		.loc 1 327 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              	.LVL14:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 327:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 275              		.loc 1 327 0
 276 0002 0400     		movs	r4, r0
 330:Generated_Source\PSoC4/Timer.c **** 
 277              		.loc 1 330 0
 278 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 279              	.LVL15:
 332:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 280              		.loc 1 332 0
 281 0008 054B     		ldr	r3, .L19
 282 000a 064A     		ldr	r2, .L19+4
 283 000c 1968     		ldr	r1, [r3]
 336:Generated_Source\PSoC4/Timer.c **** 
 284              		.loc 1 336 0
 285              		@ sp needed
 332:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 286              		.loc 1 332 0
 287 000e 0A40     		ands	r2, r1
 288 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/Timer.c **** 
 289              		.loc 1 333 0
 290 0012 1A68     		ldr	r2, [r3]
 291 0014 1443     		orrs	r4, r2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 30


 292              	.LVL16:
 293 0016 1C60     		str	r4, [r3]
 335:Generated_Source\PSoC4/Timer.c **** }
 294              		.loc 1 335 0
 295 0018 FFF7FEFF 		bl	CyExitCriticalSection
 296              	.LVL17:
 336:Generated_Source\PSoC4/Timer.c **** 
 297              		.loc 1 336 0
 298 001c 10BD     		pop	{r4, pc}
 299              	.L20:
 300 001e C046     		.align	2
 301              	.L19:
 302 0020 00012040 		.word	1075839232
 303 0024 FFFF8FFF 		.word	-7340033
 304              		.cfi_endproc
 305              	.LFE6:
 306              		.size	Timer_SetQDMode, .-Timer_SetQDMode
 307              		.section	.text.Timer_SetPrescaler,"ax",%progbits
 308              		.align	1
 309              		.global	Timer_SetPrescaler
 310              		.code	16
 311              		.thumb_func
 312              		.type	Timer_SetPrescaler, %function
 313              	Timer_SetPrescaler:
 314              	.LFB7:
 364:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 315              		.loc 1 364 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              	.LVL18:
 320 0000 10B5     		push	{r4, lr}
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 4, -8
 323              		.cfi_offset 14, -4
 364:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 324              		.loc 1 364 0
 325 0002 0400     		movs	r4, r0
 367:Generated_Source\PSoC4/Timer.c **** 
 326              		.loc 1 367 0
 327 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 328              	.LVL19:
 369:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 329              		.loc 1 369 0
 330 0008 054B     		ldr	r3, .L22
 331 000a 064A     		ldr	r2, .L22+4
 332 000c 1968     		ldr	r1, [r3]
 373:Generated_Source\PSoC4/Timer.c **** 
 333              		.loc 1 373 0
 334              		@ sp needed
 369:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 335              		.loc 1 369 0
 336 000e 0A40     		ands	r2, r1
 337 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/Timer.c **** 
 338              		.loc 1 370 0
 339 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 31


 340 0014 1443     		orrs	r4, r2
 341              	.LVL20:
 342 0016 1C60     		str	r4, [r3]
 372:Generated_Source\PSoC4/Timer.c **** }
 343              		.loc 1 372 0
 344 0018 FFF7FEFF 		bl	CyExitCriticalSection
 345              	.LVL21:
 373:Generated_Source\PSoC4/Timer.c **** 
 346              		.loc 1 373 0
 347 001c 10BD     		pop	{r4, pc}
 348              	.L23:
 349 001e C046     		.align	2
 350              	.L22:
 351 0020 00012040 		.word	1075839232
 352 0024 FF00FFFF 		.word	-65281
 353              		.cfi_endproc
 354              	.LFE7:
 355              		.size	Timer_SetPrescaler, .-Timer_SetPrescaler
 356              		.section	.text.Timer_SetOneShot,"ax",%progbits
 357              		.align	1
 358              		.global	Timer_SetOneShot
 359              		.code	16
 360              		.thumb_func
 361              		.type	Timer_SetOneShot, %function
 362              	Timer_SetOneShot:
 363              	.LFB8:
 396:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 364              		.loc 1 396 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              	.LVL22:
 369 0000 10B5     		push	{r4, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 4, -8
 372              		.cfi_offset 14, -4
 396:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 373              		.loc 1 396 0
 374 0002 0400     		movs	r4, r0
 399:Generated_Source\PSoC4/Timer.c **** 
 375              		.loc 1 399 0
 376 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 377              	.LVL23:
 401:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 378              		.loc 1 401 0
 379 0008 074B     		ldr	r3, .L25
 380 000a 084A     		ldr	r2, .L25+4
 381 000c 1968     		ldr	r1, [r3]
 406:Generated_Source\PSoC4/Timer.c **** 
 382              		.loc 1 406 0
 383              		@ sp needed
 401:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 384              		.loc 1 401 0
 385 000e 0A40     		ands	r2, r1
 386 0010 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/Timer.c ****                                                                Timer_ONESHOT_SHIFT));
 387              		.loc 1 402 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 32


 388 0012 A204     		lsls	r2, r4, #18
 389 0014 8024     		movs	r4, #128
 390              	.LVL24:
 391 0016 1968     		ldr	r1, [r3]
 392 0018 E402     		lsls	r4, r4, #11
 393 001a 2240     		ands	r2, r4
 394 001c 0A43     		orrs	r2, r1
 395 001e 1A60     		str	r2, [r3]
 405:Generated_Source\PSoC4/Timer.c **** }
 396              		.loc 1 405 0
 397 0020 FFF7FEFF 		bl	CyExitCriticalSection
 398              	.LVL25:
 406:Generated_Source\PSoC4/Timer.c **** 
 399              		.loc 1 406 0
 400 0024 10BD     		pop	{r4, pc}
 401              	.L26:
 402 0026 C046     		.align	2
 403              	.L25:
 404 0028 00012040 		.word	1075839232
 405 002c FFFFFBFF 		.word	-262145
 406              		.cfi_endproc
 407              	.LFE8:
 408              		.size	Timer_SetOneShot, .-Timer_SetOneShot
 409              		.section	.text.Timer_SetPWMMode,"ax",%progbits
 410              		.align	1
 411              		.global	Timer_SetPWMMode
 412              		.code	16
 413              		.thumb_func
 414              		.type	Timer_SetPWMMode, %function
 415              	Timer_SetPWMMode:
 416              	.LFB9:
 450:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 417              		.loc 1 450 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL26:
 451:Generated_Source\PSoC4/Timer.c **** }
 423              		.loc 1 451 0
 424 0000 3F23     		movs	r3, #63
 425 0002 1840     		ands	r0, r3
 426              	.LVL27:
 427 0004 014B     		ldr	r3, .L28
 452:Generated_Source\PSoC4/Timer.c **** 
 428              		.loc 1 452 0
 429              		@ sp needed
 451:Generated_Source\PSoC4/Timer.c **** }
 430              		.loc 1 451 0
 431 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/Timer.c **** 
 432              		.loc 1 452 0
 433 0008 7047     		bx	lr
 434              	.L29:
 435 000a C046     		.align	2
 436              	.L28:
 437 000c 28012040 		.word	1075839272
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 33


 438              		.cfi_endproc
 439              	.LFE9:
 440              		.size	Timer_SetPWMMode, .-Timer_SetPWMMode
 441              		.section	.text.Timer_SetPWMSyncKill,"ax",%progbits
 442              		.align	1
 443              		.global	Timer_SetPWMSyncKill
 444              		.code	16
 445              		.thumb_func
 446              		.type	Timer_SetPWMSyncKill, %function
 447              	Timer_SetPWMSyncKill:
 448              	.LFB10:
 486:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 449              		.loc 1 486 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL28:
 454 0000 10B5     		push	{r4, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 486:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 458              		.loc 1 486 0
 459 0002 0400     		movs	r4, r0
 489:Generated_Source\PSoC4/Timer.c **** 
 460              		.loc 1 489 0
 461 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 462              	.LVL29:
 491:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 463              		.loc 1 491 0
 464 0008 0422     		movs	r2, #4
 465 000a 064B     		ldr	r3, .L31
 492:Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
 466              		.loc 1 492 0
 467 000c A400     		lsls	r4, r4, #2
 468              	.LVL30:
 491:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 469              		.loc 1 491 0
 470 000e 1968     		ldr	r1, [r3]
 496:Generated_Source\PSoC4/Timer.c **** 
 471              		.loc 1 496 0
 472              		@ sp needed
 491:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 473              		.loc 1 491 0
 474 0010 9143     		bics	r1, r2
 475 0012 1960     		str	r1, [r3]
 492:Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
 476              		.loc 1 492 0
 477 0014 1968     		ldr	r1, [r3]
 478 0016 2240     		ands	r2, r4
 479 0018 0A43     		orrs	r2, r1
 480 001a 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC4/Timer.c **** }
 481              		.loc 1 495 0
 482 001c FFF7FEFF 		bl	CyExitCriticalSection
 483              	.LVL31:
 496:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 34


 484              		.loc 1 496 0
 485 0020 10BD     		pop	{r4, pc}
 486              	.L32:
 487 0022 C046     		.align	2
 488              	.L31:
 489 0024 00012040 		.word	1075839232
 490              		.cfi_endproc
 491              	.LFE10:
 492              		.size	Timer_SetPWMSyncKill, .-Timer_SetPWMSyncKill
 493              		.section	.text.Timer_SetPWMStopOnKill,"ax",%progbits
 494              		.align	1
 495              		.global	Timer_SetPWMStopOnKill
 496              		.code	16
 497              		.thumb_func
 498              		.type	Timer_SetPWMStopOnKill, %function
 499              	Timer_SetPWMStopOnKill:
 500              	.LFB11:
 520:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 501              		.loc 1 520 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL32:
 506 0000 10B5     		push	{r4, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 4, -8
 509              		.cfi_offset 14, -4
 520:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 510              		.loc 1 520 0
 511 0002 0400     		movs	r4, r0
 523:Generated_Source\PSoC4/Timer.c **** 
 512              		.loc 1 523 0
 513 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 514              	.LVL33:
 525:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 515              		.loc 1 525 0
 516 0008 0822     		movs	r2, #8
 517 000a 064B     		ldr	r3, .L34
 526:Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 518              		.loc 1 526 0
 519 000c E400     		lsls	r4, r4, #3
 520              	.LVL34:
 525:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 521              		.loc 1 525 0
 522 000e 1968     		ldr	r1, [r3]
 530:Generated_Source\PSoC4/Timer.c **** 
 523              		.loc 1 530 0
 524              		@ sp needed
 525:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 525              		.loc 1 525 0
 526 0010 9143     		bics	r1, r2
 527 0012 1960     		str	r1, [r3]
 526:Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 528              		.loc 1 526 0
 529 0014 1968     		ldr	r1, [r3]
 530 0016 2240     		ands	r2, r4
 531 0018 0A43     		orrs	r2, r1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 35


 532 001a 1A60     		str	r2, [r3]
 529:Generated_Source\PSoC4/Timer.c **** }
 533              		.loc 1 529 0
 534 001c FFF7FEFF 		bl	CyExitCriticalSection
 535              	.LVL35:
 530:Generated_Source\PSoC4/Timer.c **** 
 536              		.loc 1 530 0
 537 0020 10BD     		pop	{r4, pc}
 538              	.L35:
 539 0022 C046     		.align	2
 540              	.L34:
 541 0024 00012040 		.word	1075839232
 542              		.cfi_endproc
 543              	.LFE11:
 544              		.size	Timer_SetPWMStopOnKill, .-Timer_SetPWMStopOnKill
 545              		.section	.text.Timer_SetPWMDeadTime,"ax",%progbits
 546              		.align	1
 547              		.global	Timer_SetPWMDeadTime
 548              		.code	16
 549              		.thumb_func
 550              		.type	Timer_SetPWMDeadTime, %function
 551              	Timer_SetPWMDeadTime:
 552              	.LFB12:
 553:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 553              		.loc 1 553 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              	.LVL36:
 558 0000 10B5     		push	{r4, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 4, -8
 561              		.cfi_offset 14, -4
 553:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 562              		.loc 1 553 0
 563 0002 0400     		movs	r4, r0
 556:Generated_Source\PSoC4/Timer.c **** 
 564              		.loc 1 556 0
 565 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 566              	.LVL37:
 558:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 567              		.loc 1 558 0
 568 0008 064B     		ldr	r3, .L37
 569 000a 074A     		ldr	r2, .L37+4
 570 000c 1968     		ldr	r1, [r3]
 559:Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 571              		.loc 1 559 0
 572 000e 2406     		lsls	r4, r4, #24
 573              	.LVL38:
 558:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 574              		.loc 1 558 0
 575 0010 0A40     		ands	r2, r1
 576 0012 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 577              		.loc 1 559 0
 578 0014 1A68     		ldr	r2, [r3]
 579 0016 240C     		lsrs	r4, r4, #16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 36


 580 0018 1443     		orrs	r4, r2
 581 001a 1C60     		str	r4, [r3]
 562:Generated_Source\PSoC4/Timer.c **** }
 582              		.loc 1 562 0
 583 001c FFF7FEFF 		bl	CyExitCriticalSection
 584              	.LVL39:
 563:Generated_Source\PSoC4/Timer.c **** 
 585              		.loc 1 563 0
 586              		@ sp needed
 587 0020 10BD     		pop	{r4, pc}
 588              	.L38:
 589 0022 C046     		.align	2
 590              	.L37:
 591 0024 00012040 		.word	1075839232
 592 0028 FF00FFFF 		.word	-65281
 593              		.cfi_endproc
 594              	.LFE12:
 595              		.size	Timer_SetPWMDeadTime, .-Timer_SetPWMDeadTime
 596              		.section	.text.Timer_SetPWMInvert,"ax",%progbits
 597              		.align	1
 598              		.global	Timer_SetPWMInvert
 599              		.code	16
 600              		.thumb_func
 601              		.type	Timer_SetPWMInvert, %function
 602              	Timer_SetPWMInvert:
 603              	.LFB13:
 586:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 604              		.loc 1 586 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              	.LVL40:
 609 0000 10B5     		push	{r4, lr}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 4, -8
 612              		.cfi_offset 14, -4
 586:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 613              		.loc 1 586 0
 614 0002 0400     		movs	r4, r0
 589:Generated_Source\PSoC4/Timer.c **** 
 615              		.loc 1 589 0
 616 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 617              	.LVL41:
 591:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 618              		.loc 1 591 0
 619 0008 054B     		ldr	r3, .L40
 620 000a 064A     		ldr	r2, .L40+4
 621 000c 1968     		ldr	r1, [r3]
 595:Generated_Source\PSoC4/Timer.c **** 
 622              		.loc 1 595 0
 623              		@ sp needed
 591:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 624              		.loc 1 591 0
 625 000e 0A40     		ands	r2, r1
 626 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/Timer.c **** 
 627              		.loc 1 592 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 37


 628 0012 1A68     		ldr	r2, [r3]
 629 0014 1443     		orrs	r4, r2
 630              	.LVL42:
 631 0016 1C60     		str	r4, [r3]
 594:Generated_Source\PSoC4/Timer.c **** }
 632              		.loc 1 594 0
 633 0018 FFF7FEFF 		bl	CyExitCriticalSection
 634              	.LVL43:
 595:Generated_Source\PSoC4/Timer.c **** 
 635              		.loc 1 595 0
 636 001c 10BD     		pop	{r4, pc}
 637              	.L41:
 638 001e C046     		.align	2
 639              	.L40:
 640 0020 00012040 		.word	1075839232
 641 0024 FFFFCFFF 		.word	-3145729
 642              		.cfi_endproc
 643              	.LFE13:
 644              		.size	Timer_SetPWMInvert, .-Timer_SetPWMInvert
 645              		.section	.text.Timer_WriteCounter,"ax",%progbits
 646              		.align	1
 647              		.global	Timer_WriteCounter
 648              		.code	16
 649              		.thumb_func
 650              		.type	Timer_WriteCounter, %function
 651              	Timer_WriteCounter:
 652              	.LFB14:
 616:Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 653              		.loc 1 616 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658              	.LVL44:
 617:Generated_Source\PSoC4/Timer.c **** }
 659              		.loc 1 617 0
 660 0000 014B     		ldr	r3, .L43
 661 0002 80B2     		uxth	r0, r0
 662              	.LVL45:
 663 0004 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/Timer.c **** 
 664              		.loc 1 618 0
 665              		@ sp needed
 666 0006 7047     		bx	lr
 667              	.L44:
 668              		.align	2
 669              	.L43:
 670 0008 08012040 		.word	1075839240
 671              		.cfi_endproc
 672              	.LFE14:
 673              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 674              		.section	.text.Timer_ReadCounter,"ax",%progbits
 675              		.align	1
 676              		.global	Timer_ReadCounter
 677              		.code	16
 678              		.thumb_func
 679              		.type	Timer_ReadCounter, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 38


 680              	Timer_ReadCounter:
 681              	.LFB15:
 636:Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 682              		.loc 1 636 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 637:Generated_Source\PSoC4/Timer.c **** }
 687              		.loc 1 637 0
 688 0000 014B     		ldr	r3, .L46
 638:Generated_Source\PSoC4/Timer.c **** 
 689              		.loc 1 638 0
 690              		@ sp needed
 637:Generated_Source\PSoC4/Timer.c **** }
 691              		.loc 1 637 0
 692 0002 1868     		ldr	r0, [r3]
 693 0004 80B2     		uxth	r0, r0
 638:Generated_Source\PSoC4/Timer.c **** 
 694              		.loc 1 638 0
 695 0006 7047     		bx	lr
 696              	.L47:
 697              		.align	2
 698              	.L46:
 699 0008 08012040 		.word	1075839240
 700              		.cfi_endproc
 701              	.LFE15:
 702              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 703              		.section	.text.Timer_SetCounterMode,"ax",%progbits
 704              		.align	1
 705              		.global	Timer_SetCounterMode
 706              		.code	16
 707              		.thumb_func
 708              		.type	Timer_SetCounterMode, %function
 709              	Timer_SetCounterMode:
 710              	.LFB16:
 665:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 711              		.loc 1 665 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              	.LVL46:
 716 0000 10B5     		push	{r4, lr}
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 4, -8
 719              		.cfi_offset 14, -4
 665:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 720              		.loc 1 665 0
 721 0002 0400     		movs	r4, r0
 668:Generated_Source\PSoC4/Timer.c **** 
 722              		.loc 1 668 0
 723 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 724              	.LVL47:
 670:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 725              		.loc 1 670 0
 726 0008 054B     		ldr	r3, .L49
 727 000a 064A     		ldr	r2, .L49+4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 39


 728 000c 1968     		ldr	r1, [r3]
 674:Generated_Source\PSoC4/Timer.c **** 
 729              		.loc 1 674 0
 730              		@ sp needed
 670:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 731              		.loc 1 670 0
 732 000e 0A40     		ands	r2, r1
 733 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/Timer.c **** 
 734              		.loc 1 671 0
 735 0012 1A68     		ldr	r2, [r3]
 736 0014 1443     		orrs	r4, r2
 737              	.LVL48:
 738 0016 1C60     		str	r4, [r3]
 673:Generated_Source\PSoC4/Timer.c **** }
 739              		.loc 1 673 0
 740 0018 FFF7FEFF 		bl	CyExitCriticalSection
 741              	.LVL49:
 674:Generated_Source\PSoC4/Timer.c **** 
 742              		.loc 1 674 0
 743 001c 10BD     		pop	{r4, pc}
 744              	.L50:
 745 001e C046     		.align	2
 746              	.L49:
 747 0020 00012040 		.word	1075839232
 748 0024 FFFFFCFF 		.word	-196609
 749              		.cfi_endproc
 750              	.LFE16:
 751              		.size	Timer_SetCounterMode, .-Timer_SetCounterMode
 752              		.section	.text.Timer_WritePeriod,"ax",%progbits
 753              		.align	1
 754              		.global	Timer_WritePeriod
 755              		.code	16
 756              		.thumb_func
 757              		.type	Timer_WritePeriod, %function
 758              	Timer_WritePeriod:
 759              	.LFB17:
 694:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 760              		.loc 1 694 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765              	.LVL50:
 695:Generated_Source\PSoC4/Timer.c **** }
 766              		.loc 1 695 0
 767 0000 014B     		ldr	r3, .L52
 768 0002 80B2     		uxth	r0, r0
 769              	.LVL51:
 770 0004 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/Timer.c **** 
 771              		.loc 1 696 0
 772              		@ sp needed
 773 0006 7047     		bx	lr
 774              	.L53:
 775              		.align	2
 776              	.L52:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 40


 777 0008 14012040 		.word	1075839252
 778              		.cfi_endproc
 779              	.LFE17:
 780              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 781              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 782              		.align	1
 783              		.global	Timer_ReadPeriod
 784              		.code	16
 785              		.thumb_func
 786              		.type	Timer_ReadPeriod, %function
 787              	Timer_ReadPeriod:
 788              	.LFB18:
 714:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 789              		.loc 1 714 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 715:Generated_Source\PSoC4/Timer.c **** }
 794              		.loc 1 715 0
 795 0000 014B     		ldr	r3, .L55
 716:Generated_Source\PSoC4/Timer.c **** 
 796              		.loc 1 716 0
 797              		@ sp needed
 715:Generated_Source\PSoC4/Timer.c **** }
 798              		.loc 1 715 0
 799 0002 1868     		ldr	r0, [r3]
 800 0004 80B2     		uxth	r0, r0
 716:Generated_Source\PSoC4/Timer.c **** 
 801              		.loc 1 716 0
 802 0006 7047     		bx	lr
 803              	.L56:
 804              		.align	2
 805              	.L55:
 806 0008 14012040 		.word	1075839252
 807              		.cfi_endproc
 808              	.LFE18:
 809              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 810              		.section	.text.Timer_SetCompareSwap,"ax",%progbits
 811              		.align	1
 812              		.global	Timer_SetCompareSwap
 813              		.code	16
 814              		.thumb_func
 815              		.type	Timer_SetCompareSwap, %function
 816              	Timer_SetCompareSwap:
 817              	.LFB19:
 740:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 818              		.loc 1 740 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              	.LVL52:
 823 0000 10B5     		push	{r4, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 4, -8
 826              		.cfi_offset 14, -4
 740:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 41


 827              		.loc 1 740 0
 828 0002 0400     		movs	r4, r0
 743:Generated_Source\PSoC4/Timer.c **** 
 829              		.loc 1 743 0
 830 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 831              	.LVL53:
 745:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 832              		.loc 1 745 0
 833 0008 0122     		movs	r2, #1
 834 000a 054B     		ldr	r3, .L58
 749:Generated_Source\PSoC4/Timer.c **** 
 835              		.loc 1 749 0
 836              		@ sp needed
 745:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 837              		.loc 1 745 0
 838 000c 1968     		ldr	r1, [r3]
 839 000e 9143     		bics	r1, r2
 840 0010 1960     		str	r1, [r3]
 746:Generated_Source\PSoC4/Timer.c **** 
 841              		.loc 1 746 0
 842 0012 1968     		ldr	r1, [r3]
 843 0014 2240     		ands	r2, r4
 844 0016 0A43     		orrs	r2, r1
 845 0018 1A60     		str	r2, [r3]
 748:Generated_Source\PSoC4/Timer.c **** }
 846              		.loc 1 748 0
 847 001a FFF7FEFF 		bl	CyExitCriticalSection
 848              	.LVL54:
 849              	.LVL55:
 749:Generated_Source\PSoC4/Timer.c **** 
 850              		.loc 1 749 0
 851 001e 10BD     		pop	{r4, pc}
 852              	.L59:
 853              		.align	2
 854              	.L58:
 855 0020 00012040 		.word	1075839232
 856              		.cfi_endproc
 857              	.LFE19:
 858              		.size	Timer_SetCompareSwap, .-Timer_SetCompareSwap
 859              		.section	.text.Timer_WritePeriodBuf,"ax",%progbits
 860              		.align	1
 861              		.global	Timer_WritePeriodBuf
 862              		.code	16
 863              		.thumb_func
 864              		.type	Timer_WritePeriodBuf, %function
 865              	Timer_WritePeriodBuf:
 866              	.LFB20:
 767:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 867              		.loc 1 767 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872              	.LVL56:
 768:Generated_Source\PSoC4/Timer.c **** }
 873              		.loc 1 768 0
 874 0000 014B     		ldr	r3, .L61
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 42


 875 0002 80B2     		uxth	r0, r0
 876              	.LVL57:
 877 0004 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/Timer.c **** 
 878              		.loc 1 769 0
 879              		@ sp needed
 880 0006 7047     		bx	lr
 881              	.L62:
 882              		.align	2
 883              	.L61:
 884 0008 18012040 		.word	1075839256
 885              		.cfi_endproc
 886              	.LFE20:
 887              		.size	Timer_WritePeriodBuf, .-Timer_WritePeriodBuf
 888              		.section	.text.Timer_ReadPeriodBuf,"ax",%progbits
 889              		.align	1
 890              		.global	Timer_ReadPeriodBuf
 891              		.code	16
 892              		.thumb_func
 893              		.type	Timer_ReadPeriodBuf, %function
 894              	Timer_ReadPeriodBuf:
 895              	.LFB21:
 787:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 896              		.loc 1 787 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 788:Generated_Source\PSoC4/Timer.c **** }
 901              		.loc 1 788 0
 902 0000 014B     		ldr	r3, .L64
 789:Generated_Source\PSoC4/Timer.c **** 
 903              		.loc 1 789 0
 904              		@ sp needed
 788:Generated_Source\PSoC4/Timer.c **** }
 905              		.loc 1 788 0
 906 0002 1868     		ldr	r0, [r3]
 907 0004 80B2     		uxth	r0, r0
 789:Generated_Source\PSoC4/Timer.c **** 
 908              		.loc 1 789 0
 909 0006 7047     		bx	lr
 910              	.L65:
 911              		.align	2
 912              	.L64:
 913 0008 18012040 		.word	1075839256
 914              		.cfi_endproc
 915              	.LFE21:
 916              		.size	Timer_ReadPeriodBuf, .-Timer_ReadPeriodBuf
 917              		.section	.text.Timer_SetPeriodSwap,"ax",%progbits
 918              		.align	1
 919              		.global	Timer_SetPeriodSwap
 920              		.code	16
 921              		.thumb_func
 922              		.type	Timer_SetPeriodSwap, %function
 923              	Timer_SetPeriodSwap:
 924              	.LFB22:
 813:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 43


 925              		.loc 1 813 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL58:
 930 0000 10B5     		push	{r4, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 4, -8
 933              		.cfi_offset 14, -4
 813:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 934              		.loc 1 813 0
 935 0002 0400     		movs	r4, r0
 816:Generated_Source\PSoC4/Timer.c **** 
 936              		.loc 1 816 0
 937 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 938              	.LVL59:
 818:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 939              		.loc 1 818 0
 940 0008 0222     		movs	r2, #2
 941 000a 064B     		ldr	r3, .L67
 819:Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 942              		.loc 1 819 0
 943 000c 6400     		lsls	r4, r4, #1
 944              	.LVL60:
 818:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 945              		.loc 1 818 0
 946 000e 1968     		ldr	r1, [r3]
 823:Generated_Source\PSoC4/Timer.c **** 
 947              		.loc 1 823 0
 948              		@ sp needed
 818:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 949              		.loc 1 818 0
 950 0010 9143     		bics	r1, r2
 951 0012 1960     		str	r1, [r3]
 819:Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 952              		.loc 1 819 0
 953 0014 1968     		ldr	r1, [r3]
 954 0016 2240     		ands	r2, r4
 955 0018 0A43     		orrs	r2, r1
 956 001a 1A60     		str	r2, [r3]
 822:Generated_Source\PSoC4/Timer.c **** }
 957              		.loc 1 822 0
 958 001c FFF7FEFF 		bl	CyExitCriticalSection
 959              	.LVL61:
 823:Generated_Source\PSoC4/Timer.c **** 
 960              		.loc 1 823 0
 961 0020 10BD     		pop	{r4, pc}
 962              	.L68:
 963 0022 C046     		.align	2
 964              	.L67:
 965 0024 00012040 		.word	1075839232
 966              		.cfi_endproc
 967              	.LFE22:
 968              		.size	Timer_SetPeriodSwap, .-Timer_SetPeriodSwap
 969              		.section	.text.Timer_WriteCompare,"ax",%progbits
 970              		.align	1
 971              		.global	Timer_WriteCompare
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 44


 972              		.code	16
 973              		.thumb_func
 974              		.type	Timer_WriteCompare, %function
 975              	Timer_WriteCompare:
 976              	.LFB23:
 850:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 977              		.loc 1 850 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982              	.LVL62:
 873:Generated_Source\PSoC4/Timer.c **** }
 983              		.loc 1 873 0
 984 0000 014B     		ldr	r3, .L70
 985 0002 80B2     		uxth	r0, r0
 986              	.LVL63:
 987 0004 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/Timer.c **** 
 988              		.loc 1 874 0
 989              		@ sp needed
 990 0006 7047     		bx	lr
 991              	.L71:
 992              		.align	2
 993              	.L70:
 994 0008 0C012040 		.word	1075839244
 995              		.cfi_endproc
 996              	.LFE23:
 997              		.size	Timer_WriteCompare, .-Timer_WriteCompare
 998              		.section	.text.Timer_ReadCompare,"ax",%progbits
 999              		.align	1
 1000              		.global	Timer_ReadCompare
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	Timer_ReadCompare, %function
 1004              	Timer_ReadCompare:
 1005              	.LFB44:
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
 1010 0000 014B     		ldr	r3, .L73
 1011              		@ sp needed
 1012 0002 1868     		ldr	r0, [r3]
 1013 0004 80B2     		uxth	r0, r0
 1014 0006 7047     		bx	lr
 1015              	.L74:
 1016              		.align	2
 1017              	.L73:
 1018 0008 0C012040 		.word	1075839244
 1019              		.cfi_endproc
 1020              	.LFE44:
 1021              		.size	Timer_ReadCompare, .-Timer_ReadCompare
 1022              		.section	.text.Timer_WriteCompareBuf,"ax",%progbits
 1023              		.align	1
 1024              		.global	Timer_WriteCompareBuf
 1025              		.code	16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 45


 1026              		.thumb_func
 1027              		.type	Timer_WriteCompareBuf, %function
 1028              	Timer_WriteCompareBuf:
 1029              	.LFB25:
 955:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 1030              		.loc 1 955 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035              	.LVL64:
 976:Generated_Source\PSoC4/Timer.c **** }
 1036              		.loc 1 976 0
 1037 0000 014B     		ldr	r3, .L76
 1038 0002 80B2     		uxth	r0, r0
 1039              	.LVL65:
 1040 0004 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/Timer.c **** 
 1041              		.loc 1 977 0
 1042              		@ sp needed
 1043 0006 7047     		bx	lr
 1044              	.L77:
 1045              		.align	2
 1046              	.L76:
 1047 0008 10012040 		.word	1075839248
 1048              		.cfi_endproc
 1049              	.LFE25:
 1050              		.size	Timer_WriteCompareBuf, .-Timer_WriteCompareBuf
 1051              		.section	.text.Timer_ReadCompareBuf,"ax",%progbits
 1052              		.align	1
 1053              		.global	Timer_ReadCompareBuf
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	Timer_ReadCompareBuf, %function
 1057              	Timer_ReadCompareBuf:
 1058              	.LFB42:
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
 1063 0000 014B     		ldr	r3, .L79
 1064              		@ sp needed
 1065 0002 1868     		ldr	r0, [r3]
 1066 0004 80B2     		uxth	r0, r0
 1067 0006 7047     		bx	lr
 1068              	.L80:
 1069              		.align	2
 1070              	.L79:
 1071 0008 10012040 		.word	1075839248
 1072              		.cfi_endproc
 1073              	.LFE42:
 1074              		.size	Timer_ReadCompareBuf, .-Timer_ReadCompareBuf
 1075              		.section	.text.Timer_ReadCapture,"ax",%progbits
 1076              		.align	1
 1077              		.global	Timer_ReadCapture
 1078              		.code	16
 1079              		.thumb_func
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 46


 1080              		.type	Timer_ReadCapture, %function
 1081              	Timer_ReadCapture:
 1082              	.LFB27:
1047:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 1083              		.loc 1 1047 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
1048:Generated_Source\PSoC4/Timer.c **** }
 1088              		.loc 1 1048 0
 1089 0000 014B     		ldr	r3, .L82
1049:Generated_Source\PSoC4/Timer.c **** 
 1090              		.loc 1 1049 0
 1091              		@ sp needed
1048:Generated_Source\PSoC4/Timer.c **** }
 1092              		.loc 1 1048 0
 1093 0002 1868     		ldr	r0, [r3]
 1094 0004 80B2     		uxth	r0, r0
1049:Generated_Source\PSoC4/Timer.c **** 
 1095              		.loc 1 1049 0
 1096 0006 7047     		bx	lr
 1097              	.L83:
 1098              		.align	2
 1099              	.L82:
 1100 0008 0C012040 		.word	1075839244
 1101              		.cfi_endproc
 1102              	.LFE27:
 1103              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 1104              		.section	.text.Timer_ReadCaptureBuf,"ax",%progbits
 1105              		.align	1
 1106              		.global	Timer_ReadCaptureBuf
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	Timer_ReadCaptureBuf, %function
 1110              	Timer_ReadCaptureBuf:
 1111              	.LFB28:
1068:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 1112              		.loc 1 1068 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
1069:Generated_Source\PSoC4/Timer.c **** }
 1117              		.loc 1 1069 0
 1118 0000 014B     		ldr	r3, .L85
1070:Generated_Source\PSoC4/Timer.c **** 
 1119              		.loc 1 1070 0
 1120              		@ sp needed
1069:Generated_Source\PSoC4/Timer.c **** }
 1121              		.loc 1 1069 0
 1122 0002 1868     		ldr	r0, [r3]
 1123 0004 80B2     		uxth	r0, r0
1070:Generated_Source\PSoC4/Timer.c **** 
 1124              		.loc 1 1070 0
 1125 0006 7047     		bx	lr
 1126              	.L86:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 47


 1127              		.align	2
 1128              	.L85:
 1129 0008 10012040 		.word	1075839248
 1130              		.cfi_endproc
 1131              	.LFE28:
 1132              		.size	Timer_ReadCaptureBuf, .-Timer_ReadCaptureBuf
 1133              		.section	.text.Timer_SetCaptureMode,"ax",%progbits
 1134              		.align	1
 1135              		.global	Timer_SetCaptureMode
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	Timer_SetCaptureMode, %function
 1139              	Timer_SetCaptureMode:
 1140              	.LFB29:
1095:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1141              		.loc 1 1095 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL66:
 1146 0000 10B5     		push	{r4, lr}
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 4, -8
 1149              		.cfi_offset 14, -4
1095:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1150              		.loc 1 1095 0
 1151 0002 0400     		movs	r4, r0
1098:Generated_Source\PSoC4/Timer.c **** 
 1152              		.loc 1 1098 0
 1153 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1154              	.LVL67:
1100:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
 1155              		.loc 1 1100 0
 1156 0008 0321     		movs	r1, #3
 1157 000a 054B     		ldr	r3, .L88
1104:Generated_Source\PSoC4/Timer.c **** 
 1158              		.loc 1 1104 0
 1159              		@ sp needed
1100:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
 1160              		.loc 1 1100 0
 1161 000c 1A68     		ldr	r2, [r3]
 1162 000e 8A43     		bics	r2, r1
 1163 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/Timer.c **** 
 1164              		.loc 1 1101 0
 1165 0012 1A68     		ldr	r2, [r3]
 1166 0014 1443     		orrs	r4, r2
 1167              	.LVL68:
 1168 0016 1C60     		str	r4, [r3]
1103:Generated_Source\PSoC4/Timer.c **** }
 1169              		.loc 1 1103 0
 1170 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1171              	.LVL69:
1104:Generated_Source\PSoC4/Timer.c **** 
 1172              		.loc 1 1104 0
 1173 001c 10BD     		pop	{r4, pc}
 1174              	.L89:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 48


 1175 001e C046     		.align	2
 1176              	.L88:
 1177 0020 24012040 		.word	1075839268
 1178              		.cfi_endproc
 1179              	.LFE29:
 1180              		.size	Timer_SetCaptureMode, .-Timer_SetCaptureMode
 1181              		.section	.text.Timer_SetReloadMode,"ax",%progbits
 1182              		.align	1
 1183              		.global	Timer_SetReloadMode
 1184              		.code	16
 1185              		.thumb_func
 1186              		.type	Timer_SetReloadMode, %function
 1187              	Timer_SetReloadMode:
 1188              	.LFB30:
1128:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1189              		.loc 1 1128 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              	.LVL70:
 1194 0000 10B5     		push	{r4, lr}
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 4, -8
 1197              		.cfi_offset 14, -4
1128:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1198              		.loc 1 1128 0
 1199 0002 0400     		movs	r4, r0
1131:Generated_Source\PSoC4/Timer.c **** 
 1200              		.loc 1 1131 0
 1201 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1202              	.LVL71:
1133:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1203              		.loc 1 1133 0
 1204 0008 3021     		movs	r1, #48
 1205 000a 054B     		ldr	r3, .L91
1137:Generated_Source\PSoC4/Timer.c **** 
 1206              		.loc 1 1137 0
 1207              		@ sp needed
1133:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1208              		.loc 1 1133 0
 1209 000c 1A68     		ldr	r2, [r3]
 1210 000e 8A43     		bics	r2, r1
 1211 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/Timer.c **** 
 1212              		.loc 1 1134 0
 1213 0012 1968     		ldr	r1, [r3]
 1214 0014 2201     		lsls	r2, r4, #4
 1215 0016 0A43     		orrs	r2, r1
 1216 0018 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC4/Timer.c **** }
 1217              		.loc 1 1136 0
 1218 001a FFF7FEFF 		bl	CyExitCriticalSection
 1219              	.LVL72:
 1220              	.LVL73:
1137:Generated_Source\PSoC4/Timer.c **** 
 1221              		.loc 1 1137 0
 1222 001e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 49


 1223              	.L92:
 1224              		.align	2
 1225              	.L91:
 1226 0020 24012040 		.word	1075839268
 1227              		.cfi_endproc
 1228              	.LFE30:
 1229              		.size	Timer_SetReloadMode, .-Timer_SetReloadMode
 1230              		.section	.text.Timer_SetStartMode,"ax",%progbits
 1231              		.align	1
 1232              		.global	Timer_SetStartMode
 1233              		.code	16
 1234              		.thumb_func
 1235              		.type	Timer_SetStartMode, %function
 1236              	Timer_SetStartMode:
 1237              	.LFB31:
1161:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1238              		.loc 1 1161 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              	.LVL74:
 1243 0000 10B5     		push	{r4, lr}
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 4, -8
 1246              		.cfi_offset 14, -4
1161:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1247              		.loc 1 1161 0
 1248 0002 0400     		movs	r4, r0
1164:Generated_Source\PSoC4/Timer.c **** 
 1249              		.loc 1 1164 0
 1250 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1251              	.LVL75:
1166:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1252              		.loc 1 1166 0
 1253 0008 054B     		ldr	r3, .L94
 1254 000a 064A     		ldr	r2, .L94+4
 1255 000c 1968     		ldr	r1, [r3]
1170:Generated_Source\PSoC4/Timer.c **** 
 1256              		.loc 1 1170 0
 1257              		@ sp needed
1166:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1258              		.loc 1 1166 0
 1259 000e 0A40     		ands	r2, r1
 1260 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/Timer.c **** 
 1261              		.loc 1 1167 0
 1262 0012 1968     		ldr	r1, [r3]
 1263 0014 2202     		lsls	r2, r4, #8
 1264 0016 0A43     		orrs	r2, r1
 1265 0018 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC4/Timer.c **** }
 1266              		.loc 1 1169 0
 1267 001a FFF7FEFF 		bl	CyExitCriticalSection
 1268              	.LVL76:
 1269              	.LVL77:
1170:Generated_Source\PSoC4/Timer.c **** 
 1270              		.loc 1 1170 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 50


 1271 001e 10BD     		pop	{r4, pc}
 1272              	.L95:
 1273              		.align	2
 1274              	.L94:
 1275 0020 24012040 		.word	1075839268
 1276 0024 FFFCFFFF 		.word	-769
 1277              		.cfi_endproc
 1278              	.LFE31:
 1279              		.size	Timer_SetStartMode, .-Timer_SetStartMode
 1280              		.section	.text.Timer_SetStopMode,"ax",%progbits
 1281              		.align	1
 1282              		.global	Timer_SetStopMode
 1283              		.code	16
 1284              		.thumb_func
 1285              		.type	Timer_SetStopMode, %function
 1286              	Timer_SetStopMode:
 1287              	.LFB32:
1193:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1288              		.loc 1 1193 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292              	.LVL78:
 1293 0000 10B5     		push	{r4, lr}
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 4, -8
 1296              		.cfi_offset 14, -4
1193:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1297              		.loc 1 1193 0
 1298 0002 0400     		movs	r4, r0
1196:Generated_Source\PSoC4/Timer.c **** 
 1299              		.loc 1 1196 0
 1300 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1301              	.LVL79:
1198:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1302              		.loc 1 1198 0
 1303 0008 C021     		movs	r1, #192
 1304 000a 054B     		ldr	r3, .L97
1202:Generated_Source\PSoC4/Timer.c **** 
 1305              		.loc 1 1202 0
 1306              		@ sp needed
1198:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1307              		.loc 1 1198 0
 1308 000c 1A68     		ldr	r2, [r3]
 1309 000e 8A43     		bics	r2, r1
 1310 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/Timer.c **** 
 1311              		.loc 1 1199 0
 1312 0012 1968     		ldr	r1, [r3]
 1313 0014 A201     		lsls	r2, r4, #6
 1314 0016 0A43     		orrs	r2, r1
 1315 0018 1A60     		str	r2, [r3]
1201:Generated_Source\PSoC4/Timer.c **** }
 1316              		.loc 1 1201 0
 1317 001a FFF7FEFF 		bl	CyExitCriticalSection
 1318              	.LVL80:
 1319              	.LVL81:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 51


1202:Generated_Source\PSoC4/Timer.c **** 
 1320              		.loc 1 1202 0
 1321 001e 10BD     		pop	{r4, pc}
 1322              	.L98:
 1323              		.align	2
 1324              	.L97:
 1325 0020 24012040 		.word	1075839268
 1326              		.cfi_endproc
 1327              	.LFE32:
 1328              		.size	Timer_SetStopMode, .-Timer_SetStopMode
 1329              		.section	.text.Timer_SetCountMode,"ax",%progbits
 1330              		.align	1
 1331              		.global	Timer_SetCountMode
 1332              		.code	16
 1333              		.thumb_func
 1334              		.type	Timer_SetCountMode, %function
 1335              	Timer_SetCountMode:
 1336              	.LFB33:
1226:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1337              		.loc 1 1226 0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              	.LVL82:
 1342 0000 10B5     		push	{r4, lr}
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 4, -8
 1345              		.cfi_offset 14, -4
1226:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1346              		.loc 1 1226 0
 1347 0002 0400     		movs	r4, r0
1229:Generated_Source\PSoC4/Timer.c **** 
 1348              		.loc 1 1229 0
 1349 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1350              	.LVL83:
1231:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1351              		.loc 1 1231 0
 1352 0008 0C21     		movs	r1, #12
 1353 000a 054B     		ldr	r3, .L100
1235:Generated_Source\PSoC4/Timer.c **** 
 1354              		.loc 1 1235 0
 1355              		@ sp needed
1231:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1356              		.loc 1 1231 0
 1357 000c 1A68     		ldr	r2, [r3]
 1358 000e 8A43     		bics	r2, r1
 1359 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/Timer.c **** 
 1360              		.loc 1 1232 0
 1361 0012 1968     		ldr	r1, [r3]
 1362 0014 A200     		lsls	r2, r4, #2
 1363 0016 0A43     		orrs	r2, r1
 1364 0018 1A60     		str	r2, [r3]
1234:Generated_Source\PSoC4/Timer.c **** }
 1365              		.loc 1 1234 0
 1366 001a FFF7FEFF 		bl	CyExitCriticalSection
 1367              	.LVL84:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 52


 1368              	.LVL85:
1235:Generated_Source\PSoC4/Timer.c **** 
 1369              		.loc 1 1235 0
 1370 001e 10BD     		pop	{r4, pc}
 1371              	.L101:
 1372              		.align	2
 1373              	.L100:
 1374 0020 24012040 		.word	1075839268
 1375              		.cfi_endproc
 1376              	.LFE33:
 1377              		.size	Timer_SetCountMode, .-Timer_SetCountMode
 1378              		.section	.text.Timer_TriggerCommand,"ax",%progbits
 1379              		.align	1
 1380              		.global	Timer_TriggerCommand
 1381              		.code	16
 1382              		.thumb_func
 1383              		.type	Timer_TriggerCommand, %function
 1384              	Timer_TriggerCommand:
 1385              	.LFB34:
1266:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1386              		.loc 1 1266 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 0
 1389              		@ frame_needed = 0, uses_anonymous_args = 0
 1390              	.LVL86:
 1391 0000 70B5     		push	{r4, r5, r6, lr}
 1392              		.cfi_def_cfa_offset 16
 1393              		.cfi_offset 4, -16
 1394              		.cfi_offset 5, -12
 1395              		.cfi_offset 6, -8
 1396              		.cfi_offset 14, -4
1266:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 1397              		.loc 1 1266 0
 1398 0002 0D00     		movs	r5, r1
 1399 0004 0400     		movs	r4, r0
1271:Generated_Source\PSoC4/Timer.c **** 
 1400              		.loc 1 1271 0
 1401 0006 AC40     		lsls	r4, r4, r5
1269:Generated_Source\PSoC4/Timer.c **** 
 1402              		.loc 1 1269 0
 1403 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1404              	.LVL87:
1271:Generated_Source\PSoC4/Timer.c **** 
 1405              		.loc 1 1271 0
 1406 000c 024B     		ldr	r3, .L103
1274:Generated_Source\PSoC4/Timer.c **** 
 1407              		.loc 1 1274 0
 1408              		@ sp needed
1271:Generated_Source\PSoC4/Timer.c **** 
 1409              		.loc 1 1271 0
 1410 000e 1C60     		str	r4, [r3]
1273:Generated_Source\PSoC4/Timer.c **** }
 1411              		.loc 1 1273 0
 1412 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1413              	.LVL88:
 1414              	.LVL89:
1274:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 53


 1415              		.loc 1 1274 0
 1416 0014 70BD     		pop	{r4, r5, r6, pc}
 1417              	.L104:
 1418 0016 C046     		.align	2
 1419              	.L103:
 1420 0018 08002040 		.word	1075838984
 1421              		.cfi_endproc
 1422              	.LFE34:
 1423              		.size	Timer_TriggerCommand, .-Timer_TriggerCommand
 1424              		.section	.text.Timer_ReadStatus,"ax",%progbits
 1425              		.align	1
 1426              		.global	Timer_ReadStatus
 1427              		.code	16
 1428              		.thumb_func
 1429              		.type	Timer_ReadStatus, %function
 1430              	Timer_ReadStatus:
 1431              	.LFB35:
1295:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1432              		.loc 1 1295 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              		@ link register save eliminated.
1296:Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1437              		.loc 1 1296 0
 1438 0000 034B     		ldr	r3, .L106
1298:Generated_Source\PSoC4/Timer.c **** 
 1439              		.loc 1 1298 0
 1440              		@ sp needed
1296:Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1441              		.loc 1 1296 0
 1442 0002 1A68     		ldr	r2, [r3]
1297:Generated_Source\PSoC4/Timer.c **** }
 1443              		.loc 1 1297 0
 1444 0004 1868     		ldr	r0, [r3]
1296:Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1445              		.loc 1 1296 0
 1446 0006 0123     		movs	r3, #1
 1447 0008 920F     		lsrs	r2, r2, #30
 1448 000a 1840     		ands	r0, r3
 1449 000c 1043     		orrs	r0, r2
1298:Generated_Source\PSoC4/Timer.c **** 
 1450              		.loc 1 1298 0
 1451 000e 7047     		bx	lr
 1452              	.L107:
 1453              		.align	2
 1454              	.L106:
 1455 0010 04012040 		.word	1075839236
 1456              		.cfi_endproc
 1457              	.LFE35:
 1458              		.size	Timer_ReadStatus, .-Timer_ReadStatus
 1459              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
 1460              		.align	1
 1461              		.global	Timer_SetInterruptMode
 1462              		.code	16
 1463              		.thumb_func
 1464              		.type	Timer_SetInterruptMode, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 54


 1465              	Timer_SetInterruptMode:
 1466              	.LFB36:
1320:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
 1467              		.loc 1 1320 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
 1472              	.LVL90:
 1473              		.loc 1 1321 0
 1474 0000 014B     		ldr	r3, .L109
1322:Generated_Source\PSoC4/Timer.c **** }
 1475              		.loc 1 1322 0
 1476              		@ sp needed
1321:Generated_Source\PSoC4/Timer.c **** }
 1477              		.loc 1 1321 0
 1478 0002 1860     		str	r0, [r3]
 1479              		.loc 1 1322 0
 1480 0004 7047     		bx	lr
 1481              	.L110:
 1482 0006 C046     		.align	2
 1483              	.L109:
 1484 0008 38012040 		.word	1075839288
 1485              		.cfi_endproc
 1486              	.LFE36:
 1487              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
 1488              		.section	.text.Timer_GetInterruptSourceMasked,"ax",%progbits
 1489              		.align	1
 1490              		.global	Timer_GetInterruptSourceMasked
 1491              		.code	16
 1492              		.thumb_func
 1493              		.type	Timer_GetInterruptSourceMasked, %function
 1494              	Timer_GetInterruptSourceMasked:
 1495              	.LFB37:
1323:Generated_Source\PSoC4/Timer.c **** 
1324:Generated_Source\PSoC4/Timer.c **** 
1325:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1328:Generated_Source\PSoC4/Timer.c **** *
1329:Generated_Source\PSoC4/Timer.c **** * Summary:
1330:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/Timer.c **** *
1332:Generated_Source\PSoC4/Timer.c **** * Parameters:
1333:Generated_Source\PSoC4/Timer.c **** *   None
1334:Generated_Source\PSoC4/Timer.c **** *
1335:Generated_Source\PSoC4/Timer.c **** * Return:
1336:Generated_Source\PSoC4/Timer.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/Timer.c **** *   Values:
1338:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/Timer.c **** *
1341:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/Timer.c **** {
 1496              		.loc 1 1343 0
 1497              		.cfi_startproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 55


 1498              		@ args = 0, pretend = 0, frame = 0
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500              		@ link register save eliminated.
1344:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1501              		.loc 1 1344 0
 1502 0000 014B     		ldr	r3, .L112
1345:Generated_Source\PSoC4/Timer.c **** }
 1503              		.loc 1 1345 0
 1504              		@ sp needed
1344:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1505              		.loc 1 1344 0
 1506 0002 1868     		ldr	r0, [r3]
 1507              		.loc 1 1345 0
 1508 0004 7047     		bx	lr
 1509              	.L113:
 1510 0006 C046     		.align	2
 1511              	.L112:
 1512 0008 3C012040 		.word	1075839292
 1513              		.cfi_endproc
 1514              	.LFE37:
 1515              		.size	Timer_GetInterruptSourceMasked, .-Timer_GetInterruptSourceMasked
 1516              		.section	.text.Timer_GetInterruptSource,"ax",%progbits
 1517              		.align	1
 1518              		.global	Timer_GetInterruptSource
 1519              		.code	16
 1520              		.thumb_func
 1521              		.type	Timer_GetInterruptSource, %function
 1522              	Timer_GetInterruptSource:
 1523              	.LFB38:
1346:Generated_Source\PSoC4/Timer.c **** 
1347:Generated_Source\PSoC4/Timer.c **** 
1348:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSource
1350:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1351:Generated_Source\PSoC4/Timer.c **** *
1352:Generated_Source\PSoC4/Timer.c **** * Summary:
1353:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/Timer.c **** *
1355:Generated_Source\PSoC4/Timer.c **** * Parameters:
1356:Generated_Source\PSoC4/Timer.c **** *  None
1357:Generated_Source\PSoC4/Timer.c **** *
1358:Generated_Source\PSoC4/Timer.c **** * Return:
1359:Generated_Source\PSoC4/Timer.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/Timer.c **** *   Values:
1361:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/Timer.c **** *
1364:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSource(void)
1366:Generated_Source\PSoC4/Timer.c **** {
 1524              		.loc 1 1366 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              		@ link register save eliminated.
1367:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1529              		.loc 1 1367 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 56


 1530 0000 014B     		ldr	r3, .L115
1368:Generated_Source\PSoC4/Timer.c **** }
 1531              		.loc 1 1368 0
 1532              		@ sp needed
1367:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1533              		.loc 1 1367 0
 1534 0002 1868     		ldr	r0, [r3]
 1535              		.loc 1 1368 0
 1536 0004 7047     		bx	lr
 1537              	.L116:
 1538 0006 C046     		.align	2
 1539              	.L115:
 1540 0008 30012040 		.word	1075839280
 1541              		.cfi_endproc
 1542              	.LFE38:
 1543              		.size	Timer_GetInterruptSource, .-Timer_GetInterruptSource
 1544              		.section	.text.Timer_ClearInterrupt,"ax",%progbits
 1545              		.align	1
 1546              		.global	Timer_ClearInterrupt
 1547              		.code	16
 1548              		.thumb_func
 1549              		.type	Timer_ClearInterrupt, %function
 1550              	Timer_ClearInterrupt:
 1551              	.LFB39:
1369:Generated_Source\PSoC4/Timer.c **** 
1370:Generated_Source\PSoC4/Timer.c **** 
1371:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ClearInterrupt
1373:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1374:Generated_Source\PSoC4/Timer.c **** *
1375:Generated_Source\PSoC4/Timer.c **** * Summary:
1376:Generated_Source\PSoC4/Timer.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/Timer.c **** *
1378:Generated_Source\PSoC4/Timer.c **** * Parameters:
1379:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/Timer.c **** *   Values:
1381:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/Timer.c **** *
1384:Generated_Source\PSoC4/Timer.c **** * Return:
1385:Generated_Source\PSoC4/Timer.c **** *  None
1386:Generated_Source\PSoC4/Timer.c **** *
1387:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/Timer.c **** void Timer_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/Timer.c **** {
 1552              		.loc 1 1389 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              		@ link register save eliminated.
 1557              	.LVL91:
1390:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1558              		.loc 1 1390 0
 1559 0000 014B     		ldr	r3, .L118
1391:Generated_Source\PSoC4/Timer.c **** }
 1560              		.loc 1 1391 0
 1561              		@ sp needed
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 57


1390:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1562              		.loc 1 1390 0
 1563 0002 1860     		str	r0, [r3]
 1564              		.loc 1 1391 0
 1565 0004 7047     		bx	lr
 1566              	.L119:
 1567 0006 C046     		.align	2
 1568              	.L118:
 1569 0008 30012040 		.word	1075839280
 1570              		.cfi_endproc
 1571              	.LFE39:
 1572              		.size	Timer_ClearInterrupt, .-Timer_ClearInterrupt
 1573              		.section	.text.Timer_SetInterrupt,"ax",%progbits
 1574              		.align	1
 1575              		.global	Timer_SetInterrupt
 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	Timer_SetInterrupt, %function
 1579              	Timer_SetInterrupt:
 1580              	.LFB40:
1392:Generated_Source\PSoC4/Timer.c **** 
1393:Generated_Source\PSoC4/Timer.c **** 
1394:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterrupt
1396:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1397:Generated_Source\PSoC4/Timer.c **** *
1398:Generated_Source\PSoC4/Timer.c **** * Summary:
1399:Generated_Source\PSoC4/Timer.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/Timer.c **** *
1401:Generated_Source\PSoC4/Timer.c **** * Parameters:
1402:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/Timer.c **** *   Values:
1404:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/Timer.c **** *
1407:Generated_Source\PSoC4/Timer.c **** * Return:
1408:Generated_Source\PSoC4/Timer.c **** *  None
1409:Generated_Source\PSoC4/Timer.c **** *
1410:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/Timer.c **** {
 1581              		.loc 1 1412 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
 1586              	.LVL92:
1413:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1587              		.loc 1 1413 0
 1588 0000 014B     		ldr	r3, .L121
1414:Generated_Source\PSoC4/Timer.c **** }
 1589              		.loc 1 1414 0
 1590              		@ sp needed
1413:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1591              		.loc 1 1413 0
 1592 0002 1860     		str	r0, [r3]
 1593              		.loc 1 1414 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 58


 1594 0004 7047     		bx	lr
 1595              	.L122:
 1596 0006 C046     		.align	2
 1597              	.L121:
 1598 0008 34012040 		.word	1075839284
 1599              		.cfi_endproc
 1600              	.LFE40:
 1601              		.size	Timer_SetInterrupt, .-Timer_SetInterrupt
 1602              		.global	Timer_initVar
 1603              		.bss
 1604              		.set	.LANCHOR0,. + 0
 1605              		.type	Timer_initVar, %object
 1606              		.size	Timer_initVar, 1
 1607              	Timer_initVar:
 1608 0000 00       		.space	1
 1609              		.text
 1610              	.Letext0:
 1611              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1612              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1613              		.section	.debug_info,"",%progbits
 1614              	.Ldebug_info0:
 1615 0000 0A090000 		.4byte	0x90a
 1616 0004 0400     		.2byte	0x4
 1617 0006 00000000 		.4byte	.Ldebug_abbrev0
 1618 000a 04       		.byte	0x4
 1619 000b 01       		.uleb128 0x1
 1620 000c 0B030000 		.4byte	.LASF77
 1621 0010 0C       		.byte	0xc
 1622 0011 DF040000 		.4byte	.LASF78
 1623 0015 8F020000 		.4byte	.LASF79
 1624 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1625 001d 00000000 		.4byte	0
 1626 0021 00000000 		.4byte	.Ldebug_line0
 1627 0025 02       		.uleb128 0x2
 1628 0026 01       		.byte	0x1
 1629 0027 06       		.byte	0x6
 1630 0028 EA000000 		.4byte	.LASF0
 1631 002c 02       		.uleb128 0x2
 1632 002d 01       		.byte	0x1
 1633 002e 08       		.byte	0x8
 1634 002f 2F040000 		.4byte	.LASF1
 1635 0033 02       		.uleb128 0x2
 1636 0034 02       		.byte	0x2
 1637 0035 05       		.byte	0x5
 1638 0036 4E040000 		.4byte	.LASF2
 1639 003a 02       		.uleb128 0x2
 1640 003b 02       		.byte	0x2
 1641 003c 07       		.byte	0x7
 1642 003d 1F020000 		.4byte	.LASF3
 1643 0041 02       		.uleb128 0x2
 1644 0042 04       		.byte	0x4
 1645 0043 05       		.byte	0x5
 1646 0044 21010000 		.4byte	.LASF4
 1647 0048 02       		.uleb128 0x2
 1648 0049 04       		.byte	0x4
 1649 004a 07       		.byte	0x7
 1650 004b E0010000 		.4byte	.LASF5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 59


 1651 004f 02       		.uleb128 0x2
 1652 0050 08       		.byte	0x8
 1653 0051 05       		.byte	0x5
 1654 0052 DC000000 		.4byte	.LASF6
 1655 0056 02       		.uleb128 0x2
 1656 0057 08       		.byte	0x8
 1657 0058 07       		.byte	0x7
 1658 0059 94000000 		.4byte	.LASF7
 1659 005d 03       		.uleb128 0x3
 1660 005e 04       		.byte	0x4
 1661 005f 05       		.byte	0x5
 1662 0060 696E7400 		.ascii	"int\000"
 1663 0064 02       		.uleb128 0x2
 1664 0065 04       		.byte	0x4
 1665 0066 07       		.byte	0x7
 1666 0067 BF010000 		.4byte	.LASF8
 1667 006b 04       		.uleb128 0x4
 1668 006c 51010000 		.4byte	.LASF9
 1669 0070 02       		.byte	0x2
 1670 0071 BF01     		.2byte	0x1bf
 1671 0073 2C000000 		.4byte	0x2c
 1672 0077 04       		.uleb128 0x4
 1673 0078 75010000 		.4byte	.LASF10
 1674 007c 02       		.byte	0x2
 1675 007d C101     		.2byte	0x1c1
 1676 007f 48000000 		.4byte	0x48
 1677 0083 02       		.uleb128 0x2
 1678 0084 04       		.byte	0x4
 1679 0085 04       		.byte	0x4
 1680 0086 D3030000 		.4byte	.LASF11
 1681 008a 02       		.uleb128 0x2
 1682 008b 08       		.byte	0x8
 1683 008c 04       		.byte	0x4
 1684 008d 57010000 		.4byte	.LASF12
 1685 0091 02       		.uleb128 0x2
 1686 0092 01       		.byte	0x1
 1687 0093 08       		.byte	0x8
 1688 0094 99040000 		.4byte	.LASF13
 1689 0098 04       		.uleb128 0x4
 1690 0099 C6020000 		.4byte	.LASF14
 1691 009d 02       		.byte	0x2
 1692 009e 6B02     		.2byte	0x26b
 1693 00a0 A4000000 		.4byte	0xa4
 1694 00a4 05       		.uleb128 0x5
 1695 00a5 77000000 		.4byte	0x77
 1696 00a9 02       		.uleb128 0x2
 1697 00aa 08       		.byte	0x8
 1698 00ab 04       		.byte	0x4
 1699 00ac FF020000 		.4byte	.LASF15
 1700 00b0 02       		.uleb128 0x2
 1701 00b1 04       		.byte	0x4
 1702 00b2 07       		.byte	0x7
 1703 00b3 E1020000 		.4byte	.LASF16
 1704 00b7 06       		.uleb128 0x6
 1705 00b8 32020000 		.4byte	.LASF17
 1706 00bc 01       		.byte	0x1
 1707 00bd 6702     		.2byte	0x267
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 60


 1708 00bf 01       		.byte	0x1
 1709 00c0 D1000000 		.4byte	0xd1
 1710 00c4 07       		.uleb128 0x7
 1711 00c5 17000000 		.4byte	.LASF19
 1712 00c9 01       		.byte	0x1
 1713 00ca 6702     		.2byte	0x267
 1714 00cc 77000000 		.4byte	0x77
 1715 00d0 00       		.byte	0
 1716 00d1 06       		.uleb128 0x6
 1717 00d2 4C000000 		.4byte	.LASF18
 1718 00d6 01       		.byte	0x1
 1719 00d7 B502     		.2byte	0x2b5
 1720 00d9 01       		.byte	0x1
 1721 00da EB000000 		.4byte	0xeb
 1722 00de 07       		.uleb128 0x7
 1723 00df 71000000 		.4byte	.LASF20
 1724 00e3 01       		.byte	0x1
 1725 00e4 B502     		.2byte	0x2b5
 1726 00e6 77000000 		.4byte	0x77
 1727 00ea 00       		.byte	0
 1728 00eb 06       		.uleb128 0x6
 1729 00ec 5E010000 		.4byte	.LASF21
 1730 00f0 01       		.byte	0x1
 1731 00f1 2705     		.2byte	0x527
 1732 00f3 01       		.byte	0x1
 1733 00f4 05010000 		.4byte	0x105
 1734 00f8 07       		.uleb128 0x7
 1735 00f9 58040000 		.4byte	.LASF22
 1736 00fd 01       		.byte	0x1
 1737 00fe 2705     		.2byte	0x527
 1738 0100 77000000 		.4byte	0x77
 1739 0104 00       		.byte	0
 1740 0105 08       		.uleb128 0x8
 1741 0106 79040000 		.4byte	.LASF23
 1742 010a 01       		.byte	0x1
 1743 010b 26       		.byte	0x26
 1744 010c 00000000 		.4byte	.LFB1
 1745 0110 3C000000 		.4byte	.LFE1-.LFB1
 1746 0114 01       		.uleb128 0x1
 1747 0115 9C       		.byte	0x9c
 1748 0116 6E010000 		.4byte	0x16e
 1749 011a 09       		.uleb128 0x9
 1750 011b EB000000 		.4byte	0xeb
 1751 011f 0E000000 		.4byte	.LBB8
 1752 0123 08000000 		.4byte	.LBE8-.LBB8
 1753 0127 01       		.byte	0x1
 1754 0128 40       		.byte	0x40
 1755 0129 37010000 		.4byte	0x137
 1756 012d 0A       		.uleb128 0xa
 1757 012e F8000000 		.4byte	0xf8
 1758 0132 00000000 		.4byte	.LLST0
 1759 0136 00       		.byte	0
 1760 0137 09       		.uleb128 0x9
 1761 0138 D1000000 		.4byte	0xd1
 1762 013c 16000000 		.4byte	.LBB10
 1763 0140 06000000 		.4byte	.LBE10-.LBB10
 1764 0144 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 61


 1765 0145 43       		.byte	0x43
 1766 0146 54010000 		.4byte	0x154
 1767 014a 0A       		.uleb128 0xa
 1768 014b DE000000 		.4byte	0xde
 1769 014f 14000000 		.4byte	.LLST1
 1770 0153 00       		.byte	0
 1771 0154 0B       		.uleb128 0xb
 1772 0155 B7000000 		.4byte	0xb7
 1773 0159 1C000000 		.4byte	.LBB12
 1774 015d 06000000 		.4byte	.LBE12-.LBB12
 1775 0161 01       		.byte	0x1
 1776 0162 54       		.byte	0x54
 1777 0163 0A       		.uleb128 0xa
 1778 0164 C4000000 		.4byte	0xc4
 1779 0168 28000000 		.4byte	.LLST2
 1780 016c 00       		.byte	0
 1781 016d 00       		.byte	0
 1782 016e 08       		.uleb128 0x8
 1783 016f FB010000 		.4byte	.LASF24
 1784 0173 01       		.byte	0x1
 1785 0174 B1       		.byte	0xb1
 1786 0175 00000000 		.4byte	.LFB2
 1787 0179 1C000000 		.4byte	.LFE2-.LFB2
 1788 017d 01       		.uleb128 0x1
 1789 017e 9C       		.byte	0x9c
 1790 017f A5010000 		.4byte	0x1a5
 1791 0183 0C       		.uleb128 0xc
 1792 0184 FE040000 		.4byte	.LASF27
 1793 0188 01       		.byte	0x1
 1794 0189 B3       		.byte	0xb3
 1795 018a 6B000000 		.4byte	0x6b
 1796 018e 3C000000 		.4byte	.LLST3
 1797 0192 0D       		.uleb128 0xd
 1798 0193 06000000 		.4byte	.LVL4
 1799 0197 F7080000 		.4byte	0x8f7
 1800 019b 0D       		.uleb128 0xd
 1801 019c 14000000 		.4byte	.LVL5
 1802 01a0 02090000 		.4byte	0x902
 1803 01a4 00       		.byte	0
 1804 01a5 08       		.uleb128 0x8
 1805 01a6 CC010000 		.4byte	.LASF25
 1806 01aa 01       		.byte	0x1
 1807 01ab E6       		.byte	0xe6
 1808 01ac 00000000 		.4byte	.LFB3
 1809 01b0 1C000000 		.4byte	.LFE3-.LFB3
 1810 01b4 01       		.uleb128 0x1
 1811 01b5 9C       		.byte	0x9c
 1812 01b6 CD010000 		.4byte	0x1cd
 1813 01ba 0D       		.uleb128 0xd
 1814 01bb 0E000000 		.4byte	.LVL6
 1815 01bf 05010000 		.4byte	0x105
 1816 01c3 0D       		.uleb128 0xd
 1817 01c4 16000000 		.4byte	.LVL7
 1818 01c8 6E010000 		.4byte	0x16e
 1819 01cc 00       		.byte	0
 1820 01cd 0E       		.uleb128 0xe
 1821 01ce 57020000 		.4byte	.LASF26
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 62


 1822 01d2 01       		.byte	0x1
 1823 01d3 0001     		.2byte	0x100
 1824 01d5 00000000 		.4byte	.LFB4
 1825 01d9 1C000000 		.4byte	.LFE4-.LFB4
 1826 01dd 01       		.uleb128 0x1
 1827 01de 9C       		.byte	0x9c
 1828 01df 06020000 		.4byte	0x206
 1829 01e3 0F       		.uleb128 0xf
 1830 01e4 FE040000 		.4byte	.LASF27
 1831 01e8 01       		.byte	0x1
 1832 01e9 0201     		.2byte	0x102
 1833 01eb 6B000000 		.4byte	0x6b
 1834 01ef 4F000000 		.4byte	.LLST4
 1835 01f3 0D       		.uleb128 0xd
 1836 01f4 06000000 		.4byte	.LVL8
 1837 01f8 F7080000 		.4byte	0x8f7
 1838 01fc 0D       		.uleb128 0xd
 1839 01fd 14000000 		.4byte	.LVL9
 1840 0201 02090000 		.4byte	0x902
 1841 0205 00       		.byte	0
 1842 0206 0E       		.uleb128 0xe
 1843 0207 78000000 		.4byte	.LASF28
 1844 020b 01       		.byte	0x1
 1845 020c 2501     		.2byte	0x125
 1846 020e 00000000 		.4byte	.LFB5
 1847 0212 28000000 		.4byte	.LFE5-.LFB5
 1848 0216 01       		.uleb128 0x1
 1849 0217 9C       		.byte	0x9c
 1850 0218 4F020000 		.4byte	0x24f
 1851 021c 10       		.uleb128 0x10
 1852 021d 9E040000 		.4byte	.LASF30
 1853 0221 01       		.byte	0x1
 1854 0222 2501     		.2byte	0x125
 1855 0224 77000000 		.4byte	0x77
 1856 0228 62000000 		.4byte	.LLST5
 1857 022c 0F       		.uleb128 0xf
 1858 022d FE040000 		.4byte	.LASF27
 1859 0231 01       		.byte	0x1
 1860 0232 2701     		.2byte	0x127
 1861 0234 6B000000 		.4byte	0x6b
 1862 0238 8E000000 		.4byte	.LLST6
 1863 023c 0D       		.uleb128 0xd
 1864 023d 08000000 		.4byte	.LVL11
 1865 0241 F7080000 		.4byte	0x8f7
 1866 0245 0D       		.uleb128 0xd
 1867 0246 1C000000 		.4byte	.LVL13
 1868 024a 02090000 		.4byte	0x902
 1869 024e 00       		.byte	0
 1870 024f 0E       		.uleb128 0xe
 1871 0250 F6000000 		.4byte	.LASF29
 1872 0254 01       		.byte	0x1
 1873 0255 4601     		.2byte	0x146
 1874 0257 00000000 		.4byte	.LFB6
 1875 025b 28000000 		.4byte	.LFE6-.LFB6
 1876 025f 01       		.uleb128 0x1
 1877 0260 9C       		.byte	0x9c
 1878 0261 98020000 		.4byte	0x298
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 63


 1879 0265 10       		.uleb128 0x10
 1880 0266 D5000000 		.4byte	.LASF31
 1881 026a 01       		.byte	0x1
 1882 026b 4601     		.2byte	0x146
 1883 026d 77000000 		.4byte	0x77
 1884 0271 A1000000 		.4byte	.LLST7
 1885 0275 0F       		.uleb128 0xf
 1886 0276 FE040000 		.4byte	.LASF27
 1887 027a 01       		.byte	0x1
 1888 027b 4801     		.2byte	0x148
 1889 027d 6B000000 		.4byte	0x6b
 1890 0281 CD000000 		.4byte	.LLST8
 1891 0285 0D       		.uleb128 0xd
 1892 0286 08000000 		.4byte	.LVL15
 1893 028a F7080000 		.4byte	0x8f7
 1894 028e 0D       		.uleb128 0xd
 1895 028f 1C000000 		.4byte	.LVL17
 1896 0293 02090000 		.4byte	0x902
 1897 0297 00       		.byte	0
 1898 0298 0E       		.uleb128 0xe
 1899 0299 66040000 		.4byte	.LASF32
 1900 029d 01       		.byte	0x1
 1901 029e 6B01     		.2byte	0x16b
 1902 02a0 00000000 		.4byte	.LFB7
 1903 02a4 28000000 		.4byte	.LFE7-.LFB7
 1904 02a8 01       		.uleb128 0x1
 1905 02a9 9C       		.byte	0x9c
 1906 02aa E1020000 		.4byte	0x2e1
 1907 02ae 10       		.uleb128 0x10
 1908 02af D9030000 		.4byte	.LASF33
 1909 02b3 01       		.byte	0x1
 1910 02b4 6B01     		.2byte	0x16b
 1911 02b6 77000000 		.4byte	0x77
 1912 02ba E0000000 		.4byte	.LLST9
 1913 02be 0F       		.uleb128 0xf
 1914 02bf FE040000 		.4byte	.LASF27
 1915 02c3 01       		.byte	0x1
 1916 02c4 6D01     		.2byte	0x16d
 1917 02c6 6B000000 		.4byte	0x6b
 1918 02ca 0C010000 		.4byte	.LLST10
 1919 02ce 0D       		.uleb128 0xd
 1920 02cf 08000000 		.4byte	.LVL19
 1921 02d3 F7080000 		.4byte	0x8f7
 1922 02d7 0D       		.uleb128 0xd
 1923 02d8 1C000000 		.4byte	.LVL21
 1924 02dc 02090000 		.4byte	0x902
 1925 02e0 00       		.byte	0
 1926 02e1 0E       		.uleb128 0xe
 1927 02e2 24050000 		.4byte	.LASF34
 1928 02e6 01       		.byte	0x1
 1929 02e7 8B01     		.2byte	0x18b
 1930 02e9 00000000 		.4byte	.LFB8
 1931 02ed 30000000 		.4byte	.LFE8-.LFB8
 1932 02f1 01       		.uleb128 0x1
 1933 02f2 9C       		.byte	0x9c
 1934 02f3 2A030000 		.4byte	0x32a
 1935 02f7 10       		.uleb128 0x10
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 64


 1936 02f8 62020000 		.4byte	.LASF35
 1937 02fc 01       		.byte	0x1
 1938 02fd 8B01     		.2byte	0x18b
 1939 02ff 77000000 		.4byte	0x77
 1940 0303 1F010000 		.4byte	.LLST11
 1941 0307 0F       		.uleb128 0xf
 1942 0308 FE040000 		.4byte	.LASF27
 1943 030c 01       		.byte	0x1
 1944 030d 8D01     		.2byte	0x18d
 1945 030f 6B000000 		.4byte	0x6b
 1946 0313 4B010000 		.4byte	.LLST12
 1947 0317 0D       		.uleb128 0xd
 1948 0318 08000000 		.4byte	.LVL23
 1949 031c F7080000 		.4byte	0x8f7
 1950 0320 0D       		.uleb128 0xd
 1951 0321 24000000 		.4byte	.LVL25
 1952 0325 02090000 		.4byte	0x902
 1953 0329 00       		.byte	0
 1954 032a 0E       		.uleb128 0xe
 1955 032b 6E050000 		.4byte	.LASF36
 1956 032f 01       		.byte	0x1
 1957 0330 C101     		.2byte	0x1c1
 1958 0332 00000000 		.4byte	.LFB9
 1959 0336 10000000 		.4byte	.LFE9-.LFB9
 1960 033a 01       		.uleb128 0x1
 1961 033b 9C       		.byte	0x9c
 1962 033c 51030000 		.4byte	0x351
 1963 0340 10       		.uleb128 0x10
 1964 0341 F2010000 		.4byte	.LASF37
 1965 0345 01       		.byte	0x1
 1966 0346 C101     		.2byte	0x1c1
 1967 0348 77000000 		.4byte	0x77
 1968 034c 5E010000 		.4byte	.LLST13
 1969 0350 00       		.byte	0
 1970 0351 0E       		.uleb128 0xe
 1971 0352 C0000000 		.4byte	.LASF38
 1972 0356 01       		.byte	0x1
 1973 0357 E501     		.2byte	0x1e5
 1974 0359 00000000 		.4byte	.LFB10
 1975 035d 28000000 		.4byte	.LFE10-.LFB10
 1976 0361 01       		.uleb128 0x1
 1977 0362 9C       		.byte	0x9c
 1978 0363 9A030000 		.4byte	0x39a
 1979 0367 10       		.uleb128 0x10
 1980 0368 35050000 		.4byte	.LASF39
 1981 036c 01       		.byte	0x1
 1982 036d E501     		.2byte	0x1e5
 1983 036f 77000000 		.4byte	0x77
 1984 0373 7F010000 		.4byte	.LLST14
 1985 0377 0F       		.uleb128 0xf
 1986 0378 FE040000 		.4byte	.LASF27
 1987 037c 01       		.byte	0x1
 1988 037d E701     		.2byte	0x1e7
 1989 037f 6B000000 		.4byte	0x6b
 1990 0383 AB010000 		.4byte	.LLST15
 1991 0387 0D       		.uleb128 0xd
 1992 0388 08000000 		.4byte	.LVL29
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 65


 1993 038c F7080000 		.4byte	0x8f7
 1994 0390 0D       		.uleb128 0xd
 1995 0391 20000000 		.4byte	.LVL31
 1996 0395 02090000 		.4byte	0x902
 1997 0399 00       		.byte	0
 1998 039a 0E       		.uleb128 0xe
 1999 039b 00000000 		.4byte	.LASF40
 2000 039f 01       		.byte	0x1
 2001 03a0 0702     		.2byte	0x207
 2002 03a2 00000000 		.4byte	.LFB11
 2003 03a6 28000000 		.4byte	.LFE11-.LFB11
 2004 03aa 01       		.uleb128 0x1
 2005 03ab 9C       		.byte	0x9c
 2006 03ac E3030000 		.4byte	0x3e3
 2007 03b0 10       		.uleb128 0x10
 2008 03b1 3D040000 		.4byte	.LASF41
 2009 03b5 01       		.byte	0x1
 2010 03b6 0702     		.2byte	0x207
 2011 03b8 77000000 		.4byte	0x77
 2012 03bc BE010000 		.4byte	.LLST16
 2013 03c0 0F       		.uleb128 0xf
 2014 03c1 FE040000 		.4byte	.LASF27
 2015 03c5 01       		.byte	0x1
 2016 03c6 0902     		.2byte	0x209
 2017 03c8 6B000000 		.4byte	0x6b
 2018 03cc EA010000 		.4byte	.LLST17
 2019 03d0 0D       		.uleb128 0xd
 2020 03d1 08000000 		.4byte	.LVL33
 2021 03d5 F7080000 		.4byte	0x8f7
 2022 03d9 0D       		.uleb128 0xd
 2023 03da 20000000 		.4byte	.LVL35
 2024 03de 02090000 		.4byte	0x902
 2025 03e2 00       		.byte	0
 2026 03e3 0E       		.uleb128 0xe
 2027 03e4 AB000000 		.4byte	.LASF42
 2028 03e8 01       		.byte	0x1
 2029 03e9 2802     		.2byte	0x228
 2030 03eb 00000000 		.4byte	.LFB12
 2031 03ef 2C000000 		.4byte	.LFE12-.LFB12
 2032 03f3 01       		.uleb128 0x1
 2033 03f4 9C       		.byte	0x9c
 2034 03f5 2C040000 		.4byte	0x42c
 2035 03f9 10       		.uleb128 0x10
 2036 03fa A0010000 		.4byte	.LASF43
 2037 03fe 01       		.byte	0x1
 2038 03ff 2802     		.2byte	0x228
 2039 0401 77000000 		.4byte	0x77
 2040 0405 FD010000 		.4byte	.LLST18
 2041 0409 0F       		.uleb128 0xf
 2042 040a FE040000 		.4byte	.LASF27
 2043 040e 01       		.byte	0x1
 2044 040f 2A02     		.2byte	0x22a
 2045 0411 6B000000 		.4byte	0x6b
 2046 0415 29020000 		.4byte	.LLST19
 2047 0419 0D       		.uleb128 0xd
 2048 041a 08000000 		.4byte	.LVL37
 2049 041e F7080000 		.4byte	0x8f7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 66


 2050 0422 0D       		.uleb128 0xd
 2051 0423 20000000 		.4byte	.LVL39
 2052 0427 02090000 		.4byte	0x902
 2053 042b 00       		.byte	0
 2054 042c 0E       		.uleb128 0xe
 2055 042d 99030000 		.4byte	.LASF44
 2056 0431 01       		.byte	0x1
 2057 0432 4902     		.2byte	0x249
 2058 0434 00000000 		.4byte	.LFB13
 2059 0438 28000000 		.4byte	.LFE13-.LFB13
 2060 043c 01       		.uleb128 0x1
 2061 043d 9C       		.byte	0x9c
 2062 043e 75040000 		.4byte	0x475
 2063 0442 10       		.uleb128 0x10
 2064 0443 9B010000 		.4byte	.LASF45
 2065 0447 01       		.byte	0x1
 2066 0448 4902     		.2byte	0x249
 2067 044a 77000000 		.4byte	0x77
 2068 044e 3C020000 		.4byte	.LLST20
 2069 0452 0F       		.uleb128 0xf
 2070 0453 FE040000 		.4byte	.LASF27
 2071 0457 01       		.byte	0x1
 2072 0458 4B02     		.2byte	0x24b
 2073 045a 6B000000 		.4byte	0x6b
 2074 045e 68020000 		.4byte	.LLST21
 2075 0462 0D       		.uleb128 0xd
 2076 0463 08000000 		.4byte	.LVL41
 2077 0467 F7080000 		.4byte	0x8f7
 2078 046b 0D       		.uleb128 0xd
 2079 046c 1C000000 		.4byte	.LVL43
 2080 0470 02090000 		.4byte	0x902
 2081 0474 00       		.byte	0
 2082 0475 11       		.uleb128 0x11
 2083 0476 B7000000 		.4byte	0xb7
 2084 047a 00000000 		.4byte	.LFB14
 2085 047e 0C000000 		.4byte	.LFE14-.LFB14
 2086 0482 01       		.uleb128 0x1
 2087 0483 9C       		.byte	0x9c
 2088 0484 92040000 		.4byte	0x492
 2089 0488 0A       		.uleb128 0xa
 2090 0489 C4000000 		.4byte	0xc4
 2091 048d 7B020000 		.4byte	.LLST22
 2092 0491 00       		.byte	0
 2093 0492 12       		.uleb128 0x12
 2094 0493 45020000 		.4byte	.LASF48
 2095 0497 01       		.byte	0x1
 2096 0498 7B02     		.2byte	0x27b
 2097 049a 77000000 		.4byte	0x77
 2098 049e 00000000 		.4byte	.LFB15
 2099 04a2 0C000000 		.4byte	.LFE15-.LFB15
 2100 04a6 01       		.uleb128 0x1
 2101 04a7 9C       		.byte	0x9c
 2102 04a8 0E       		.uleb128 0xe
 2103 04a9 84040000 		.4byte	.LASF46
 2104 04ad 01       		.byte	0x1
 2105 04ae 9802     		.2byte	0x298
 2106 04b0 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 67


 2107 04b4 28000000 		.4byte	.LFE16-.LFB16
 2108 04b8 01       		.uleb128 0x1
 2109 04b9 9C       		.byte	0x9c
 2110 04ba F1040000 		.4byte	0x4f1
 2111 04be 10       		.uleb128 0x10
 2112 04bf B7040000 		.4byte	.LASF47
 2113 04c3 01       		.byte	0x1
 2114 04c4 9802     		.2byte	0x298
 2115 04c6 77000000 		.4byte	0x77
 2116 04ca 9C020000 		.4byte	.LLST23
 2117 04ce 0F       		.uleb128 0xf
 2118 04cf FE040000 		.4byte	.LASF27
 2119 04d3 01       		.byte	0x1
 2120 04d4 9A02     		.2byte	0x29a
 2121 04d6 6B000000 		.4byte	0x6b
 2122 04da C8020000 		.4byte	.LLST24
 2123 04de 0D       		.uleb128 0xd
 2124 04df 08000000 		.4byte	.LVL47
 2125 04e3 F7080000 		.4byte	0x8f7
 2126 04e7 0D       		.uleb128 0xd
 2127 04e8 1C000000 		.4byte	.LVL49
 2128 04ec 02090000 		.4byte	0x902
 2129 04f0 00       		.byte	0
 2130 04f1 11       		.uleb128 0x11
 2131 04f2 D1000000 		.4byte	0xd1
 2132 04f6 00000000 		.4byte	.LFB17
 2133 04fa 0C000000 		.4byte	.LFE17-.LFB17
 2134 04fe 01       		.uleb128 0x1
 2135 04ff 9C       		.byte	0x9c
 2136 0500 0E050000 		.4byte	0x50e
 2137 0504 0A       		.uleb128 0xa
 2138 0505 DE000000 		.4byte	0xde
 2139 0509 DB020000 		.4byte	.LLST25
 2140 050d 00       		.byte	0
 2141 050e 12       		.uleb128 0x12
 2142 050f C3040000 		.4byte	.LASF49
 2143 0513 01       		.byte	0x1
 2144 0514 C902     		.2byte	0x2c9
 2145 0516 77000000 		.4byte	0x77
 2146 051a 00000000 		.4byte	.LFB18
 2147 051e 0C000000 		.4byte	.LFE18-.LFB18
 2148 0522 01       		.uleb128 0x1
 2149 0523 9C       		.byte	0x9c
 2150 0524 0E       		.uleb128 0xe
 2151 0525 CC020000 		.4byte	.LASF50
 2152 0529 01       		.byte	0x1
 2153 052a E302     		.2byte	0x2e3
 2154 052c 00000000 		.4byte	.LFB19
 2155 0530 24000000 		.4byte	.LFE19-.LFB19
 2156 0534 01       		.uleb128 0x1
 2157 0535 9C       		.byte	0x9c
 2158 0536 6D050000 		.4byte	0x56d
 2159 053a 10       		.uleb128 0x10
 2160 053b 59050000 		.4byte	.LASF51
 2161 053f 01       		.byte	0x1
 2162 0540 E302     		.2byte	0x2e3
 2163 0542 77000000 		.4byte	0x77
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 68


 2164 0546 FC020000 		.4byte	.LLST26
 2165 054a 0F       		.uleb128 0xf
 2166 054b FE040000 		.4byte	.LASF27
 2167 054f 01       		.byte	0x1
 2168 0550 E502     		.2byte	0x2e5
 2169 0552 6B000000 		.4byte	0x6b
 2170 0556 28030000 		.4byte	.LLST27
 2171 055a 0D       		.uleb128 0xd
 2172 055b 08000000 		.4byte	.LVL53
 2173 055f F7080000 		.4byte	0x8f7
 2174 0563 0D       		.uleb128 0xd
 2175 0564 1E000000 		.4byte	.LVL54
 2176 0568 02090000 		.4byte	0x902
 2177 056c 00       		.byte	0
 2178 056d 0E       		.uleb128 0xe
 2179 056e EA020000 		.4byte	.LASF52
 2180 0572 01       		.byte	0x1
 2181 0573 FE02     		.2byte	0x2fe
 2182 0575 00000000 		.4byte	.LFB20
 2183 0579 0C000000 		.4byte	.LFE20-.LFB20
 2184 057d 01       		.uleb128 0x1
 2185 057e 9C       		.byte	0x9c
 2186 057f 94050000 		.4byte	0x594
 2187 0583 10       		.uleb128 0x10
 2188 0584 64050000 		.4byte	.LASF53
 2189 0588 01       		.byte	0x1
 2190 0589 FE02     		.2byte	0x2fe
 2191 058b 77000000 		.4byte	0x77
 2192 058f 3B030000 		.4byte	.LLST28
 2193 0593 00       		.byte	0
 2194 0594 12       		.uleb128 0x12
 2195 0595 AC030000 		.4byte	.LASF54
 2196 0599 01       		.byte	0x1
 2197 059a 1203     		.2byte	0x312
 2198 059c 77000000 		.4byte	0x77
 2199 05a0 00000000 		.4byte	.LFB21
 2200 05a4 0C000000 		.4byte	.LFE21-.LFB21
 2201 05a8 01       		.uleb128 0x1
 2202 05a9 9C       		.byte	0x9c
 2203 05aa 0E       		.uleb128 0xe
 2204 05ab F5030000 		.4byte	.LASF55
 2205 05af 01       		.byte	0x1
 2206 05b0 2C03     		.2byte	0x32c
 2207 05b2 00000000 		.4byte	.LFB22
 2208 05b6 28000000 		.4byte	.LFE22-.LFB22
 2209 05ba 01       		.uleb128 0x1
 2210 05bb 9C       		.byte	0x9c
 2211 05bc F3050000 		.4byte	0x5f3
 2212 05c0 10       		.uleb128 0x10
 2213 05c1 59050000 		.4byte	.LASF51
 2214 05c5 01       		.byte	0x1
 2215 05c6 2C03     		.2byte	0x32c
 2216 05c8 77000000 		.4byte	0x77
 2217 05cc 5C030000 		.4byte	.LLST29
 2218 05d0 0F       		.uleb128 0xf
 2219 05d1 FE040000 		.4byte	.LASF27
 2220 05d5 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 69


 2221 05d6 2E03     		.2byte	0x32e
 2222 05d8 6B000000 		.4byte	0x6b
 2223 05dc 88030000 		.4byte	.LLST30
 2224 05e0 0D       		.uleb128 0xd
 2225 05e1 08000000 		.4byte	.LVL59
 2226 05e5 F7080000 		.4byte	0x8f7
 2227 05e9 0D       		.uleb128 0xd
 2228 05ea 20000000 		.4byte	.LVL61
 2229 05ee 02090000 		.4byte	0x902
 2230 05f2 00       		.byte	0
 2231 05f3 0E       		.uleb128 0xe
 2232 05f4 7C010000 		.4byte	.LASF56
 2233 05f8 01       		.byte	0x1
 2234 05f9 5103     		.2byte	0x351
 2235 05fb 00000000 		.4byte	.LFB23
 2236 05ff 0C000000 		.4byte	.LFE23-.LFB23
 2237 0603 01       		.uleb128 0x1
 2238 0604 9C       		.byte	0x9c
 2239 0605 1A060000 		.4byte	0x61a
 2240 0609 10       		.uleb128 0x10
 2241 060a 19010000 		.4byte	.LASF57
 2242 060e 01       		.byte	0x1
 2243 060f 5103     		.2byte	0x351
 2244 0611 77000000 		.4byte	0x77
 2245 0615 9B030000 		.4byte	.LLST31
 2246 0619 00       		.byte	0
 2247 061a 0E       		.uleb128 0xe
 2248 061b A9010000 		.4byte	.LASF58
 2249 061f 01       		.byte	0x1
 2250 0620 BA03     		.2byte	0x3ba
 2251 0622 00000000 		.4byte	.LFB25
 2252 0626 0C000000 		.4byte	.LFE25-.LFB25
 2253 062a 01       		.uleb128 0x1
 2254 062b 9C       		.byte	0x9c
 2255 062c 41060000 		.4byte	0x641
 2256 0630 10       		.uleb128 0x10
 2257 0631 D4040000 		.4byte	.LASF59
 2258 0635 01       		.byte	0x1
 2259 0636 BA03     		.2byte	0x3ba
 2260 0638 77000000 		.4byte	0x77
 2261 063c BC030000 		.4byte	.LLST32
 2262 0640 00       		.byte	0
 2263 0641 13       		.uleb128 0x13
 2264 0642 2A010000 		.4byte	.LASF60
 2265 0646 01       		.byte	0x1
 2266 0647 1604     		.2byte	0x416
 2267 0649 77000000 		.4byte	0x77
 2268 064d 01       		.byte	0x1
 2269 064e 14       		.uleb128 0x14
 2270 064f 41060000 		.4byte	0x641
 2271 0653 00000000 		.4byte	.LFB27
 2272 0657 0C000000 		.4byte	.LFE27-.LFB27
 2273 065b 01       		.uleb128 0x1
 2274 065c 9C       		.byte	0x9c
 2275 065d 13       		.uleb128 0x13
 2276 065e 09040000 		.4byte	.LASF61
 2277 0662 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 70


 2278 0663 2B04     		.2byte	0x42b
 2279 0665 77000000 		.4byte	0x77
 2280 0669 01       		.byte	0x1
 2281 066a 14       		.uleb128 0x14
 2282 066b 5D060000 		.4byte	0x65d
 2283 066f 00000000 		.4byte	.LFB28
 2284 0673 0C000000 		.4byte	.LFE28-.LFB28
 2285 0677 01       		.uleb128 0x1
 2286 0678 9C       		.byte	0x9c
 2287 0679 0E       		.uleb128 0xe
 2288 067a 0F050000 		.4byte	.LASF62
 2289 067e 01       		.byte	0x1
 2290 067f 4604     		.2byte	0x446
 2291 0681 00000000 		.4byte	.LFB29
 2292 0685 24000000 		.4byte	.LFE29-.LFB29
 2293 0689 01       		.uleb128 0x1
 2294 068a 9C       		.byte	0x9c
 2295 068b C2060000 		.4byte	0x6c2
 2296 068f 10       		.uleb128 0x10
 2297 0690 8F010000 		.4byte	.LASF63
 2298 0694 01       		.byte	0x1
 2299 0695 4604     		.2byte	0x446
 2300 0697 77000000 		.4byte	0x77
 2301 069b DD030000 		.4byte	.LLST33
 2302 069f 0F       		.uleb128 0xf
 2303 06a0 FE040000 		.4byte	.LASF27
 2304 06a4 01       		.byte	0x1
 2305 06a5 4804     		.2byte	0x448
 2306 06a7 6B000000 		.4byte	0x6b
 2307 06ab 09040000 		.4byte	.LLST34
 2308 06af 0D       		.uleb128 0xd
 2309 06b0 08000000 		.4byte	.LVL67
 2310 06b4 F7080000 		.4byte	0x8f7
 2311 06b8 0D       		.uleb128 0xd
 2312 06b9 1C000000 		.4byte	.LVL69
 2313 06bd 02090000 		.4byte	0x902
 2314 06c1 00       		.byte	0
 2315 06c2 0E       		.uleb128 0xe
 2316 06c3 A3040000 		.4byte	.LASF64
 2317 06c7 01       		.byte	0x1
 2318 06c8 6704     		.2byte	0x467
 2319 06ca 00000000 		.4byte	.LFB30
 2320 06ce 24000000 		.4byte	.LFE30-.LFB30
 2321 06d2 01       		.uleb128 0x1
 2322 06d3 9C       		.byte	0x9c
 2323 06d4 0B070000 		.4byte	0x70b
 2324 06d8 10       		.uleb128 0x10
 2325 06d9 8F010000 		.4byte	.LASF63
 2326 06dd 01       		.byte	0x1
 2327 06de 6704     		.2byte	0x467
 2328 06e0 77000000 		.4byte	0x77
 2329 06e4 1C040000 		.4byte	.LLST35
 2330 06e8 0F       		.uleb128 0xf
 2331 06e9 FE040000 		.4byte	.LASF27
 2332 06ed 01       		.byte	0x1
 2333 06ee 6904     		.2byte	0x469
 2334 06f0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 71


 2335 06f4 48040000 		.4byte	.LLST36
 2336 06f8 0D       		.uleb128 0xd
 2337 06f9 08000000 		.4byte	.LVL71
 2338 06fd F7080000 		.4byte	0x8f7
 2339 0701 0D       		.uleb128 0xd
 2340 0702 1E000000 		.4byte	.LVL72
 2341 0706 02090000 		.4byte	0x902
 2342 070a 00       		.byte	0
 2343 070b 0E       		.uleb128 0xe
 2344 070c C0030000 		.4byte	.LASF65
 2345 0710 01       		.byte	0x1
 2346 0711 8804     		.2byte	0x488
 2347 0713 00000000 		.4byte	.LFB31
 2348 0717 28000000 		.4byte	.LFE31-.LFB31
 2349 071b 01       		.uleb128 0x1
 2350 071c 9C       		.byte	0x9c
 2351 071d 54070000 		.4byte	0x754
 2352 0721 10       		.uleb128 0x10
 2353 0722 8F010000 		.4byte	.LASF63
 2354 0726 01       		.byte	0x1
 2355 0727 8804     		.2byte	0x488
 2356 0729 77000000 		.4byte	0x77
 2357 072d 5B040000 		.4byte	.LLST37
 2358 0731 0F       		.uleb128 0xf
 2359 0732 FE040000 		.4byte	.LASF27
 2360 0736 01       		.byte	0x1
 2361 0737 8A04     		.2byte	0x48a
 2362 0739 6B000000 		.4byte	0x6b
 2363 073d 87040000 		.4byte	.LLST38
 2364 0741 0D       		.uleb128 0xd
 2365 0742 08000000 		.4byte	.LVL75
 2366 0746 F7080000 		.4byte	0x8f7
 2367 074a 0D       		.uleb128 0xd
 2368 074b 1E000000 		.4byte	.LVL76
 2369 074f 02090000 		.4byte	0x902
 2370 0753 00       		.byte	0
 2371 0754 0E       		.uleb128 0xe
 2372 0755 E3030000 		.4byte	.LASF66
 2373 0759 01       		.byte	0x1
 2374 075a A804     		.2byte	0x4a8
 2375 075c 00000000 		.4byte	.LFB32
 2376 0760 24000000 		.4byte	.LFE32-.LFB32
 2377 0764 01       		.uleb128 0x1
 2378 0765 9C       		.byte	0x9c
 2379 0766 9D070000 		.4byte	0x79d
 2380 076a 10       		.uleb128 0x10
 2381 076b 8F010000 		.4byte	.LASF63
 2382 076f 01       		.byte	0x1
 2383 0770 A804     		.2byte	0x4a8
 2384 0772 77000000 		.4byte	0x77
 2385 0776 9A040000 		.4byte	.LLST39
 2386 077a 0F       		.uleb128 0xf
 2387 077b FE040000 		.4byte	.LASF27
 2388 077f 01       		.byte	0x1
 2389 0780 AA04     		.2byte	0x4aa
 2390 0782 6B000000 		.4byte	0x6b
 2391 0786 C6040000 		.4byte	.LLST40
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 72


 2392 078a 0D       		.uleb128 0xd
 2393 078b 08000000 		.4byte	.LVL79
 2394 078f F7080000 		.4byte	0x8f7
 2395 0793 0D       		.uleb128 0xd
 2396 0794 1E000000 		.4byte	.LVL80
 2397 0798 02090000 		.4byte	0x902
 2398 079c 00       		.byte	0
 2399 079d 0E       		.uleb128 0xe
 2400 079e 06010000 		.4byte	.LASF67
 2401 07a2 01       		.byte	0x1
 2402 07a3 C904     		.2byte	0x4c9
 2403 07a5 00000000 		.4byte	.LFB33
 2404 07a9 24000000 		.4byte	.LFE33-.LFB33
 2405 07ad 01       		.uleb128 0x1
 2406 07ae 9C       		.byte	0x9c
 2407 07af E6070000 		.4byte	0x7e6
 2408 07b3 10       		.uleb128 0x10
 2409 07b4 8F010000 		.4byte	.LASF63
 2410 07b8 01       		.byte	0x1
 2411 07b9 C904     		.2byte	0x4c9
 2412 07bb 77000000 		.4byte	0x77
 2413 07bf D9040000 		.4byte	.LLST41
 2414 07c3 0F       		.uleb128 0xf
 2415 07c4 FE040000 		.4byte	.LASF27
 2416 07c8 01       		.byte	0x1
 2417 07c9 CB04     		.2byte	0x4cb
 2418 07cb 6B000000 		.4byte	0x6b
 2419 07cf 05050000 		.4byte	.LLST42
 2420 07d3 0D       		.uleb128 0xd
 2421 07d4 08000000 		.4byte	.LVL83
 2422 07d8 F7080000 		.4byte	0x8f7
 2423 07dc 0D       		.uleb128 0xd
 2424 07dd 1E000000 		.4byte	.LVL84
 2425 07e1 02090000 		.4byte	0x902
 2426 07e5 00       		.byte	0
 2427 07e6 0E       		.uleb128 0xe
 2428 07e7 3C010000 		.4byte	.LASF68
 2429 07eb 01       		.byte	0x1
 2430 07ec F104     		.2byte	0x4f1
 2431 07ee 00000000 		.4byte	.LFB34
 2432 07f2 1C000000 		.4byte	.LFE34-.LFB34
 2433 07f6 01       		.uleb128 0x1
 2434 07f7 9C       		.byte	0x9c
 2435 07f8 3F080000 		.4byte	0x83f
 2436 07fc 10       		.uleb128 0x10
 2437 07fd 9B010000 		.4byte	.LASF45
 2438 0801 01       		.byte	0x1
 2439 0802 F104     		.2byte	0x4f1
 2440 0804 77000000 		.4byte	0x77
 2441 0808 18050000 		.4byte	.LLST43
 2442 080c 10       		.uleb128 0x10
 2443 080d D8010000 		.4byte	.LASF69
 2444 0811 01       		.byte	0x1
 2445 0812 F104     		.2byte	0x4f1
 2446 0814 77000000 		.4byte	0x77
 2447 0818 39050000 		.4byte	.LLST44
 2448 081c 0F       		.uleb128 0xf
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 73


 2449 081d FE040000 		.4byte	.LASF27
 2450 0821 01       		.byte	0x1
 2451 0822 F304     		.2byte	0x4f3
 2452 0824 6B000000 		.4byte	0x6b
 2453 0828 65050000 		.4byte	.LLST45
 2454 082c 0D       		.uleb128 0xd
 2455 082d 0C000000 		.4byte	.LVL87
 2456 0831 F7080000 		.4byte	0x8f7
 2457 0835 0D       		.uleb128 0xd
 2458 0836 14000000 		.4byte	.LVL88
 2459 083a 02090000 		.4byte	0x902
 2460 083e 00       		.byte	0
 2461 083f 12       		.uleb128 0x12
 2462 0840 1E040000 		.4byte	.LASF70
 2463 0844 01       		.byte	0x1
 2464 0845 0E05     		.2byte	0x50e
 2465 0847 77000000 		.4byte	0x77
 2466 084b 00000000 		.4byte	.LFB35
 2467 084f 14000000 		.4byte	.LFE35-.LFB35
 2468 0853 01       		.uleb128 0x1
 2469 0854 9C       		.byte	0x9c
 2470 0855 11       		.uleb128 0x11
 2471 0856 EB000000 		.4byte	0xeb
 2472 085a 00000000 		.4byte	.LFB36
 2473 085e 0C000000 		.4byte	.LFE36-.LFB36
 2474 0862 01       		.uleb128 0x1
 2475 0863 9C       		.byte	0x9c
 2476 0864 70080000 		.4byte	0x870
 2477 0868 15       		.uleb128 0x15
 2478 0869 F8000000 		.4byte	0xf8
 2479 086d 01       		.uleb128 0x1
 2480 086e 50       		.byte	0x50
 2481 086f 00       		.byte	0
 2482 0870 12       		.uleb128 0x12
 2483 0871 70020000 		.4byte	.LASF71
 2484 0875 01       		.byte	0x1
 2485 0876 3E05     		.2byte	0x53e
 2486 0878 77000000 		.4byte	0x77
 2487 087c 00000000 		.4byte	.LFB37
 2488 0880 0C000000 		.4byte	.LFE37-.LFB37
 2489 0884 01       		.uleb128 0x1
 2490 0885 9C       		.byte	0x9c
 2491 0886 12       		.uleb128 0x12
 2492 0887 1D000000 		.4byte	.LASF72
 2493 088b 01       		.byte	0x1
 2494 088c 5505     		.2byte	0x555
 2495 088e 77000000 		.4byte	0x77
 2496 0892 00000000 		.4byte	.LFB38
 2497 0896 0C000000 		.4byte	.LFE38-.LFB38
 2498 089a 01       		.uleb128 0x1
 2499 089b 9C       		.byte	0x9c
 2500 089c 0E       		.uleb128 0xe
 2501 089d 44050000 		.4byte	.LASF73
 2502 08a1 01       		.byte	0x1
 2503 08a2 6C05     		.2byte	0x56c
 2504 08a4 00000000 		.4byte	.LFB39
 2505 08a8 0C000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 74


 2506 08ac 01       		.uleb128 0x1
 2507 08ad 9C       		.byte	0x9c
 2508 08ae C1080000 		.4byte	0x8c1
 2509 08b2 16       		.uleb128 0x16
 2510 08b3 58040000 		.4byte	.LASF22
 2511 08b7 01       		.byte	0x1
 2512 08b8 6C05     		.2byte	0x56c
 2513 08ba 77000000 		.4byte	0x77
 2514 08be 01       		.uleb128 0x1
 2515 08bf 50       		.byte	0x50
 2516 08c0 00       		.byte	0
 2517 08c1 0E       		.uleb128 0xe
 2518 08c2 5E000000 		.4byte	.LASF74
 2519 08c6 01       		.byte	0x1
 2520 08c7 8305     		.2byte	0x583
 2521 08c9 00000000 		.4byte	.LFB40
 2522 08cd 0C000000 		.4byte	.LFE40-.LFB40
 2523 08d1 01       		.uleb128 0x1
 2524 08d2 9C       		.byte	0x9c
 2525 08d3 E6080000 		.4byte	0x8e6
 2526 08d7 16       		.uleb128 0x16
 2527 08d8 58040000 		.4byte	.LASF22
 2528 08dc 01       		.byte	0x1
 2529 08dd 8305     		.2byte	0x583
 2530 08df 77000000 		.4byte	0x77
 2531 08e3 01       		.uleb128 0x1
 2532 08e4 50       		.byte	0x50
 2533 08e5 00       		.byte	0
 2534 08e6 17       		.uleb128 0x17
 2535 08e7 86000000 		.4byte	.LASF80
 2536 08eb 01       		.byte	0x1
 2537 08ec 15       		.byte	0x15
 2538 08ed 6B000000 		.4byte	0x6b
 2539 08f1 05       		.uleb128 0x5
 2540 08f2 03       		.byte	0x3
 2541 08f3 00000000 		.4byte	Timer_initVar
 2542 08f7 18       		.uleb128 0x18
 2543 08f8 08020000 		.4byte	.LASF75
 2544 08fc 08020000 		.4byte	.LASF75
 2545 0900 03       		.byte	0x3
 2546 0901 E5       		.byte	0xe5
 2547 0902 18       		.uleb128 0x18
 2548 0903 36000000 		.4byte	.LASF76
 2549 0907 36000000 		.4byte	.LASF76
 2550 090b 03       		.byte	0x3
 2551 090c E6       		.byte	0xe6
 2552 090d 00       		.byte	0
 2553              		.section	.debug_abbrev,"",%progbits
 2554              	.Ldebug_abbrev0:
 2555 0000 01       		.uleb128 0x1
 2556 0001 11       		.uleb128 0x11
 2557 0002 01       		.byte	0x1
 2558 0003 25       		.uleb128 0x25
 2559 0004 0E       		.uleb128 0xe
 2560 0005 13       		.uleb128 0x13
 2561 0006 0B       		.uleb128 0xb
 2562 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 75


 2563 0008 0E       		.uleb128 0xe
 2564 0009 1B       		.uleb128 0x1b
 2565 000a 0E       		.uleb128 0xe
 2566 000b 55       		.uleb128 0x55
 2567 000c 17       		.uleb128 0x17
 2568 000d 11       		.uleb128 0x11
 2569 000e 01       		.uleb128 0x1
 2570 000f 10       		.uleb128 0x10
 2571 0010 17       		.uleb128 0x17
 2572 0011 00       		.byte	0
 2573 0012 00       		.byte	0
 2574 0013 02       		.uleb128 0x2
 2575 0014 24       		.uleb128 0x24
 2576 0015 00       		.byte	0
 2577 0016 0B       		.uleb128 0xb
 2578 0017 0B       		.uleb128 0xb
 2579 0018 3E       		.uleb128 0x3e
 2580 0019 0B       		.uleb128 0xb
 2581 001a 03       		.uleb128 0x3
 2582 001b 0E       		.uleb128 0xe
 2583 001c 00       		.byte	0
 2584 001d 00       		.byte	0
 2585 001e 03       		.uleb128 0x3
 2586 001f 24       		.uleb128 0x24
 2587 0020 00       		.byte	0
 2588 0021 0B       		.uleb128 0xb
 2589 0022 0B       		.uleb128 0xb
 2590 0023 3E       		.uleb128 0x3e
 2591 0024 0B       		.uleb128 0xb
 2592 0025 03       		.uleb128 0x3
 2593 0026 08       		.uleb128 0x8
 2594 0027 00       		.byte	0
 2595 0028 00       		.byte	0
 2596 0029 04       		.uleb128 0x4
 2597 002a 16       		.uleb128 0x16
 2598 002b 00       		.byte	0
 2599 002c 03       		.uleb128 0x3
 2600 002d 0E       		.uleb128 0xe
 2601 002e 3A       		.uleb128 0x3a
 2602 002f 0B       		.uleb128 0xb
 2603 0030 3B       		.uleb128 0x3b
 2604 0031 05       		.uleb128 0x5
 2605 0032 49       		.uleb128 0x49
 2606 0033 13       		.uleb128 0x13
 2607 0034 00       		.byte	0
 2608 0035 00       		.byte	0
 2609 0036 05       		.uleb128 0x5
 2610 0037 35       		.uleb128 0x35
 2611 0038 00       		.byte	0
 2612 0039 49       		.uleb128 0x49
 2613 003a 13       		.uleb128 0x13
 2614 003b 00       		.byte	0
 2615 003c 00       		.byte	0
 2616 003d 06       		.uleb128 0x6
 2617 003e 2E       		.uleb128 0x2e
 2618 003f 01       		.byte	0x1
 2619 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 76


 2620 0041 19       		.uleb128 0x19
 2621 0042 03       		.uleb128 0x3
 2622 0043 0E       		.uleb128 0xe
 2623 0044 3A       		.uleb128 0x3a
 2624 0045 0B       		.uleb128 0xb
 2625 0046 3B       		.uleb128 0x3b
 2626 0047 05       		.uleb128 0x5
 2627 0048 27       		.uleb128 0x27
 2628 0049 19       		.uleb128 0x19
 2629 004a 20       		.uleb128 0x20
 2630 004b 0B       		.uleb128 0xb
 2631 004c 01       		.uleb128 0x1
 2632 004d 13       		.uleb128 0x13
 2633 004e 00       		.byte	0
 2634 004f 00       		.byte	0
 2635 0050 07       		.uleb128 0x7
 2636 0051 05       		.uleb128 0x5
 2637 0052 00       		.byte	0
 2638 0053 03       		.uleb128 0x3
 2639 0054 0E       		.uleb128 0xe
 2640 0055 3A       		.uleb128 0x3a
 2641 0056 0B       		.uleb128 0xb
 2642 0057 3B       		.uleb128 0x3b
 2643 0058 05       		.uleb128 0x5
 2644 0059 49       		.uleb128 0x49
 2645 005a 13       		.uleb128 0x13
 2646 005b 00       		.byte	0
 2647 005c 00       		.byte	0
 2648 005d 08       		.uleb128 0x8
 2649 005e 2E       		.uleb128 0x2e
 2650 005f 01       		.byte	0x1
 2651 0060 3F       		.uleb128 0x3f
 2652 0061 19       		.uleb128 0x19
 2653 0062 03       		.uleb128 0x3
 2654 0063 0E       		.uleb128 0xe
 2655 0064 3A       		.uleb128 0x3a
 2656 0065 0B       		.uleb128 0xb
 2657 0066 3B       		.uleb128 0x3b
 2658 0067 0B       		.uleb128 0xb
 2659 0068 27       		.uleb128 0x27
 2660 0069 19       		.uleb128 0x19
 2661 006a 11       		.uleb128 0x11
 2662 006b 01       		.uleb128 0x1
 2663 006c 12       		.uleb128 0x12
 2664 006d 06       		.uleb128 0x6
 2665 006e 40       		.uleb128 0x40
 2666 006f 18       		.uleb128 0x18
 2667 0070 9742     		.uleb128 0x2117
 2668 0072 19       		.uleb128 0x19
 2669 0073 01       		.uleb128 0x1
 2670 0074 13       		.uleb128 0x13
 2671 0075 00       		.byte	0
 2672 0076 00       		.byte	0
 2673 0077 09       		.uleb128 0x9
 2674 0078 1D       		.uleb128 0x1d
 2675 0079 01       		.byte	0x1
 2676 007a 31       		.uleb128 0x31
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 77


 2677 007b 13       		.uleb128 0x13
 2678 007c 11       		.uleb128 0x11
 2679 007d 01       		.uleb128 0x1
 2680 007e 12       		.uleb128 0x12
 2681 007f 06       		.uleb128 0x6
 2682 0080 58       		.uleb128 0x58
 2683 0081 0B       		.uleb128 0xb
 2684 0082 59       		.uleb128 0x59
 2685 0083 0B       		.uleb128 0xb
 2686 0084 01       		.uleb128 0x1
 2687 0085 13       		.uleb128 0x13
 2688 0086 00       		.byte	0
 2689 0087 00       		.byte	0
 2690 0088 0A       		.uleb128 0xa
 2691 0089 05       		.uleb128 0x5
 2692 008a 00       		.byte	0
 2693 008b 31       		.uleb128 0x31
 2694 008c 13       		.uleb128 0x13
 2695 008d 02       		.uleb128 0x2
 2696 008e 17       		.uleb128 0x17
 2697 008f 00       		.byte	0
 2698 0090 00       		.byte	0
 2699 0091 0B       		.uleb128 0xb
 2700 0092 1D       		.uleb128 0x1d
 2701 0093 01       		.byte	0x1
 2702 0094 31       		.uleb128 0x31
 2703 0095 13       		.uleb128 0x13
 2704 0096 11       		.uleb128 0x11
 2705 0097 01       		.uleb128 0x1
 2706 0098 12       		.uleb128 0x12
 2707 0099 06       		.uleb128 0x6
 2708 009a 58       		.uleb128 0x58
 2709 009b 0B       		.uleb128 0xb
 2710 009c 59       		.uleb128 0x59
 2711 009d 0B       		.uleb128 0xb
 2712 009e 00       		.byte	0
 2713 009f 00       		.byte	0
 2714 00a0 0C       		.uleb128 0xc
 2715 00a1 34       		.uleb128 0x34
 2716 00a2 00       		.byte	0
 2717 00a3 03       		.uleb128 0x3
 2718 00a4 0E       		.uleb128 0xe
 2719 00a5 3A       		.uleb128 0x3a
 2720 00a6 0B       		.uleb128 0xb
 2721 00a7 3B       		.uleb128 0x3b
 2722 00a8 0B       		.uleb128 0xb
 2723 00a9 49       		.uleb128 0x49
 2724 00aa 13       		.uleb128 0x13
 2725 00ab 02       		.uleb128 0x2
 2726 00ac 17       		.uleb128 0x17
 2727 00ad 00       		.byte	0
 2728 00ae 00       		.byte	0
 2729 00af 0D       		.uleb128 0xd
 2730 00b0 898201   		.uleb128 0x4109
 2731 00b3 00       		.byte	0
 2732 00b4 11       		.uleb128 0x11
 2733 00b5 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 78


 2734 00b6 31       		.uleb128 0x31
 2735 00b7 13       		.uleb128 0x13
 2736 00b8 00       		.byte	0
 2737 00b9 00       		.byte	0
 2738 00ba 0E       		.uleb128 0xe
 2739 00bb 2E       		.uleb128 0x2e
 2740 00bc 01       		.byte	0x1
 2741 00bd 3F       		.uleb128 0x3f
 2742 00be 19       		.uleb128 0x19
 2743 00bf 03       		.uleb128 0x3
 2744 00c0 0E       		.uleb128 0xe
 2745 00c1 3A       		.uleb128 0x3a
 2746 00c2 0B       		.uleb128 0xb
 2747 00c3 3B       		.uleb128 0x3b
 2748 00c4 05       		.uleb128 0x5
 2749 00c5 27       		.uleb128 0x27
 2750 00c6 19       		.uleb128 0x19
 2751 00c7 11       		.uleb128 0x11
 2752 00c8 01       		.uleb128 0x1
 2753 00c9 12       		.uleb128 0x12
 2754 00ca 06       		.uleb128 0x6
 2755 00cb 40       		.uleb128 0x40
 2756 00cc 18       		.uleb128 0x18
 2757 00cd 9742     		.uleb128 0x2117
 2758 00cf 19       		.uleb128 0x19
 2759 00d0 01       		.uleb128 0x1
 2760 00d1 13       		.uleb128 0x13
 2761 00d2 00       		.byte	0
 2762 00d3 00       		.byte	0
 2763 00d4 0F       		.uleb128 0xf
 2764 00d5 34       		.uleb128 0x34
 2765 00d6 00       		.byte	0
 2766 00d7 03       		.uleb128 0x3
 2767 00d8 0E       		.uleb128 0xe
 2768 00d9 3A       		.uleb128 0x3a
 2769 00da 0B       		.uleb128 0xb
 2770 00db 3B       		.uleb128 0x3b
 2771 00dc 05       		.uleb128 0x5
 2772 00dd 49       		.uleb128 0x49
 2773 00de 13       		.uleb128 0x13
 2774 00df 02       		.uleb128 0x2
 2775 00e0 17       		.uleb128 0x17
 2776 00e1 00       		.byte	0
 2777 00e2 00       		.byte	0
 2778 00e3 10       		.uleb128 0x10
 2779 00e4 05       		.uleb128 0x5
 2780 00e5 00       		.byte	0
 2781 00e6 03       		.uleb128 0x3
 2782 00e7 0E       		.uleb128 0xe
 2783 00e8 3A       		.uleb128 0x3a
 2784 00e9 0B       		.uleb128 0xb
 2785 00ea 3B       		.uleb128 0x3b
 2786 00eb 05       		.uleb128 0x5
 2787 00ec 49       		.uleb128 0x49
 2788 00ed 13       		.uleb128 0x13
 2789 00ee 02       		.uleb128 0x2
 2790 00ef 17       		.uleb128 0x17
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 79


 2791 00f0 00       		.byte	0
 2792 00f1 00       		.byte	0
 2793 00f2 11       		.uleb128 0x11
 2794 00f3 2E       		.uleb128 0x2e
 2795 00f4 01       		.byte	0x1
 2796 00f5 31       		.uleb128 0x31
 2797 00f6 13       		.uleb128 0x13
 2798 00f7 11       		.uleb128 0x11
 2799 00f8 01       		.uleb128 0x1
 2800 00f9 12       		.uleb128 0x12
 2801 00fa 06       		.uleb128 0x6
 2802 00fb 40       		.uleb128 0x40
 2803 00fc 18       		.uleb128 0x18
 2804 00fd 9742     		.uleb128 0x2117
 2805 00ff 19       		.uleb128 0x19
 2806 0100 01       		.uleb128 0x1
 2807 0101 13       		.uleb128 0x13
 2808 0102 00       		.byte	0
 2809 0103 00       		.byte	0
 2810 0104 12       		.uleb128 0x12
 2811 0105 2E       		.uleb128 0x2e
 2812 0106 00       		.byte	0
 2813 0107 3F       		.uleb128 0x3f
 2814 0108 19       		.uleb128 0x19
 2815 0109 03       		.uleb128 0x3
 2816 010a 0E       		.uleb128 0xe
 2817 010b 3A       		.uleb128 0x3a
 2818 010c 0B       		.uleb128 0xb
 2819 010d 3B       		.uleb128 0x3b
 2820 010e 05       		.uleb128 0x5
 2821 010f 27       		.uleb128 0x27
 2822 0110 19       		.uleb128 0x19
 2823 0111 49       		.uleb128 0x49
 2824 0112 13       		.uleb128 0x13
 2825 0113 11       		.uleb128 0x11
 2826 0114 01       		.uleb128 0x1
 2827 0115 12       		.uleb128 0x12
 2828 0116 06       		.uleb128 0x6
 2829 0117 40       		.uleb128 0x40
 2830 0118 18       		.uleb128 0x18
 2831 0119 9742     		.uleb128 0x2117
 2832 011b 19       		.uleb128 0x19
 2833 011c 00       		.byte	0
 2834 011d 00       		.byte	0
 2835 011e 13       		.uleb128 0x13
 2836 011f 2E       		.uleb128 0x2e
 2837 0120 00       		.byte	0
 2838 0121 3F       		.uleb128 0x3f
 2839 0122 19       		.uleb128 0x19
 2840 0123 03       		.uleb128 0x3
 2841 0124 0E       		.uleb128 0xe
 2842 0125 3A       		.uleb128 0x3a
 2843 0126 0B       		.uleb128 0xb
 2844 0127 3B       		.uleb128 0x3b
 2845 0128 05       		.uleb128 0x5
 2846 0129 27       		.uleb128 0x27
 2847 012a 19       		.uleb128 0x19
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 80


 2848 012b 49       		.uleb128 0x49
 2849 012c 13       		.uleb128 0x13
 2850 012d 20       		.uleb128 0x20
 2851 012e 0B       		.uleb128 0xb
 2852 012f 00       		.byte	0
 2853 0130 00       		.byte	0
 2854 0131 14       		.uleb128 0x14
 2855 0132 2E       		.uleb128 0x2e
 2856 0133 00       		.byte	0
 2857 0134 31       		.uleb128 0x31
 2858 0135 13       		.uleb128 0x13
 2859 0136 11       		.uleb128 0x11
 2860 0137 01       		.uleb128 0x1
 2861 0138 12       		.uleb128 0x12
 2862 0139 06       		.uleb128 0x6
 2863 013a 40       		.uleb128 0x40
 2864 013b 18       		.uleb128 0x18
 2865 013c 9742     		.uleb128 0x2117
 2866 013e 19       		.uleb128 0x19
 2867 013f 00       		.byte	0
 2868 0140 00       		.byte	0
 2869 0141 15       		.uleb128 0x15
 2870 0142 05       		.uleb128 0x5
 2871 0143 00       		.byte	0
 2872 0144 31       		.uleb128 0x31
 2873 0145 13       		.uleb128 0x13
 2874 0146 02       		.uleb128 0x2
 2875 0147 18       		.uleb128 0x18
 2876 0148 00       		.byte	0
 2877 0149 00       		.byte	0
 2878 014a 16       		.uleb128 0x16
 2879 014b 05       		.uleb128 0x5
 2880 014c 00       		.byte	0
 2881 014d 03       		.uleb128 0x3
 2882 014e 0E       		.uleb128 0xe
 2883 014f 3A       		.uleb128 0x3a
 2884 0150 0B       		.uleb128 0xb
 2885 0151 3B       		.uleb128 0x3b
 2886 0152 05       		.uleb128 0x5
 2887 0153 49       		.uleb128 0x49
 2888 0154 13       		.uleb128 0x13
 2889 0155 02       		.uleb128 0x2
 2890 0156 18       		.uleb128 0x18
 2891 0157 00       		.byte	0
 2892 0158 00       		.byte	0
 2893 0159 17       		.uleb128 0x17
 2894 015a 34       		.uleb128 0x34
 2895 015b 00       		.byte	0
 2896 015c 03       		.uleb128 0x3
 2897 015d 0E       		.uleb128 0xe
 2898 015e 3A       		.uleb128 0x3a
 2899 015f 0B       		.uleb128 0xb
 2900 0160 3B       		.uleb128 0x3b
 2901 0161 0B       		.uleb128 0xb
 2902 0162 49       		.uleb128 0x49
 2903 0163 13       		.uleb128 0x13
 2904 0164 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 81


 2905 0165 19       		.uleb128 0x19
 2906 0166 02       		.uleb128 0x2
 2907 0167 18       		.uleb128 0x18
 2908 0168 00       		.byte	0
 2909 0169 00       		.byte	0
 2910 016a 18       		.uleb128 0x18
 2911 016b 2E       		.uleb128 0x2e
 2912 016c 00       		.byte	0
 2913 016d 3F       		.uleb128 0x3f
 2914 016e 19       		.uleb128 0x19
 2915 016f 3C       		.uleb128 0x3c
 2916 0170 19       		.uleb128 0x19
 2917 0171 6E       		.uleb128 0x6e
 2918 0172 0E       		.uleb128 0xe
 2919 0173 03       		.uleb128 0x3
 2920 0174 0E       		.uleb128 0xe
 2921 0175 3A       		.uleb128 0x3a
 2922 0176 0B       		.uleb128 0xb
 2923 0177 3B       		.uleb128 0x3b
 2924 0178 0B       		.uleb128 0xb
 2925 0179 00       		.byte	0
 2926 017a 00       		.byte	0
 2927 017b 00       		.byte	0
 2928              		.section	.debug_loc,"",%progbits
 2929              	.Ldebug_loc0:
 2930              	.LLST0:
 2931 0000 0E000000 		.4byte	.LVL0
 2932 0004 16000000 		.4byte	.LVL1
 2933 0008 0200     		.2byte	0x2
 2934 000a 31       		.byte	0x31
 2935 000b 9F       		.byte	0x9f
 2936 000c 00000000 		.4byte	0
 2937 0010 00000000 		.4byte	0
 2938              	.LLST1:
 2939 0014 16000000 		.4byte	.LVL1
 2940 0018 1C000000 		.4byte	.LVL2
 2941 001c 0200     		.2byte	0x2
 2942 001e 4E       		.byte	0x4e
 2943 001f 9F       		.byte	0x9f
 2944 0020 00000000 		.4byte	0
 2945 0024 00000000 		.4byte	0
 2946              	.LLST2:
 2947 0028 1C000000 		.4byte	.LVL2
 2948 002c 22000000 		.4byte	.LVL3
 2949 0030 0200     		.2byte	0x2
 2950 0032 30       		.byte	0x30
 2951 0033 9F       		.byte	0x9f
 2952 0034 00000000 		.4byte	0
 2953 0038 00000000 		.4byte	0
 2954              	.LLST3:
 2955 003c 06000000 		.4byte	.LVL4
 2956 0040 13000000 		.4byte	.LVL5-1
 2957 0044 0100     		.2byte	0x1
 2958 0046 50       		.byte	0x50
 2959 0047 00000000 		.4byte	0
 2960 004b 00000000 		.4byte	0
 2961              	.LLST4:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 82


 2962 004f 06000000 		.4byte	.LVL8
 2963 0053 13000000 		.4byte	.LVL9-1
 2964 0057 0100     		.2byte	0x1
 2965 0059 50       		.byte	0x50
 2966 005a 00000000 		.4byte	0
 2967 005e 00000000 		.4byte	0
 2968              	.LLST5:
 2969 0062 00000000 		.4byte	.LVL10
 2970 0066 07000000 		.4byte	.LVL11-1
 2971 006a 0100     		.2byte	0x1
 2972 006c 50       		.byte	0x50
 2973 006d 07000000 		.4byte	.LVL11-1
 2974 0071 16000000 		.4byte	.LVL12
 2975 0075 0100     		.2byte	0x1
 2976 0077 54       		.byte	0x54
 2977 0078 16000000 		.4byte	.LVL12
 2978 007c 28000000 		.4byte	.LFE5
 2979 0080 0400     		.2byte	0x4
 2980 0082 F3       		.byte	0xf3
 2981 0083 01       		.uleb128 0x1
 2982 0084 50       		.byte	0x50
 2983 0085 9F       		.byte	0x9f
 2984 0086 00000000 		.4byte	0
 2985 008a 00000000 		.4byte	0
 2986              	.LLST6:
 2987 008e 08000000 		.4byte	.LVL11
 2988 0092 1B000000 		.4byte	.LVL13-1
 2989 0096 0100     		.2byte	0x1
 2990 0098 50       		.byte	0x50
 2991 0099 00000000 		.4byte	0
 2992 009d 00000000 		.4byte	0
 2993              	.LLST7:
 2994 00a1 00000000 		.4byte	.LVL14
 2995 00a5 07000000 		.4byte	.LVL15-1
 2996 00a9 0100     		.2byte	0x1
 2997 00ab 50       		.byte	0x50
 2998 00ac 07000000 		.4byte	.LVL15-1
 2999 00b0 16000000 		.4byte	.LVL16
 3000 00b4 0100     		.2byte	0x1
 3001 00b6 54       		.byte	0x54
 3002 00b7 16000000 		.4byte	.LVL16
 3003 00bb 28000000 		.4byte	.LFE6
 3004 00bf 0400     		.2byte	0x4
 3005 00c1 F3       		.byte	0xf3
 3006 00c2 01       		.uleb128 0x1
 3007 00c3 50       		.byte	0x50
 3008 00c4 9F       		.byte	0x9f
 3009 00c5 00000000 		.4byte	0
 3010 00c9 00000000 		.4byte	0
 3011              	.LLST8:
 3012 00cd 08000000 		.4byte	.LVL15
 3013 00d1 1B000000 		.4byte	.LVL17-1
 3014 00d5 0100     		.2byte	0x1
 3015 00d7 50       		.byte	0x50
 3016 00d8 00000000 		.4byte	0
 3017 00dc 00000000 		.4byte	0
 3018              	.LLST9:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 83


 3019 00e0 00000000 		.4byte	.LVL18
 3020 00e4 07000000 		.4byte	.LVL19-1
 3021 00e8 0100     		.2byte	0x1
 3022 00ea 50       		.byte	0x50
 3023 00eb 07000000 		.4byte	.LVL19-1
 3024 00ef 16000000 		.4byte	.LVL20
 3025 00f3 0100     		.2byte	0x1
 3026 00f5 54       		.byte	0x54
 3027 00f6 16000000 		.4byte	.LVL20
 3028 00fa 28000000 		.4byte	.LFE7
 3029 00fe 0400     		.2byte	0x4
 3030 0100 F3       		.byte	0xf3
 3031 0101 01       		.uleb128 0x1
 3032 0102 50       		.byte	0x50
 3033 0103 9F       		.byte	0x9f
 3034 0104 00000000 		.4byte	0
 3035 0108 00000000 		.4byte	0
 3036              	.LLST10:
 3037 010c 08000000 		.4byte	.LVL19
 3038 0110 1B000000 		.4byte	.LVL21-1
 3039 0114 0100     		.2byte	0x1
 3040 0116 50       		.byte	0x50
 3041 0117 00000000 		.4byte	0
 3042 011b 00000000 		.4byte	0
 3043              	.LLST11:
 3044 011f 00000000 		.4byte	.LVL22
 3045 0123 07000000 		.4byte	.LVL23-1
 3046 0127 0100     		.2byte	0x1
 3047 0129 50       		.byte	0x50
 3048 012a 07000000 		.4byte	.LVL23-1
 3049 012e 16000000 		.4byte	.LVL24
 3050 0132 0100     		.2byte	0x1
 3051 0134 54       		.byte	0x54
 3052 0135 16000000 		.4byte	.LVL24
 3053 0139 30000000 		.4byte	.LFE8
 3054 013d 0400     		.2byte	0x4
 3055 013f F3       		.byte	0xf3
 3056 0140 01       		.uleb128 0x1
 3057 0141 50       		.byte	0x50
 3058 0142 9F       		.byte	0x9f
 3059 0143 00000000 		.4byte	0
 3060 0147 00000000 		.4byte	0
 3061              	.LLST12:
 3062 014b 08000000 		.4byte	.LVL23
 3063 014f 23000000 		.4byte	.LVL25-1
 3064 0153 0100     		.2byte	0x1
 3065 0155 50       		.byte	0x50
 3066 0156 00000000 		.4byte	0
 3067 015a 00000000 		.4byte	0
 3068              	.LLST13:
 3069 015e 00000000 		.4byte	.LVL26
 3070 0162 04000000 		.4byte	.LVL27
 3071 0166 0100     		.2byte	0x1
 3072 0168 50       		.byte	0x50
 3073 0169 04000000 		.4byte	.LVL27
 3074 016d 10000000 		.4byte	.LFE9
 3075 0171 0400     		.2byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 84


 3076 0173 F3       		.byte	0xf3
 3077 0174 01       		.uleb128 0x1
 3078 0175 50       		.byte	0x50
 3079 0176 9F       		.byte	0x9f
 3080 0177 00000000 		.4byte	0
 3081 017b 00000000 		.4byte	0
 3082              	.LLST14:
 3083 017f 00000000 		.4byte	.LVL28
 3084 0183 07000000 		.4byte	.LVL29-1
 3085 0187 0100     		.2byte	0x1
 3086 0189 50       		.byte	0x50
 3087 018a 07000000 		.4byte	.LVL29-1
 3088 018e 0E000000 		.4byte	.LVL30
 3089 0192 0100     		.2byte	0x1
 3090 0194 54       		.byte	0x54
 3091 0195 0E000000 		.4byte	.LVL30
 3092 0199 28000000 		.4byte	.LFE10
 3093 019d 0400     		.2byte	0x4
 3094 019f F3       		.byte	0xf3
 3095 01a0 01       		.uleb128 0x1
 3096 01a1 50       		.byte	0x50
 3097 01a2 9F       		.byte	0x9f
 3098 01a3 00000000 		.4byte	0
 3099 01a7 00000000 		.4byte	0
 3100              	.LLST15:
 3101 01ab 08000000 		.4byte	.LVL29
 3102 01af 1F000000 		.4byte	.LVL31-1
 3103 01b3 0100     		.2byte	0x1
 3104 01b5 50       		.byte	0x50
 3105 01b6 00000000 		.4byte	0
 3106 01ba 00000000 		.4byte	0
 3107              	.LLST16:
 3108 01be 00000000 		.4byte	.LVL32
 3109 01c2 07000000 		.4byte	.LVL33-1
 3110 01c6 0100     		.2byte	0x1
 3111 01c8 50       		.byte	0x50
 3112 01c9 07000000 		.4byte	.LVL33-1
 3113 01cd 0E000000 		.4byte	.LVL34
 3114 01d1 0100     		.2byte	0x1
 3115 01d3 54       		.byte	0x54
 3116 01d4 0E000000 		.4byte	.LVL34
 3117 01d8 28000000 		.4byte	.LFE11
 3118 01dc 0400     		.2byte	0x4
 3119 01de F3       		.byte	0xf3
 3120 01df 01       		.uleb128 0x1
 3121 01e0 50       		.byte	0x50
 3122 01e1 9F       		.byte	0x9f
 3123 01e2 00000000 		.4byte	0
 3124 01e6 00000000 		.4byte	0
 3125              	.LLST17:
 3126 01ea 08000000 		.4byte	.LVL33
 3127 01ee 1F000000 		.4byte	.LVL35-1
 3128 01f2 0100     		.2byte	0x1
 3129 01f4 50       		.byte	0x50
 3130 01f5 00000000 		.4byte	0
 3131 01f9 00000000 		.4byte	0
 3132              	.LLST18:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 85


 3133 01fd 00000000 		.4byte	.LVL36
 3134 0201 07000000 		.4byte	.LVL37-1
 3135 0205 0100     		.2byte	0x1
 3136 0207 50       		.byte	0x50
 3137 0208 07000000 		.4byte	.LVL37-1
 3138 020c 10000000 		.4byte	.LVL38
 3139 0210 0100     		.2byte	0x1
 3140 0212 54       		.byte	0x54
 3141 0213 10000000 		.4byte	.LVL38
 3142 0217 2C000000 		.4byte	.LFE12
 3143 021b 0400     		.2byte	0x4
 3144 021d F3       		.byte	0xf3
 3145 021e 01       		.uleb128 0x1
 3146 021f 50       		.byte	0x50
 3147 0220 9F       		.byte	0x9f
 3148 0221 00000000 		.4byte	0
 3149 0225 00000000 		.4byte	0
 3150              	.LLST19:
 3151 0229 08000000 		.4byte	.LVL37
 3152 022d 1F000000 		.4byte	.LVL39-1
 3153 0231 0100     		.2byte	0x1
 3154 0233 50       		.byte	0x50
 3155 0234 00000000 		.4byte	0
 3156 0238 00000000 		.4byte	0
 3157              	.LLST20:
 3158 023c 00000000 		.4byte	.LVL40
 3159 0240 07000000 		.4byte	.LVL41-1
 3160 0244 0100     		.2byte	0x1
 3161 0246 50       		.byte	0x50
 3162 0247 07000000 		.4byte	.LVL41-1
 3163 024b 16000000 		.4byte	.LVL42
 3164 024f 0100     		.2byte	0x1
 3165 0251 54       		.byte	0x54
 3166 0252 16000000 		.4byte	.LVL42
 3167 0256 28000000 		.4byte	.LFE13
 3168 025a 0400     		.2byte	0x4
 3169 025c F3       		.byte	0xf3
 3170 025d 01       		.uleb128 0x1
 3171 025e 50       		.byte	0x50
 3172 025f 9F       		.byte	0x9f
 3173 0260 00000000 		.4byte	0
 3174 0264 00000000 		.4byte	0
 3175              	.LLST21:
 3176 0268 08000000 		.4byte	.LVL41
 3177 026c 1B000000 		.4byte	.LVL43-1
 3178 0270 0100     		.2byte	0x1
 3179 0272 50       		.byte	0x50
 3180 0273 00000000 		.4byte	0
 3181 0277 00000000 		.4byte	0
 3182              	.LLST22:
 3183 027b 00000000 		.4byte	.LVL44
 3184 027f 04000000 		.4byte	.LVL45
 3185 0283 0100     		.2byte	0x1
 3186 0285 50       		.byte	0x50
 3187 0286 04000000 		.4byte	.LVL45
 3188 028a 0C000000 		.4byte	.LFE14
 3189 028e 0400     		.2byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 86


 3190 0290 F3       		.byte	0xf3
 3191 0291 01       		.uleb128 0x1
 3192 0292 50       		.byte	0x50
 3193 0293 9F       		.byte	0x9f
 3194 0294 00000000 		.4byte	0
 3195 0298 00000000 		.4byte	0
 3196              	.LLST23:
 3197 029c 00000000 		.4byte	.LVL46
 3198 02a0 07000000 		.4byte	.LVL47-1
 3199 02a4 0100     		.2byte	0x1
 3200 02a6 50       		.byte	0x50
 3201 02a7 07000000 		.4byte	.LVL47-1
 3202 02ab 16000000 		.4byte	.LVL48
 3203 02af 0100     		.2byte	0x1
 3204 02b1 54       		.byte	0x54
 3205 02b2 16000000 		.4byte	.LVL48
 3206 02b6 28000000 		.4byte	.LFE16
 3207 02ba 0400     		.2byte	0x4
 3208 02bc F3       		.byte	0xf3
 3209 02bd 01       		.uleb128 0x1
 3210 02be 50       		.byte	0x50
 3211 02bf 9F       		.byte	0x9f
 3212 02c0 00000000 		.4byte	0
 3213 02c4 00000000 		.4byte	0
 3214              	.LLST24:
 3215 02c8 08000000 		.4byte	.LVL47
 3216 02cc 1B000000 		.4byte	.LVL49-1
 3217 02d0 0100     		.2byte	0x1
 3218 02d2 50       		.byte	0x50
 3219 02d3 00000000 		.4byte	0
 3220 02d7 00000000 		.4byte	0
 3221              	.LLST25:
 3222 02db 00000000 		.4byte	.LVL50
 3223 02df 04000000 		.4byte	.LVL51
 3224 02e3 0100     		.2byte	0x1
 3225 02e5 50       		.byte	0x50
 3226 02e6 04000000 		.4byte	.LVL51
 3227 02ea 0C000000 		.4byte	.LFE17
 3228 02ee 0400     		.2byte	0x4
 3229 02f0 F3       		.byte	0xf3
 3230 02f1 01       		.uleb128 0x1
 3231 02f2 50       		.byte	0x50
 3232 02f3 9F       		.byte	0x9f
 3233 02f4 00000000 		.4byte	0
 3234 02f8 00000000 		.4byte	0
 3235              	.LLST26:
 3236 02fc 00000000 		.4byte	.LVL52
 3237 0300 07000000 		.4byte	.LVL53-1
 3238 0304 0100     		.2byte	0x1
 3239 0306 50       		.byte	0x50
 3240 0307 07000000 		.4byte	.LVL53-1
 3241 030b 1E000000 		.4byte	.LVL55
 3242 030f 0100     		.2byte	0x1
 3243 0311 54       		.byte	0x54
 3244 0312 1E000000 		.4byte	.LVL55
 3245 0316 24000000 		.4byte	.LFE19
 3246 031a 0400     		.2byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 87


 3247 031c F3       		.byte	0xf3
 3248 031d 01       		.uleb128 0x1
 3249 031e 50       		.byte	0x50
 3250 031f 9F       		.byte	0x9f
 3251 0320 00000000 		.4byte	0
 3252 0324 00000000 		.4byte	0
 3253              	.LLST27:
 3254 0328 08000000 		.4byte	.LVL53
 3255 032c 1D000000 		.4byte	.LVL54-1
 3256 0330 0100     		.2byte	0x1
 3257 0332 50       		.byte	0x50
 3258 0333 00000000 		.4byte	0
 3259 0337 00000000 		.4byte	0
 3260              	.LLST28:
 3261 033b 00000000 		.4byte	.LVL56
 3262 033f 04000000 		.4byte	.LVL57
 3263 0343 0100     		.2byte	0x1
 3264 0345 50       		.byte	0x50
 3265 0346 04000000 		.4byte	.LVL57
 3266 034a 0C000000 		.4byte	.LFE20
 3267 034e 0400     		.2byte	0x4
 3268 0350 F3       		.byte	0xf3
 3269 0351 01       		.uleb128 0x1
 3270 0352 50       		.byte	0x50
 3271 0353 9F       		.byte	0x9f
 3272 0354 00000000 		.4byte	0
 3273 0358 00000000 		.4byte	0
 3274              	.LLST29:
 3275 035c 00000000 		.4byte	.LVL58
 3276 0360 07000000 		.4byte	.LVL59-1
 3277 0364 0100     		.2byte	0x1
 3278 0366 50       		.byte	0x50
 3279 0367 07000000 		.4byte	.LVL59-1
 3280 036b 0E000000 		.4byte	.LVL60
 3281 036f 0100     		.2byte	0x1
 3282 0371 54       		.byte	0x54
 3283 0372 0E000000 		.4byte	.LVL60
 3284 0376 28000000 		.4byte	.LFE22
 3285 037a 0400     		.2byte	0x4
 3286 037c F3       		.byte	0xf3
 3287 037d 01       		.uleb128 0x1
 3288 037e 50       		.byte	0x50
 3289 037f 9F       		.byte	0x9f
 3290 0380 00000000 		.4byte	0
 3291 0384 00000000 		.4byte	0
 3292              	.LLST30:
 3293 0388 08000000 		.4byte	.LVL59
 3294 038c 1F000000 		.4byte	.LVL61-1
 3295 0390 0100     		.2byte	0x1
 3296 0392 50       		.byte	0x50
 3297 0393 00000000 		.4byte	0
 3298 0397 00000000 		.4byte	0
 3299              	.LLST31:
 3300 039b 00000000 		.4byte	.LVL62
 3301 039f 04000000 		.4byte	.LVL63
 3302 03a3 0100     		.2byte	0x1
 3303 03a5 50       		.byte	0x50
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 88


 3304 03a6 04000000 		.4byte	.LVL63
 3305 03aa 0C000000 		.4byte	.LFE23
 3306 03ae 0400     		.2byte	0x4
 3307 03b0 F3       		.byte	0xf3
 3308 03b1 01       		.uleb128 0x1
 3309 03b2 50       		.byte	0x50
 3310 03b3 9F       		.byte	0x9f
 3311 03b4 00000000 		.4byte	0
 3312 03b8 00000000 		.4byte	0
 3313              	.LLST32:
 3314 03bc 00000000 		.4byte	.LVL64
 3315 03c0 04000000 		.4byte	.LVL65
 3316 03c4 0100     		.2byte	0x1
 3317 03c6 50       		.byte	0x50
 3318 03c7 04000000 		.4byte	.LVL65
 3319 03cb 0C000000 		.4byte	.LFE25
 3320 03cf 0400     		.2byte	0x4
 3321 03d1 F3       		.byte	0xf3
 3322 03d2 01       		.uleb128 0x1
 3323 03d3 50       		.byte	0x50
 3324 03d4 9F       		.byte	0x9f
 3325 03d5 00000000 		.4byte	0
 3326 03d9 00000000 		.4byte	0
 3327              	.LLST33:
 3328 03dd 00000000 		.4byte	.LVL66
 3329 03e1 07000000 		.4byte	.LVL67-1
 3330 03e5 0100     		.2byte	0x1
 3331 03e7 50       		.byte	0x50
 3332 03e8 07000000 		.4byte	.LVL67-1
 3333 03ec 16000000 		.4byte	.LVL68
 3334 03f0 0100     		.2byte	0x1
 3335 03f2 54       		.byte	0x54
 3336 03f3 16000000 		.4byte	.LVL68
 3337 03f7 24000000 		.4byte	.LFE29
 3338 03fb 0400     		.2byte	0x4
 3339 03fd F3       		.byte	0xf3
 3340 03fe 01       		.uleb128 0x1
 3341 03ff 50       		.byte	0x50
 3342 0400 9F       		.byte	0x9f
 3343 0401 00000000 		.4byte	0
 3344 0405 00000000 		.4byte	0
 3345              	.LLST34:
 3346 0409 08000000 		.4byte	.LVL67
 3347 040d 1B000000 		.4byte	.LVL69-1
 3348 0411 0100     		.2byte	0x1
 3349 0413 50       		.byte	0x50
 3350 0414 00000000 		.4byte	0
 3351 0418 00000000 		.4byte	0
 3352              	.LLST35:
 3353 041c 00000000 		.4byte	.LVL70
 3354 0420 07000000 		.4byte	.LVL71-1
 3355 0424 0100     		.2byte	0x1
 3356 0426 50       		.byte	0x50
 3357 0427 07000000 		.4byte	.LVL71-1
 3358 042b 1E000000 		.4byte	.LVL73
 3359 042f 0100     		.2byte	0x1
 3360 0431 54       		.byte	0x54
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 89


 3361 0432 1E000000 		.4byte	.LVL73
 3362 0436 24000000 		.4byte	.LFE30
 3363 043a 0400     		.2byte	0x4
 3364 043c F3       		.byte	0xf3
 3365 043d 01       		.uleb128 0x1
 3366 043e 50       		.byte	0x50
 3367 043f 9F       		.byte	0x9f
 3368 0440 00000000 		.4byte	0
 3369 0444 00000000 		.4byte	0
 3370              	.LLST36:
 3371 0448 08000000 		.4byte	.LVL71
 3372 044c 1D000000 		.4byte	.LVL72-1
 3373 0450 0100     		.2byte	0x1
 3374 0452 50       		.byte	0x50
 3375 0453 00000000 		.4byte	0
 3376 0457 00000000 		.4byte	0
 3377              	.LLST37:
 3378 045b 00000000 		.4byte	.LVL74
 3379 045f 07000000 		.4byte	.LVL75-1
 3380 0463 0100     		.2byte	0x1
 3381 0465 50       		.byte	0x50
 3382 0466 07000000 		.4byte	.LVL75-1
 3383 046a 1E000000 		.4byte	.LVL77
 3384 046e 0100     		.2byte	0x1
 3385 0470 54       		.byte	0x54
 3386 0471 1E000000 		.4byte	.LVL77
 3387 0475 28000000 		.4byte	.LFE31
 3388 0479 0400     		.2byte	0x4
 3389 047b F3       		.byte	0xf3
 3390 047c 01       		.uleb128 0x1
 3391 047d 50       		.byte	0x50
 3392 047e 9F       		.byte	0x9f
 3393 047f 00000000 		.4byte	0
 3394 0483 00000000 		.4byte	0
 3395              	.LLST38:
 3396 0487 08000000 		.4byte	.LVL75
 3397 048b 1D000000 		.4byte	.LVL76-1
 3398 048f 0100     		.2byte	0x1
 3399 0491 50       		.byte	0x50
 3400 0492 00000000 		.4byte	0
 3401 0496 00000000 		.4byte	0
 3402              	.LLST39:
 3403 049a 00000000 		.4byte	.LVL78
 3404 049e 07000000 		.4byte	.LVL79-1
 3405 04a2 0100     		.2byte	0x1
 3406 04a4 50       		.byte	0x50
 3407 04a5 07000000 		.4byte	.LVL79-1
 3408 04a9 1E000000 		.4byte	.LVL81
 3409 04ad 0100     		.2byte	0x1
 3410 04af 54       		.byte	0x54
 3411 04b0 1E000000 		.4byte	.LVL81
 3412 04b4 24000000 		.4byte	.LFE32
 3413 04b8 0400     		.2byte	0x4
 3414 04ba F3       		.byte	0xf3
 3415 04bb 01       		.uleb128 0x1
 3416 04bc 50       		.byte	0x50
 3417 04bd 9F       		.byte	0x9f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 90


 3418 04be 00000000 		.4byte	0
 3419 04c2 00000000 		.4byte	0
 3420              	.LLST40:
 3421 04c6 08000000 		.4byte	.LVL79
 3422 04ca 1D000000 		.4byte	.LVL80-1
 3423 04ce 0100     		.2byte	0x1
 3424 04d0 50       		.byte	0x50
 3425 04d1 00000000 		.4byte	0
 3426 04d5 00000000 		.4byte	0
 3427              	.LLST41:
 3428 04d9 00000000 		.4byte	.LVL82
 3429 04dd 07000000 		.4byte	.LVL83-1
 3430 04e1 0100     		.2byte	0x1
 3431 04e3 50       		.byte	0x50
 3432 04e4 07000000 		.4byte	.LVL83-1
 3433 04e8 1E000000 		.4byte	.LVL85
 3434 04ec 0100     		.2byte	0x1
 3435 04ee 54       		.byte	0x54
 3436 04ef 1E000000 		.4byte	.LVL85
 3437 04f3 24000000 		.4byte	.LFE33
 3438 04f7 0400     		.2byte	0x4
 3439 04f9 F3       		.byte	0xf3
 3440 04fa 01       		.uleb128 0x1
 3441 04fb 50       		.byte	0x50
 3442 04fc 9F       		.byte	0x9f
 3443 04fd 00000000 		.4byte	0
 3444 0501 00000000 		.4byte	0
 3445              	.LLST42:
 3446 0505 08000000 		.4byte	.LVL83
 3447 0509 1D000000 		.4byte	.LVL84-1
 3448 050d 0100     		.2byte	0x1
 3449 050f 50       		.byte	0x50
 3450 0510 00000000 		.4byte	0
 3451 0514 00000000 		.4byte	0
 3452              	.LLST43:
 3453 0518 00000000 		.4byte	.LVL86
 3454 051c 0B000000 		.4byte	.LVL87-1
 3455 0520 0100     		.2byte	0x1
 3456 0522 50       		.byte	0x50
 3457 0523 0B000000 		.4byte	.LVL87-1
 3458 0527 1C000000 		.4byte	.LFE34
 3459 052b 0400     		.2byte	0x4
 3460 052d F3       		.byte	0xf3
 3461 052e 01       		.uleb128 0x1
 3462 052f 50       		.byte	0x50
 3463 0530 9F       		.byte	0x9f
 3464 0531 00000000 		.4byte	0
 3465 0535 00000000 		.4byte	0
 3466              	.LLST44:
 3467 0539 00000000 		.4byte	.LVL86
 3468 053d 0B000000 		.4byte	.LVL87-1
 3469 0541 0100     		.2byte	0x1
 3470 0543 51       		.byte	0x51
 3471 0544 0B000000 		.4byte	.LVL87-1
 3472 0548 14000000 		.4byte	.LVL89
 3473 054c 0100     		.2byte	0x1
 3474 054e 55       		.byte	0x55
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 91


 3475 054f 14000000 		.4byte	.LVL89
 3476 0553 1C000000 		.4byte	.LFE34
 3477 0557 0400     		.2byte	0x4
 3478 0559 F3       		.byte	0xf3
 3479 055a 01       		.uleb128 0x1
 3480 055b 51       		.byte	0x51
 3481 055c 9F       		.byte	0x9f
 3482 055d 00000000 		.4byte	0
 3483 0561 00000000 		.4byte	0
 3484              	.LLST45:
 3485 0565 0C000000 		.4byte	.LVL87
 3486 0569 13000000 		.4byte	.LVL88-1
 3487 056d 0100     		.2byte	0x1
 3488 056f 50       		.byte	0x50
 3489 0570 00000000 		.4byte	0
 3490 0574 00000000 		.4byte	0
 3491              		.section	.debug_aranges,"",%progbits
 3492 0000 44010000 		.4byte	0x144
 3493 0004 0200     		.2byte	0x2
 3494 0006 00000000 		.4byte	.Ldebug_info0
 3495 000a 04       		.byte	0x4
 3496 000b 00       		.byte	0
 3497 000c 0000     		.2byte	0
 3498 000e 0000     		.2byte	0
 3499 0010 00000000 		.4byte	.LFB1
 3500 0014 3C000000 		.4byte	.LFE1-.LFB1
 3501 0018 00000000 		.4byte	.LFB2
 3502 001c 1C000000 		.4byte	.LFE2-.LFB2
 3503 0020 00000000 		.4byte	.LFB3
 3504 0024 1C000000 		.4byte	.LFE3-.LFB3
 3505 0028 00000000 		.4byte	.LFB4
 3506 002c 1C000000 		.4byte	.LFE4-.LFB4
 3507 0030 00000000 		.4byte	.LFB5
 3508 0034 28000000 		.4byte	.LFE5-.LFB5
 3509 0038 00000000 		.4byte	.LFB6
 3510 003c 28000000 		.4byte	.LFE6-.LFB6
 3511 0040 00000000 		.4byte	.LFB7
 3512 0044 28000000 		.4byte	.LFE7-.LFB7
 3513 0048 00000000 		.4byte	.LFB8
 3514 004c 30000000 		.4byte	.LFE8-.LFB8
 3515 0050 00000000 		.4byte	.LFB9
 3516 0054 10000000 		.4byte	.LFE9-.LFB9
 3517 0058 00000000 		.4byte	.LFB10
 3518 005c 28000000 		.4byte	.LFE10-.LFB10
 3519 0060 00000000 		.4byte	.LFB11
 3520 0064 28000000 		.4byte	.LFE11-.LFB11
 3521 0068 00000000 		.4byte	.LFB12
 3522 006c 2C000000 		.4byte	.LFE12-.LFB12
 3523 0070 00000000 		.4byte	.LFB13
 3524 0074 28000000 		.4byte	.LFE13-.LFB13
 3525 0078 00000000 		.4byte	.LFB14
 3526 007c 0C000000 		.4byte	.LFE14-.LFB14
 3527 0080 00000000 		.4byte	.LFB15
 3528 0084 0C000000 		.4byte	.LFE15-.LFB15
 3529 0088 00000000 		.4byte	.LFB16
 3530 008c 28000000 		.4byte	.LFE16-.LFB16
 3531 0090 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 92


 3532 0094 0C000000 		.4byte	.LFE17-.LFB17
 3533 0098 00000000 		.4byte	.LFB18
 3534 009c 0C000000 		.4byte	.LFE18-.LFB18
 3535 00a0 00000000 		.4byte	.LFB19
 3536 00a4 24000000 		.4byte	.LFE19-.LFB19
 3537 00a8 00000000 		.4byte	.LFB20
 3538 00ac 0C000000 		.4byte	.LFE20-.LFB20
 3539 00b0 00000000 		.4byte	.LFB21
 3540 00b4 0C000000 		.4byte	.LFE21-.LFB21
 3541 00b8 00000000 		.4byte	.LFB22
 3542 00bc 28000000 		.4byte	.LFE22-.LFB22
 3543 00c0 00000000 		.4byte	.LFB23
 3544 00c4 0C000000 		.4byte	.LFE23-.LFB23
 3545 00c8 00000000 		.4byte	.LFB25
 3546 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3547 00d0 00000000 		.4byte	.LFB27
 3548 00d4 0C000000 		.4byte	.LFE27-.LFB27
 3549 00d8 00000000 		.4byte	.LFB28
 3550 00dc 0C000000 		.4byte	.LFE28-.LFB28
 3551 00e0 00000000 		.4byte	.LFB29
 3552 00e4 24000000 		.4byte	.LFE29-.LFB29
 3553 00e8 00000000 		.4byte	.LFB30
 3554 00ec 24000000 		.4byte	.LFE30-.LFB30
 3555 00f0 00000000 		.4byte	.LFB31
 3556 00f4 28000000 		.4byte	.LFE31-.LFB31
 3557 00f8 00000000 		.4byte	.LFB32
 3558 00fc 24000000 		.4byte	.LFE32-.LFB32
 3559 0100 00000000 		.4byte	.LFB33
 3560 0104 24000000 		.4byte	.LFE33-.LFB33
 3561 0108 00000000 		.4byte	.LFB34
 3562 010c 1C000000 		.4byte	.LFE34-.LFB34
 3563 0110 00000000 		.4byte	.LFB35
 3564 0114 14000000 		.4byte	.LFE35-.LFB35
 3565 0118 00000000 		.4byte	.LFB36
 3566 011c 0C000000 		.4byte	.LFE36-.LFB36
 3567 0120 00000000 		.4byte	.LFB37
 3568 0124 0C000000 		.4byte	.LFE37-.LFB37
 3569 0128 00000000 		.4byte	.LFB38
 3570 012c 0C000000 		.4byte	.LFE38-.LFB38
 3571 0130 00000000 		.4byte	.LFB39
 3572 0134 0C000000 		.4byte	.LFE39-.LFB39
 3573 0138 00000000 		.4byte	.LFB40
 3574 013c 0C000000 		.4byte	.LFE40-.LFB40
 3575 0140 00000000 		.4byte	0
 3576 0144 00000000 		.4byte	0
 3577              		.section	.debug_ranges,"",%progbits
 3578              	.Ldebug_ranges0:
 3579 0000 00000000 		.4byte	.LFB1
 3580 0004 3C000000 		.4byte	.LFE1
 3581 0008 00000000 		.4byte	.LFB2
 3582 000c 1C000000 		.4byte	.LFE2
 3583 0010 00000000 		.4byte	.LFB3
 3584 0014 1C000000 		.4byte	.LFE3
 3585 0018 00000000 		.4byte	.LFB4
 3586 001c 1C000000 		.4byte	.LFE4
 3587 0020 00000000 		.4byte	.LFB5
 3588 0024 28000000 		.4byte	.LFE5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 93


 3589 0028 00000000 		.4byte	.LFB6
 3590 002c 28000000 		.4byte	.LFE6
 3591 0030 00000000 		.4byte	.LFB7
 3592 0034 28000000 		.4byte	.LFE7
 3593 0038 00000000 		.4byte	.LFB8
 3594 003c 30000000 		.4byte	.LFE8
 3595 0040 00000000 		.4byte	.LFB9
 3596 0044 10000000 		.4byte	.LFE9
 3597 0048 00000000 		.4byte	.LFB10
 3598 004c 28000000 		.4byte	.LFE10
 3599 0050 00000000 		.4byte	.LFB11
 3600 0054 28000000 		.4byte	.LFE11
 3601 0058 00000000 		.4byte	.LFB12
 3602 005c 2C000000 		.4byte	.LFE12
 3603 0060 00000000 		.4byte	.LFB13
 3604 0064 28000000 		.4byte	.LFE13
 3605 0068 00000000 		.4byte	.LFB14
 3606 006c 0C000000 		.4byte	.LFE14
 3607 0070 00000000 		.4byte	.LFB15
 3608 0074 0C000000 		.4byte	.LFE15
 3609 0078 00000000 		.4byte	.LFB16
 3610 007c 28000000 		.4byte	.LFE16
 3611 0080 00000000 		.4byte	.LFB17
 3612 0084 0C000000 		.4byte	.LFE17
 3613 0088 00000000 		.4byte	.LFB18
 3614 008c 0C000000 		.4byte	.LFE18
 3615 0090 00000000 		.4byte	.LFB19
 3616 0094 24000000 		.4byte	.LFE19
 3617 0098 00000000 		.4byte	.LFB20
 3618 009c 0C000000 		.4byte	.LFE20
 3619 00a0 00000000 		.4byte	.LFB21
 3620 00a4 0C000000 		.4byte	.LFE21
 3621 00a8 00000000 		.4byte	.LFB22
 3622 00ac 28000000 		.4byte	.LFE22
 3623 00b0 00000000 		.4byte	.LFB23
 3624 00b4 0C000000 		.4byte	.LFE23
 3625 00b8 00000000 		.4byte	.LFB25
 3626 00bc 0C000000 		.4byte	.LFE25
 3627 00c0 00000000 		.4byte	.LFB27
 3628 00c4 0C000000 		.4byte	.LFE27
 3629 00c8 00000000 		.4byte	.LFB28
 3630 00cc 0C000000 		.4byte	.LFE28
 3631 00d0 00000000 		.4byte	.LFB29
 3632 00d4 24000000 		.4byte	.LFE29
 3633 00d8 00000000 		.4byte	.LFB30
 3634 00dc 24000000 		.4byte	.LFE30
 3635 00e0 00000000 		.4byte	.LFB31
 3636 00e4 28000000 		.4byte	.LFE31
 3637 00e8 00000000 		.4byte	.LFB32
 3638 00ec 24000000 		.4byte	.LFE32
 3639 00f0 00000000 		.4byte	.LFB33
 3640 00f4 24000000 		.4byte	.LFE33
 3641 00f8 00000000 		.4byte	.LFB34
 3642 00fc 1C000000 		.4byte	.LFE34
 3643 0100 00000000 		.4byte	.LFB35
 3644 0104 14000000 		.4byte	.LFE35
 3645 0108 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 94


 3646 010c 0C000000 		.4byte	.LFE36
 3647 0110 00000000 		.4byte	.LFB37
 3648 0114 0C000000 		.4byte	.LFE37
 3649 0118 00000000 		.4byte	.LFB38
 3650 011c 0C000000 		.4byte	.LFE38
 3651 0120 00000000 		.4byte	.LFB39
 3652 0124 0C000000 		.4byte	.LFE39
 3653 0128 00000000 		.4byte	.LFB40
 3654 012c 0C000000 		.4byte	.LFE40
 3655 0130 00000000 		.4byte	0
 3656 0134 00000000 		.4byte	0
 3657              		.section	.debug_line,"",%progbits
 3658              	.Ldebug_line0:
 3659 0000 B3030000 		.section	.debug_str,"MS",%progbits,1
 3659      02004D00 
 3659      00000201 
 3659      FB0E0D00 
 3659      01010101 
 3660              	.LASF40:
 3661 0000 54696D65 		.ascii	"Timer_SetPWMStopOnKill\000"
 3661      725F5365 
 3661      7450574D 
 3661      53746F70 
 3661      4F6E4B69 
 3662              	.LASF19:
 3663 0017 636F756E 		.ascii	"count\000"
 3663      7400
 3664              	.LASF72:
 3665 001d 54696D65 		.ascii	"Timer_GetInterruptSource\000"
 3665      725F4765 
 3665      74496E74 
 3665      65727275 
 3665      7074536F 
 3666              	.LASF76:
 3667 0036 43794578 		.ascii	"CyExitCriticalSection\000"
 3667      69744372 
 3667      69746963 
 3667      616C5365 
 3667      6374696F 
 3668              	.LASF18:
 3669 004c 54696D65 		.ascii	"Timer_WritePeriod\000"
 3669      725F5772 
 3669      69746550 
 3669      6572696F 
 3669      6400
 3670              	.LASF74:
 3671 005e 54696D65 		.ascii	"Timer_SetInterrupt\000"
 3671      725F5365 
 3671      74496E74 
 3671      65727275 
 3671      707400
 3672              	.LASF20:
 3673 0071 70657269 		.ascii	"period\000"
 3673      6F6400
 3674              	.LASF28:
 3675 0078 54696D65 		.ascii	"Timer_SetMode\000"
 3675      725F5365 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 95


 3675      744D6F64 
 3675      6500
 3676              	.LASF80:
 3677 0086 54696D65 		.ascii	"Timer_initVar\000"
 3677      725F696E 
 3677      69745661 
 3677      7200
 3678              	.LASF7:
 3679 0094 6C6F6E67 		.ascii	"long long unsigned int\000"
 3679      206C6F6E 
 3679      6720756E 
 3679      7369676E 
 3679      65642069 
 3680              	.LASF42:
 3681 00ab 54696D65 		.ascii	"Timer_SetPWMDeadTime\000"
 3681      725F5365 
 3681      7450574D 
 3681      44656164 
 3681      54696D65 
 3682              	.LASF38:
 3683 00c0 54696D65 		.ascii	"Timer_SetPWMSyncKill\000"
 3683      725F5365 
 3683      7450574D 
 3683      53796E63 
 3683      4B696C6C 
 3684              	.LASF31:
 3685 00d5 71644D6F 		.ascii	"qdMode\000"
 3685      646500
 3686              	.LASF6:
 3687 00dc 6C6F6E67 		.ascii	"long long int\000"
 3687      206C6F6E 
 3687      6720696E 
 3687      7400
 3688              	.LASF0:
 3689 00ea 7369676E 		.ascii	"signed char\000"
 3689      65642063 
 3689      68617200 
 3690              	.LASF29:
 3691 00f6 54696D65 		.ascii	"Timer_SetQDMode\000"
 3691      725F5365 
 3691      7451444D 
 3691      6F646500 
 3692              	.LASF67:
 3693 0106 54696D65 		.ascii	"Timer_SetCountMode\000"
 3693      725F5365 
 3693      74436F75 
 3693      6E744D6F 
 3693      646500
 3694              	.LASF57:
 3695 0119 636F6D70 		.ascii	"compare\000"
 3695      61726500 
 3696              	.LASF4:
 3697 0121 6C6F6E67 		.ascii	"long int\000"
 3697      20696E74 
 3697      00
 3698              	.LASF60:
 3699 012a 54696D65 		.ascii	"Timer_ReadCapture\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 96


 3699      725F5265 
 3699      61644361 
 3699      70747572 
 3699      6500
 3700              	.LASF68:
 3701 013c 54696D65 		.ascii	"Timer_TriggerCommand\000"
 3701      725F5472 
 3701      69676765 
 3701      72436F6D 
 3701      6D616E64 
 3702              	.LASF9:
 3703 0151 75696E74 		.ascii	"uint8\000"
 3703      3800
 3704              	.LASF12:
 3705 0157 646F7562 		.ascii	"double\000"
 3705      6C6500
 3706              	.LASF21:
 3707 015e 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 3707      725F5365 
 3707      74496E74 
 3707      65727275 
 3707      70744D6F 
 3708              	.LASF10:
 3709 0175 75696E74 		.ascii	"uint32\000"
 3709      333200
 3710              	.LASF56:
 3711 017c 54696D65 		.ascii	"Timer_WriteCompare\000"
 3711      725F5772 
 3711      69746543 
 3711      6F6D7061 
 3711      726500
 3712              	.LASF63:
 3713 018f 74726967 		.ascii	"triggerMode\000"
 3713      6765724D 
 3713      6F646500 
 3714              	.LASF45:
 3715 019b 6D61736B 		.ascii	"mask\000"
 3715      00
 3716              	.LASF43:
 3717 01a0 64656164 		.ascii	"deadTime\000"
 3717      54696D65 
 3717      00
 3718              	.LASF58:
 3719 01a9 54696D65 		.ascii	"Timer_WriteCompareBuf\000"
 3719      725F5772 
 3719      69746543 
 3719      6F6D7061 
 3719      72654275 
 3720              	.LASF8:
 3721 01bf 756E7369 		.ascii	"unsigned int\000"
 3721      676E6564 
 3721      20696E74 
 3721      00
 3722              	.LASF25:
 3723 01cc 54696D65 		.ascii	"Timer_Start\000"
 3723      725F5374 
 3723      61727400 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 97


 3724              	.LASF69:
 3725 01d8 636F6D6D 		.ascii	"command\000"
 3725      616E6400 
 3726              	.LASF5:
 3727 01e0 6C6F6E67 		.ascii	"long unsigned int\000"
 3727      20756E73 
 3727      69676E65 
 3727      6420696E 
 3727      7400
 3728              	.LASF37:
 3729 01f2 6D6F6465 		.ascii	"modeMask\000"
 3729      4D61736B 
 3729      00
 3730              	.LASF24:
 3731 01fb 54696D65 		.ascii	"Timer_Enable\000"
 3731      725F456E 
 3731      61626C65 
 3731      00
 3732              	.LASF75:
 3733 0208 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3733      74657243 
 3733      72697469 
 3733      63616C53 
 3733      65637469 
 3734              	.LASF3:
 3735 021f 73686F72 		.ascii	"short unsigned int\000"
 3735      7420756E 
 3735      7369676E 
 3735      65642069 
 3735      6E7400
 3736              	.LASF17:
 3737 0232 54696D65 		.ascii	"Timer_WriteCounter\000"
 3737      725F5772 
 3737      69746543 
 3737      6F756E74 
 3737      657200
 3738              	.LASF48:
 3739 0245 54696D65 		.ascii	"Timer_ReadCounter\000"
 3739      725F5265 
 3739      6164436F 
 3739      756E7465 
 3739      7200
 3740              	.LASF26:
 3741 0257 54696D65 		.ascii	"Timer_Stop\000"
 3741      725F5374 
 3741      6F7000
 3742              	.LASF35:
 3743 0262 6F6E6553 		.ascii	"oneShotEnable\000"
 3743      686F7445 
 3743      6E61626C 
 3743      6500
 3744              	.LASF71:
 3745 0270 54696D65 		.ascii	"Timer_GetInterruptSourceMasked\000"
 3745      725F4765 
 3745      74496E74 
 3745      65727275 
 3745      7074536F 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 98


 3746              	.LASF79:
 3747 028f 5A3A5C47 		.ascii	"Z:\\Git\\WA101\\ww101-shield\\firmware\\TestProgram"
 3747      69745C57 
 3747      41313031 
 3747      5C777731 
 3747      30312D73 
 3748 02bd 344D2E63 		.ascii	"4M.cydsn\000"
 3748      7964736E 
 3748      00
 3749              	.LASF14:
 3750 02c6 72656733 		.ascii	"reg32\000"
 3750      3200
 3751              	.LASF50:
 3752 02cc 54696D65 		.ascii	"Timer_SetCompareSwap\000"
 3752      725F5365 
 3752      74436F6D 
 3752      70617265 
 3752      53776170 
 3753              	.LASF16:
 3754 02e1 73697A65 		.ascii	"sizetype\000"
 3754      74797065 
 3754      00
 3755              	.LASF52:
 3756 02ea 54696D65 		.ascii	"Timer_WritePeriodBuf\000"
 3756      725F5772 
 3756      69746550 
 3756      6572696F 
 3756      64427566 
 3757              	.LASF15:
 3758 02ff 6C6F6E67 		.ascii	"long double\000"
 3758      20646F75 
 3758      626C6500 
 3759              	.LASF77:
 3760 030b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3760      43313120 
 3760      352E342E 
 3760      31203230 
 3760      31363036 
 3761 033e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3761      20726576 
 3761      6973696F 
 3761      6E203233 
 3761      37373135 
 3762 0371 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3762      66756E63 
 3762      74696F6E 
 3762      2D736563 
 3762      74696F6E 
 3763              	.LASF44:
 3764 0399 54696D65 		.ascii	"Timer_SetPWMInvert\000"
 3764      725F5365 
 3764      7450574D 
 3764      496E7665 
 3764      727400
 3765              	.LASF54:
 3766 03ac 54696D65 		.ascii	"Timer_ReadPeriodBuf\000"
 3766      725F5265 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 99


 3766      61645065 
 3766      72696F64 
 3766      42756600 
 3767              	.LASF65:
 3768 03c0 54696D65 		.ascii	"Timer_SetStartMode\000"
 3768      725F5365 
 3768      74537461 
 3768      72744D6F 
 3768      646500
 3769              	.LASF11:
 3770 03d3 666C6F61 		.ascii	"float\000"
 3770      7400
 3771              	.LASF33:
 3772 03d9 70726573 		.ascii	"prescaler\000"
 3772      63616C65 
 3772      7200
 3773              	.LASF66:
 3774 03e3 54696D65 		.ascii	"Timer_SetStopMode\000"
 3774      725F5365 
 3774      7453746F 
 3774      704D6F64 
 3774      6500
 3775              	.LASF55:
 3776 03f5 54696D65 		.ascii	"Timer_SetPeriodSwap\000"
 3776      725F5365 
 3776      74506572 
 3776      696F6453 
 3776      77617000 
 3777              	.LASF61:
 3778 0409 54696D65 		.ascii	"Timer_ReadCaptureBuf\000"
 3778      725F5265 
 3778      61644361 
 3778      70747572 
 3778      65427566 
 3779              	.LASF70:
 3780 041e 54696D65 		.ascii	"Timer_ReadStatus\000"
 3780      725F5265 
 3780      61645374 
 3780      61747573 
 3780      00
 3781              	.LASF1:
 3782 042f 756E7369 		.ascii	"unsigned char\000"
 3782      676E6564 
 3782      20636861 
 3782      7200
 3783              	.LASF41:
 3784 043d 73746F70 		.ascii	"stopOnKillEnable\000"
 3784      4F6E4B69 
 3784      6C6C456E 
 3784      61626C65 
 3784      00
 3785              	.LASF2:
 3786 044e 73686F72 		.ascii	"short int\000"
 3786      7420696E 
 3786      7400
 3787              	.LASF22:
 3788 0458 696E7465 		.ascii	"interruptMask\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 100


 3788      72727570 
 3788      744D6173 
 3788      6B00
 3789              	.LASF32:
 3790 0466 54696D65 		.ascii	"Timer_SetPrescaler\000"
 3790      725F5365 
 3790      74507265 
 3790      7363616C 
 3790      657200
 3791              	.LASF23:
 3792 0479 54696D65 		.ascii	"Timer_Init\000"
 3792      725F496E 
 3792      697400
 3793              	.LASF46:
 3794 0484 54696D65 		.ascii	"Timer_SetCounterMode\000"
 3794      725F5365 
 3794      74436F75 
 3794      6E746572 
 3794      4D6F6465 
 3795              	.LASF13:
 3796 0499 63686172 		.ascii	"char\000"
 3796      00
 3797              	.LASF30:
 3798 049e 6D6F6465 		.ascii	"mode\000"
 3798      00
 3799              	.LASF64:
 3800 04a3 54696D65 		.ascii	"Timer_SetReloadMode\000"
 3800      725F5365 
 3800      7452656C 
 3800      6F61644D 
 3800      6F646500 
 3801              	.LASF47:
 3802 04b7 636F756E 		.ascii	"counterMode\000"
 3802      7465724D 
 3802      6F646500 
 3803              	.LASF49:
 3804 04c3 54696D65 		.ascii	"Timer_ReadPeriod\000"
 3804      725F5265 
 3804      61645065 
 3804      72696F64 
 3804      00
 3805              	.LASF59:
 3806 04d4 636F6D70 		.ascii	"compareBuf\000"
 3806      61726542 
 3806      756600
 3807              	.LASF78:
 3808 04df 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer.c\000"
 3808      72617465 
 3808      645F536F 
 3808      75726365 
 3808      5C50536F 
 3809              	.LASF27:
 3810 04fe 656E6162 		.ascii	"enableInterrupts\000"
 3810      6C65496E 
 3810      74657272 
 3810      75707473 
 3810      00
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccxbB90z.s 			page 101


 3811              	.LASF62:
 3812 050f 54696D65 		.ascii	"Timer_SetCaptureMode\000"
 3812      725F5365 
 3812      74436170 
 3812      74757265 
 3812      4D6F6465 
 3813              	.LASF34:
 3814 0524 54696D65 		.ascii	"Timer_SetOneShot\000"
 3814      725F5365 
 3814      744F6E65 
 3814      53686F74 
 3814      00
 3815              	.LASF39:
 3816 0535 73796E63 		.ascii	"syncKillEnable\000"
 3816      4B696C6C 
 3816      456E6162 
 3816      6C6500
 3817              	.LASF73:
 3818 0544 54696D65 		.ascii	"Timer_ClearInterrupt\000"
 3818      725F436C 
 3818      65617249 
 3818      6E746572 
 3818      72757074 
 3819              	.LASF51:
 3820 0559 73776170 		.ascii	"swapEnable\000"
 3820      456E6162 
 3820      6C6500
 3821              	.LASF53:
 3822 0564 70657269 		.ascii	"periodBuf\000"
 3822      6F644275 
 3822      6600
 3823              	.LASF36:
 3824 056e 54696D65 		.ascii	"Timer_SetPWMMode\000"
 3824      725F5365 
 3824      7450574D 
 3824      4D6F6465 
 3824      00
 3825              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
