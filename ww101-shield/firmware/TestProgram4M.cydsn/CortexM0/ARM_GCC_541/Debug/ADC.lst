ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000400u, 0x00000400u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 1020     		movs	r0, #16
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 3E49     		ldr	r1, .L12
  43 000c 1020     		movs	r0, #16
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0722     		movs	r2, #7
  48 0014 3C4B     		ldr	r3, .L12+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 3C4B     		ldr	r3, .L12+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L10
  56 0020 3B49     		ldr	r1, .L12+12
  57 0022 00E0     		b	.L2
  58              	.L10:
  59 0024 3B49     		ldr	r1, .L12+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 3C4A     		ldr	r2, .L12+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 3B4A     		ldr	r2, .L12+24
  68 0030 3B4B     		ldr	r3, .L12+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 3B4A     		ldr	r2, .L12+32
  72 0036 3C4B     		ldr	r3, .L12+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 3B4A     		ldr	r2, .L12+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 3B4A     		ldr	r2, .L12+44
  80 0042 3C49     		ldr	r1, .L12+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 3C49     		ldr	r1, .L12+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  85              		.loc 1 197 0 discriminator 4
  86 004a 3C4A     		ldr	r2, .L12+56
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 6


  87 004c 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  88              		.loc 1 198 0 discriminator 4
  89 004e 3C4A     		ldr	r2, .L12+60
  90 0050 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  91              		.loc 1 199 0 discriminator 4
  92 0052 0133     		adds	r3, r3, #1
  93 0054 3B4A     		ldr	r2, .L12+64
  94 0056 1360     		str	r3, [r2]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
  95              		.loc 1 206 0 discriminator 4
  96 0058 3B49     		ldr	r1, .L12+68
  97 005a 0868     		ldr	r0, [r1]
  98              	.LVL2:
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
  99              		.loc 1 207 0 discriminator 4
 100 005c 3B4A     		ldr	r2, .L12+72
 101 005e 0240     		ands	r2, r0
 102              	.LVL3:
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 103              		.loc 1 218 0 discriminator 4
 104 0060 1343     		orrs	r3, r2
 105              	.LVL4:
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 106              		.loc 1 226 0 discriminator 4
 107 0062 0B60     		str	r3, [r1]
 108              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 7


 109              		.loc 1 232 0 discriminator 4
 110 0064 0022     		movs	r2, #0
 111 0066 4AE0     		b	.L3
 112              	.LVL6:
 113              	.L9:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 114              		.loc 1 234 0
 115 0068 3948     		ldr	r0, .L12+76
 116 006a 9100     		lsls	r1, r2, #2
 117 006c 0C58     		ldr	r4, [r1, r0]
 118 006e DC23     		movs	r3, #220
 119 0070 9B01     		lsls	r3, r3, #6
 120 0072 2340     		ands	r3, r4
 121              	.LVL7:
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 122              		.loc 1 236 0
 123 0074 8018     		adds	r0, r0, r2
 124 0076 007B     		ldrb	r0, [r0, #12]
 125 0078 0343     		orrs	r3, r0
 126              	.LVL8:
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 127              		.loc 1 253 0
 128 007a 3648     		ldr	r0, .L12+80
 129 007c 8446     		mov	ip, r0
 130 007e 6144     		add	r1, r1, ip
 131 0080 0B60     		str	r3, [r1]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 132              		.loc 1 255 0
 133 0082 E307     		lsls	r3, r4, #31
 134 0084 07D5     		bpl	.L4
 135              	.LVL9:
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 136              		.loc 1 257 0
 137 0086 2D48     		ldr	r0, .L12+56
 138 0088 0168     		ldr	r1, [r0]
 139              	.LVL10:
 140 008a 0123     		movs	r3, #1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 8


 141 008c 9340     		lsls	r3, r3, r2
 142 008e 1B04     		lsls	r3, r3, #16
 143 0090 1B0C     		lsrs	r3, r3, #16
 144 0092 0B43     		orrs	r3, r1
 145 0094 0360     		str	r3, [r0]
 146              	.LVL11:
 147              	.L4:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 148              		.loc 1 260 0
 149 0096 9300     		lsls	r3, r2, #2
 150 0098 2D49     		ldr	r1, .L12+76
 151              	.LVL12:
 152 009a 5B58     		ldr	r3, [r3, r1]
 153 009c 9B07     		lsls	r3, r3, #30
 154 009e 07D5     		bpl	.L5
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 155              		.loc 1 262 0
 156 00a0 2748     		ldr	r0, .L12+60
 157 00a2 0168     		ldr	r1, [r0]
 158              	.LVL13:
 159 00a4 0123     		movs	r3, #1
 160 00a6 9340     		lsls	r3, r3, r2
 161 00a8 1B04     		lsls	r3, r3, #16
 162 00aa 1B0C     		lsrs	r3, r3, #16
 163 00ac 0B43     		orrs	r3, r1
 164 00ae 0360     		str	r3, [r0]
 165              	.L5:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 166              		.loc 1 282 0
 167 00b0 9300     		lsls	r3, r2, #2
 168 00b2 2749     		ldr	r1, .L12+76
 169              	.LVL14:
 170 00b4 5958     		ldr	r1, [r3, r1]
 171              	.LVL15:
 172 00b6 8B05     		lsls	r3, r1, #22
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 9


 173 00b8 02D5     		bpl	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 174              		.loc 1 284 0
 175 00ba 8020     		movs	r0, #128
 176 00bc 4000     		lsls	r0, r0, #1
 177 00be 01E0     		b	.L6
 178              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 179              		.loc 1 288 0
 180 00c0 8020     		movs	r0, #128
 181 00c2 4001     		lsls	r0, r0, #5
 182              	.L6:
 183              	.LVL16:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 184              		.loc 1 291 0
 185 00c4 CB05     		lsls	r3, r1, #23
 186 00c6 06D4     		bmi	.L7
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 187              		.loc 1 296 0
 188 00c8 4108     		lsrs	r1, r0, #1
 189 00ca 4942     		rsbs	r1, r1, #0
 190 00cc 09B2     		sxth	r1, r1
 191 00ce 5300     		lsls	r3, r2, #1
 192 00d0 214C     		ldr	r4, .L12+84
 193              	.LVL17:
 194 00d2 1953     		strh	r1, [r3, r4]
 195 00d4 03E0     		b	.L8
 196              	.LVL18:
 197              	.L7:
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 198              		.loc 1 307 0
 199 00d6 5300     		lsls	r3, r2, #1
 200 00d8 0024     		movs	r4, #0
 201              	.LVL19:
 202 00da 1F49     		ldr	r1, .L12+84
 203 00dc 5C52     		strh	r4, [r3, r1]
 204              	.L8:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 10


 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 205              		.loc 1 311 0 discriminator 2
 206 00de 1F4B     		ldr	r3, .L12+88
 207 00e0 4343     		muls	r3, r0
 208 00e2 8021     		movs	r1, #128
 209 00e4 C900     		lsls	r1, r1, #3
 210 00e6 8C46     		mov	ip, r1
 211 00e8 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 212              		.loc 1 312 0 discriminator 2
 213 00ea D917     		asrs	r1, r3, #31
 214 00ec 4905     		lsls	r1, r1, #21
 215 00ee 490D     		lsrs	r1, r1, #21
 216 00f0 CB18     		adds	r3, r1, r3
 217 00f2 DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 218              		.loc 1 311 0 discriminator 2
 219 00f4 1BB2     		sxth	r3, r3
 220 00f6 9000     		lsls	r0, r2, #2
 221              	.LVL20:
 222 00f8 1949     		ldr	r1, .L12+92
 223 00fa 4350     		str	r3, [r0, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 224              		.loc 1 232 0 discriminator 2
 225 00fc 0132     		adds	r2, r2, #1
 226              	.LVL21:
 227              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 228              		.loc 1 232 0 is_stmt 0 discriminator 1
 229 00fe 022A     		cmp	r2, #2
 230 0100 B2D9     		bls	.L9
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 231              		.loc 1 314 0 is_stmt 1
 232              		@ sp needed
 233 0102 10BD     		pop	{r4, pc}
 234              	.L13:
 235              		.align	2
 236              	.L12:
 237 0104 00000000 		.word	ADC_ISR
 238 0108 20003A40 		.word	1077542944
 239 010c 80033A40 		.word	1077543808
 240 0110 402E1013 		.word	319827520
 241 0114 402E0013 		.word	318778944
 242 0118 00003A40 		.word	1077542912
 243 011c FC000080 		.word	-2147483396
 244 0120 04003A40 		.word	1077542916
 245 0124 0000FF07 		.word	134152192
 246 0128 18003A40 		.word	1077542936
 247 012c 1C003A40 		.word	1077542940
 248 0130 02000200 		.word	131074
 249 0134 10003A40 		.word	1077542928
 250 0138 14003A40 		.word	1077542932
 251 013c 28023A40 		.word	1077543464
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 11


 252 0140 38023A40 		.word	1077543480
 253 0144 18023A40 		.word	1077543448
 254 0148 30003A40 		.word	1077542960
 255 014c FFFFFFDF 		.word	-536870913
 256 0150 00000000 		.word	.LANCHOR0
 257 0154 80003A40 		.word	1077543040
 258 0158 00000000 		.word	ADC_offset
 259 015c 10270000 		.word	10000
 260 0160 00000000 		.word	ADC_countsPer10Volt
 261              		.cfi_endproc
 262              	.LFE2:
 263              		.size	ADC_Init, .-ADC_Init
 264              		.section	.text.ADC_Enable,"ax",%progbits
 265              		.align	2
 266              		.global	ADC_Enable
 267              		.code	16
 268              		.thumb_func
 269              		.type	ADC_Enable, %function
 270              	ADC_Enable:
 271              	.LFB3:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 272              		.loc 1 331 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 10B5     		push	{r4, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 280              		.loc 1 332 0
 281 0002 094B     		ldr	r3, .L17
 282 0004 1B68     		ldr	r3, [r3]
 283 0006 002B     		cmp	r3, #0
 284 0008 0CDB     		blt	.L14
 285              	.L16:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 286              		.loc 1 336 0 discriminator 1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 12


 287 000a 084B     		ldr	r3, .L17+4
 288 000c 1B68     		ldr	r3, [r3]
 289 000e 002B     		cmp	r3, #0
 290 0010 FBDB     		blt	.L16
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 291              		.loc 1 342 0
 292 0012 054A     		ldr	r2, .L17
 293 0014 1368     		ldr	r3, [r2]
 294 0016 8021     		movs	r1, #128
 295 0018 0906     		lsls	r1, r1, #24
 296 001a 0B43     		orrs	r3, r1
 297 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 298              		.loc 1 345 0
 299 001e 0A20     		movs	r0, #10
 300 0020 FFF7FEFF 		bl	CyDelayUs
 301              	.LVL22:
 302              	.L14:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 303              		.loc 1 347 0
 304              		@ sp needed
 305 0024 10BD     		pop	{r4, pc}
 306              	.L18:
 307 0026 C046     		.align	2
 308              	.L17:
 309 0028 00003A40 		.word	1077542912
 310 002c 08023A40 		.word	1077543432
 311              		.cfi_endproc
 312              	.LFE3:
 313              		.size	ADC_Enable, .-ADC_Enable
 314              		.section	.text.ADC_Start,"ax",%progbits
 315              		.align	2
 316              		.global	ADC_Start
 317              		.code	16
 318              		.thumb_func
 319              		.type	ADC_Start, %function
 320              	ADC_Start:
 321              	.LFB1:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 322              		.loc 1 64 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 10B5     		push	{r4, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 4, -8
 329              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 330              		.loc 1 66 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 13


 331 0002 064B     		ldr	r3, .L21
 332 0004 1B78     		ldrb	r3, [r3]
 333 0006 002B     		cmp	r3, #0
 334 0008 04D1     		bne	.L20
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 335              		.loc 1 68 0
 336 000a FFF7FEFF 		bl	ADC_Init
 337              	.LVL23:
  69:Generated_Source\PSoC4/ADC.c ****     }
 338              		.loc 1 69 0
 339 000e 0122     		movs	r2, #1
 340 0010 024B     		ldr	r3, .L21
 341 0012 1A70     		strb	r2, [r3]
 342              	.L20:
  71:Generated_Source\PSoC4/ADC.c **** }
 343              		.loc 1 71 0
 344 0014 FFF7FEFF 		bl	ADC_Enable
 345              	.LVL24:
  72:Generated_Source\PSoC4/ADC.c **** 
 346              		.loc 1 72 0
 347              		@ sp needed
 348 0018 10BD     		pop	{r4, pc}
 349              	.L22:
 350 001a C046     		.align	2
 351              	.L21:
 352 001c 00000000 		.word	.LANCHOR1
 353              		.cfi_endproc
 354              	.LFE1:
 355              		.size	ADC_Start, .-ADC_Start
 356              		.section	.text.ADC_Stop,"ax",%progbits
 357              		.align	2
 358              		.global	ADC_Stop
 359              		.code	16
 360              		.thumb_func
 361              		.type	ADC_Stop, %function
 362              	ADC_Stop:
 363              	.LFB4:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 364              		.loc 1 366 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 14


 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 369              		.loc 1 367 0
 370 0000 024A     		ldr	r2, .L24
 371 0002 1368     		ldr	r3, [r2]
 372 0004 5B00     		lsls	r3, r3, #1
 373 0006 5B08     		lsrs	r3, r3, #1
 374 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 375              		.loc 1 368 0
 376              		@ sp needed
 377 000a 7047     		bx	lr
 378              	.L25:
 379              		.align	2
 380              	.L24:
 381 000c 00003A40 		.word	1077542912
 382              		.cfi_endproc
 383              	.LFE4:
 384              		.size	ADC_Stop, .-ADC_Stop
 385              		.section	.text.ADC_StartConvert,"ax",%progbits
 386              		.align	2
 387              		.global	ADC_StartConvert
 388              		.code	16
 389              		.thumb_func
 390              		.type	ADC_StartConvert, %function
 391              	ADC_StartConvert:
 392              	.LFB5:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 393              		.loc 1 392 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 15


 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 398              		.loc 1 394 0
 399 0000 034A     		ldr	r2, .L27
 400 0002 1368     		ldr	r3, [r2]
 401 0004 8021     		movs	r1, #128
 402 0006 4902     		lsls	r1, r1, #9
 403 0008 0B43     		orrs	r3, r1
 404 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 405              		.loc 1 399 0
 406              		@ sp needed
 407 000c 7047     		bx	lr
 408              	.L28:
 409 000e C046     		.align	2
 410              	.L27:
 411 0010 04003A40 		.word	1077542916
 412              		.cfi_endproc
 413              	.LFE5:
 414              		.size	ADC_StartConvert, .-ADC_StartConvert
 415              		.section	.text.ADC_StopConvert,"ax",%progbits
 416              		.align	2
 417              		.global	ADC_StopConvert
 418              		.code	16
 419              		.thumb_func
 420              		.type	ADC_StopConvert, %function
 421              	ADC_StopConvert:
 422              	.LFB6:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 423              		.loc 1 417 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 16


 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 428              		.loc 1 419 0
 429 0000 024A     		ldr	r2, .L30
 430 0002 1168     		ldr	r1, [r2]
 431 0004 024B     		ldr	r3, .L30+4
 432 0006 0B40     		ands	r3, r1
 433 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 434              		.loc 1 421 0
 435              		@ sp needed
 436 000a 7047     		bx	lr
 437              	.L31:
 438              		.align	2
 439              	.L30:
 440 000c 04003A40 		.word	1077542916
 441 0010 FFFFFEFF 		.word	-65537
 442              		.cfi_endproc
 443              	.LFE6:
 444              		.size	ADC_StopConvert, .-ADC_StopConvert
 445              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 446              		.align	2
 447              		.global	ADC_IsEndConversion
 448              		.code	16
 449              		.thumb_func
 450              		.type	ADC_IsEndConversion, %function
 451              	ADC_IsEndConversion:
 452              	.LFB7:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 17


 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 453              		.loc 1 451 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL25:
 459 0000 0200     		movs	r2, r0
 460              	.LVL26:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 461              		.loc 1 454 0
 462 0002 8307     		lsls	r3, r0, #30
 463 0004 0CD0     		beq	.L36
 464              	.LVL27:
 465              	.L35:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 466              		.loc 1 458 0 discriminator 2
 467 0006 074B     		ldr	r3, .L37
 468 0008 1B68     		ldr	r3, [r3]
 469 000a 0120     		movs	r0, #1
 470 000c 1840     		ands	r0, r3
 471              	.LVL28:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 472              		.loc 1 459 0 discriminator 2
 473 000e 01D1     		bne	.L34
 474              		.loc 1 459 0 is_stmt 0 discriminator 1
 475 0010 9307     		lsls	r3, r2, #30
 476 0012 F8D4     		bmi	.L35
 477              	.L34:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 478              		.loc 1 461 0 is_stmt 1
 479 0014 0028     		cmp	r0, #0
 480 0016 04D0     		beq	.L33
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 481              		.loc 1 464 0
 482 0018 0122     		movs	r2, #1
 483              	.LVL29:
 484 001a 024B     		ldr	r3, .L37
 485 001c 1A60     		str	r2, [r3]
 486 001e 00E0     		b	.L33
 487              	.LVL30:
 488              	.L36:
 452:Generated_Source\PSoC4/ADC.c **** 
 489              		.loc 1 452 0
 490 0020 0020     		movs	r0, #0
 491              	.LVL31:
 492              	.L33:
 465:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 18


 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 493              		.loc 1 486 0
 494              		@ sp needed
 495 0022 7047     		bx	lr
 496              	.L38:
 497              		.align	2
 498              	.L37:
 499 0024 10023A40 		.word	1077543440
 500              		.cfi_endproc
 501              	.LFE7:
 502              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 503              		.section	.text.ADC_GetResult16,"ax",%progbits
 504              		.align	2
 505              		.global	ADC_GetResult16
 506              		.code	16
 507              		.thumb_func
 508              		.type	ADC_GetResult16, %function
 509              	ADC_GetResult16:
 510              	.LFB8:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 19


 505:Generated_Source\PSoC4/ADC.c **** {
 511              		.loc 1 505 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              	.LVL32:
 516 0000 10B5     		push	{r4, lr}
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 4, -8
 519              		.cfi_offset 14, -4
 520 0002 0400     		movs	r4, r0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 521              		.loc 1 509 0
 522 0004 0228     		cmp	r0, #2
 523 0006 02D9     		bls	.L40
 524              		.loc 1 509 0 is_stmt 0 discriminator 1
 525 0008 0020     		movs	r0, #0
 526              	.LVL33:
 527 000a FFF7FEFF 		bl	CyHalt
 528              	.LVL34:
 529              	.L40:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 530              		.loc 1 511 0 is_stmt 1
 531 000e 022C     		cmp	r4, #2
 532 0010 07D8     		bhi	.L42
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 533              		.loc 1 513 0
 534 0012 A400     		lsls	r4, r4, #2
 535              	.LVL35:
 536 0014 044B     		ldr	r3, .L43
 537 0016 9C46     		mov	ip, r3
 538 0018 6444     		add	r4, r4, ip
 539 001a 2068     		ldr	r0, [r4]
 540 001c 0004     		lsls	r0, r0, #16
 541 001e 000C     		lsrs	r0, r0, #16
 542              	.LVL36:
 543 0020 00E0     		b	.L41
 544              	.LVL37:
 545              	.L42:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 546              		.loc 1 521 0
 547 0022 0020     		movs	r0, #0
 548              	.LVL38:
 549              	.L41:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 20


 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 550              		.loc 1 525 0
 551 0024 00B2     		sxth	r0, r0
 552              	.LVL39:
 526:Generated_Source\PSoC4/ADC.c **** }
 553              		.loc 1 526 0
 554              		@ sp needed
 555 0026 10BD     		pop	{r4, pc}
 556              	.L44:
 557              		.align	2
 558              	.L43:
 559 0028 80013A40 		.word	1077543296
 560              		.cfi_endproc
 561              	.LFE8:
 562              		.size	ADC_GetResult16, .-ADC_GetResult16
 563              		.section	.text.ADC_SetChanMask,"ax",%progbits
 564              		.align	2
 565              		.global	ADC_SetChanMask
 566              		.code	16
 567              		.thumb_func
 568              		.type	ADC_SetChanMask, %function
 569              	ADC_SetChanMask:
 570              	.LFB9:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 571              		.loc 1 550 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              	.LVL40:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 577              		.loc 1 551 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 21


 578 0000 0723     		movs	r3, #7
 579 0002 1840     		ands	r0, r3
 580              	.LVL41:
 581 0004 014B     		ldr	r3, .L46
 582 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 583              		.loc 1 552 0
 584              		@ sp needed
 585 0008 7047     		bx	lr
 586              	.L47:
 587 000a C046     		.align	2
 588              	.L46:
 589 000c 20003A40 		.word	1077542944
 590              		.cfi_endproc
 591              	.LFE9:
 592              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 593              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 594              		.align	2
 595              		.global	ADC_SetLowLimit
 596              		.code	16
 597              		.thumb_func
 598              		.type	ADC_SetLowLimit, %function
 599              	ADC_SetLowLimit:
 600              	.LFB10:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 22


 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 601              		.loc 1 594 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606              	.LVL42:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 607              		.loc 1 595 0
 608 0000 054A     		ldr	r2, .L49
 609 0002 1368     		ldr	r3, [r2]
 610 0004 1B0C     		lsrs	r3, r3, #16
 611 0006 1B04     		lsls	r3, r3, #16
 612 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 613              		.loc 1 596 0
 614 000a 1368     		ldr	r3, [r2]
 615 000c 0004     		lsls	r0, r0, #16
 616              	.LVL43:
 617 000e 000C     		lsrs	r0, r0, #16
 618 0010 1843     		orrs	r0, r3
 619 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 620              		.loc 1 597 0
 621              		@ sp needed
 622 0014 7047     		bx	lr
 623              	.L50:
 624 0016 C046     		.align	2
 625              	.L49:
 626 0018 18003A40 		.word	1077542936
 627              		.cfi_endproc
 628              	.LFE10:
 629              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 630              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 631              		.align	2
 632              		.global	ADC_SetHighLimit
 633              		.code	16
 634              		.thumb_func
 635              		.type	ADC_SetHighLimit, %function
 636              	ADC_SetHighLimit:
 637              	.LFB11:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 23


 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 638              		.loc 1 615 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643              	.LVL44:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 644              		.loc 1 616 0
 645 0000 044A     		ldr	r2, .L52
 646 0002 1368     		ldr	r3, [r2]
 647 0004 1B04     		lsls	r3, r3, #16
 648 0006 1B0C     		lsrs	r3, r3, #16
 649 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 650              		.loc 1 617 0
 651 000a 1368     		ldr	r3, [r2]
 652 000c 0004     		lsls	r0, r0, #16
 653              	.LVL45:
 654 000e 1843     		orrs	r0, r3
 655 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 656              		.loc 1 618 0
 657              		@ sp needed
 658 0012 7047     		bx	lr
 659              	.L53:
 660              		.align	2
 661              	.L52:
 662 0014 18003A40 		.word	1077542936
 663              		.cfi_endproc
 664              	.LFE11:
 665              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 666              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 667              		.align	2
 668              		.global	ADC_SetLimitMask
 669              		.code	16
 670              		.thumb_func
 671              		.type	ADC_SetLimitMask, %function
 672              	ADC_SetLimitMask:
 673              	.LFB12:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 24


 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 674              		.loc 1 639 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL46:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 680              		.loc 1 640 0
 681 0000 0723     		movs	r3, #7
 682 0002 1840     		ands	r0, r3
 683              	.LVL47:
 684 0004 014B     		ldr	r3, .L55
 685 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 686              		.loc 1 641 0
 687              		@ sp needed
 688 0008 7047     		bx	lr
 689              	.L56:
 690 000a C046     		.align	2
 691              	.L55:
 692 000c 38023A40 		.word	1077543480
 693              		.cfi_endproc
 694              	.LFE12:
 695              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 696              		.section	.text.ADC_SetSatMask,"ax",%progbits
 697              		.align	2
 698              		.global	ADC_SetSatMask
 699              		.code	16
 700              		.thumb_func
 701              		.type	ADC_SetSatMask, %function
 702              	ADC_SetSatMask:
 703              	.LFB13:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 25


 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 704              		.loc 1 662 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL48:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 710              		.loc 1 663 0
 711 0000 0723     		movs	r3, #7
 712 0002 1840     		ands	r0, r3
 713              	.LVL49:
 714 0004 014B     		ldr	r3, .L58
 715 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 716              		.loc 1 664 0
 717              		@ sp needed
 718 0008 7047     		bx	lr
 719              	.L59:
 720 000a C046     		.align	2
 721              	.L58:
 722 000c 28023A40 		.word	1077543464
 723              		.cfi_endproc
 724              	.LFE13:
 725              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 726              		.section	.text.ADC_SetOffset,"ax",%progbits
 727              		.align	2
 728              		.global	ADC_SetOffset
 729              		.code	16
 730              		.thumb_func
 731              		.type	ADC_SetOffset, %function
 732              	ADC_SetOffset:
 733              	.LFB14:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 26


 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 734              		.loc 1 690 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              	.LVL50:
 739 0000 70B5     		push	{r4, r5, r6, lr}
 740              		.cfi_def_cfa_offset 16
 741              		.cfi_offset 4, -16
 742              		.cfi_offset 5, -12
 743              		.cfi_offset 6, -8
 744              		.cfi_offset 14, -4
 745 0002 0400     		movs	r4, r0
 746 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 747              		.loc 1 692 0
 748 0006 0228     		cmp	r0, #2
 749 0008 02D9     		bls	.L61
 750              		.loc 1 692 0 is_stmt 0 discriminator 1
 751 000a 0020     		movs	r0, #0
 752              	.LVL51:
 753 000c FFF7FEFF 		bl	CyHalt
 754              	.LVL52:
 755              	.L61:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 756              		.loc 1 694 0 is_stmt 1
 757 0010 6400     		lsls	r4, r4, #1
 758              	.LVL53:
 759 0012 014B     		ldr	r3, .L62
 760 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 761              		.loc 1 695 0
 762              		@ sp needed
 763 0016 70BD     		pop	{r4, r5, r6, pc}
 764              	.L63:
 765              		.align	2
 766              	.L62:
 767 0018 00000000 		.word	ADC_offset
 768              		.cfi_endproc
 769              	.LFE14:
 770              		.size	ADC_SetOffset, .-ADC_SetOffset
 771              		.section	.text.ADC_SetGain,"ax",%progbits
 772              		.align	2
 773              		.global	ADC_SetGain
 774              		.code	16
 775              		.thumb_func
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 27


 776              		.type	ADC_SetGain, %function
 777              	ADC_SetGain:
 778              	.LFB15:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 779              		.loc 1 724 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              	.LVL54:
 784 0000 70B5     		push	{r4, r5, r6, lr}
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 4, -16
 787              		.cfi_offset 5, -12
 788              		.cfi_offset 6, -8
 789              		.cfi_offset 14, -4
 790 0002 0400     		movs	r4, r0
 791 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 792              		.loc 1 726 0
 793 0006 0228     		cmp	r0, #2
 794 0008 02D9     		bls	.L65
 795              		.loc 1 726 0 is_stmt 0 discriminator 1
 796 000a 0020     		movs	r0, #0
 797              	.LVL55:
 798 000c FFF7FEFF 		bl	CyHalt
 799              	.LVL56:
 800              	.L65:
 727:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 28


 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 801              		.loc 1 728 0 is_stmt 1
 802 0010 A400     		lsls	r4, r4, #2
 803              	.LVL57:
 804 0012 014B     		ldr	r3, .L66
 805 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 806              		.loc 1 729 0
 807              		@ sp needed
 808              	.LVL58:
 809 0016 70BD     		pop	{r4, r5, r6, pc}
 810              	.L67:
 811              		.align	2
 812              	.L66:
 813 0018 00000000 		.word	ADC_countsPer10Volt
 814              		.cfi_endproc
 815              	.LFE15:
 816              		.size	ADC_SetGain, .-ADC_SetGain
 817              		.global	__aeabi_idiv
 818              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 819              		.align	2
 820              		.global	ADC_CountsTo_mVolts
 821              		.code	16
 822              		.thumb_func
 823              		.type	ADC_CountsTo_mVolts, %function
 824              	ADC_CountsTo_mVolts:
 825              	.LFB16:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 826              		.loc 1 757 0
 827              		.cfi_startproc
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 29


 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              	.LVL59:
 831 0000 70B5     		push	{r4, r5, r6, lr}
 832              		.cfi_def_cfa_offset 16
 833              		.cfi_offset 4, -16
 834              		.cfi_offset 5, -12
 835              		.cfi_offset 6, -8
 836              		.cfi_offset 14, -4
 837 0002 0400     		movs	r4, r0
 838 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 839              		.loc 1 761 0
 840 0006 0228     		cmp	r0, #2
 841 0008 02D9     		bls	.L69
 842              		.loc 1 761 0 is_stmt 0 discriminator 1
 843 000a 0020     		movs	r0, #0
 844              	.LVL60:
 845 000c FFF7FEFF 		bl	CyHalt
 846              	.LVL61:
 847              	.L69:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 848              		.loc 1 772 0 is_stmt 1
 849 0010 6300     		lsls	r3, r4, #1
 850 0012 0F4A     		ldr	r2, .L72
 851 0014 995A     		ldrh	r1, [r3, r2]
 852 0016 09B2     		sxth	r1, r1
 853 0018 691A     		subs	r1, r5, r1
 854 001a 09B2     		sxth	r1, r1
 855              	.LVL62:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 856              		.loc 1 774 0
 857 001c 0D48     		ldr	r0, .L72+4
 858 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 859              		.loc 1 775 0
 860 0020 0029     		cmp	r1, #0
 861 0022 06DD     		ble	.L70
 862              		.loc 1 775 0 is_stmt 0 discriminator 1
 863 0024 A300     		lsls	r3, r4, #2
 864 0026 0C4A     		ldr	r2, .L72+8
 865 0028 9A58     		ldr	r2, [r3, r2]
 866 002a D30F     		lsrs	r3, r2, #31
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 30


 867 002c 9A18     		adds	r2, r3, r2
 868 002e 5310     		asrs	r3, r2, #1
 869 0030 06E0     		b	.L71
 870              	.L70:
 871              		.loc 1 775 0 discriminator 2
 872 0032 A300     		lsls	r3, r4, #2
 873 0034 084A     		ldr	r2, .L72+8
 874 0036 9A58     		ldr	r2, [r3, r2]
 875 0038 D30F     		lsrs	r3, r2, #31
 876 003a 9A18     		adds	r2, r3, r2
 877 003c 5210     		asrs	r2, r2, #1
 878 003e 5342     		rsbs	r3, r2, #0
 879              	.L71:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 880              		.loc 1 774 0 is_stmt 1
 881 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 882              		.loc 1 776 0
 883 0042 A400     		lsls	r4, r4, #2
 884              	.LVL63:
 885 0044 044B     		ldr	r3, .L72+8
 886 0046 E158     		ldr	r1, [r4, r3]
 887              	.LVL64:
 888 0048 FFF7FEFF 		bl	__aeabi_idiv
 889              	.LVL65:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 890              		.loc 1 774 0
 891 004c 00B2     		sxth	r0, r0
 892              	.LVL66:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 893              		.loc 1 779 0
 894              		@ sp needed
 895 004e 70BD     		pop	{r4, r5, r6, pc}
 896              	.L73:
 897              		.align	2
 898              	.L72:
 899 0050 00000000 		.word	ADC_offset
 900 0054 10270000 		.word	10000
 901 0058 00000000 		.word	ADC_countsPer10Volt
 902              		.cfi_endproc
 903              	.LFE16:
 904              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 905              		.global	__aeabi_lmul
 906              		.global	__aeabi_ldivmod
 907              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 908              		.align	2
 909              		.global	ADC_CountsTo_uVolts
 910              		.code	16
 911              		.thumb_func
 912              		.type	ADC_CountsTo_uVolts, %function
 913              	ADC_CountsTo_uVolts:
 914              	.LFB17:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 31


 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 915              		.loc 1 811 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              	.LVL67:
 920 0000 70B5     		push	{r4, r5, r6, lr}
 921              		.cfi_def_cfa_offset 16
 922              		.cfi_offset 4, -16
 923              		.cfi_offset 5, -12
 924              		.cfi_offset 6, -8
 925              		.cfi_offset 14, -4
 926 0002 0500     		movs	r5, r0
 927 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 928              		.loc 1 815 0
 929 0006 0228     		cmp	r0, #2
 930 0008 02D9     		bls	.L75
 931              		.loc 1 815 0 is_stmt 0 discriminator 1
 932 000a 0020     		movs	r0, #0
 933              	.LVL68:
 934 000c FFF7FEFF 		bl	CyHalt
 935              	.LVL69:
 936              	.L75:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 32


 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 937              		.loc 1 826 0 is_stmt 1
 938 0010 6A00     		lsls	r2, r5, #1
 939 0012 084B     		ldr	r3, .L76
 940 0014 D05A     		ldrh	r0, [r2, r3]
 941 0016 00B2     		sxth	r0, r0
 942 0018 201A     		subs	r0, r4, r0
 943 001a 00B2     		sxth	r0, r0
 944              	.LVL70:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 945              		.loc 1 828 0
 946 001c C117     		asrs	r1, r0, #31
 947 001e 064A     		ldr	r2, .L76+4
 948 0020 0023     		movs	r3, #0
 949 0022 FFF7FEFF 		bl	__aeabi_lmul
 950              	.LVL71:
 951 0026 AD00     		lsls	r5, r5, #2
 952              	.LVL72:
 953 0028 044B     		ldr	r3, .L76+8
 954 002a EA58     		ldr	r2, [r5, r3]
 955 002c D317     		asrs	r3, r2, #31
 956 002e FFF7FEFF 		bl	__aeabi_ldivmod
 957              	.LVL73:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 958              		.loc 1 831 0
 959              		@ sp needed
 960 0032 70BD     		pop	{r4, r5, r6, pc}
 961              	.L77:
 962              		.align	2
 963              	.L76:
 964 0034 00000000 		.word	ADC_offset
 965 0038 80969800 		.word	10000000
 966 003c 00000000 		.word	ADC_countsPer10Volt
 967              		.cfi_endproc
 968              	.LFE17:
 969              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 970              		.global	__aeabi_i2f
 971              		.global	__aeabi_fmul
 972              		.global	__aeabi_fdiv
 973              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 974              		.align	2
 975              		.global	ADC_CountsTo_Volts
 976              		.code	16
 977              		.thumb_func
 978              		.type	ADC_CountsTo_Volts, %function
 979              	ADC_CountsTo_Volts:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 33


 980              	.LFB18:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 981              		.loc 1 856 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              	.LVL74:
 986 0000 70B5     		push	{r4, r5, r6, lr}
 987              		.cfi_def_cfa_offset 16
 988              		.cfi_offset 4, -16
 989              		.cfi_offset 5, -12
 990              		.cfi_offset 6, -8
 991              		.cfi_offset 14, -4
 992 0002 0400     		movs	r4, r0
 993 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 994              		.loc 1 860 0
 995 0006 0228     		cmp	r0, #2
 996 0008 02D9     		bls	.L79
 997              		.loc 1 860 0 is_stmt 0 discriminator 1
 998 000a 0020     		movs	r0, #0
 999              	.LVL75:
 1000 000c FFF7FEFF 		bl	CyHalt
 1001              	.LVL76:
 1002              	.L79:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 34


 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1003              		.loc 1 871 0 is_stmt 1
 1004 0010 6200     		lsls	r2, r4, #1
 1005 0012 0A4B     		ldr	r3, .L80
 1006 0014 D05A     		ldrh	r0, [r2, r3]
 1007 0016 00B2     		sxth	r0, r0
 1008 0018 281A     		subs	r0, r5, r0
 1009 001a 00B2     		sxth	r0, r0
 1010              	.LVL77:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1011              		.loc 1 873 0
 1012 001c FFF7FEFF 		bl	__aeabi_i2f
 1013              	.LVL78:
 1014 0020 0749     		ldr	r1, .L80+4
 1015 0022 FFF7FEFF 		bl	__aeabi_fmul
 1016              	.LVL79:
 1017 0026 051C     		adds	r5, r0, #0
 1018 0028 A400     		lsls	r4, r4, #2
 1019              	.LVL80:
 1020 002a 064B     		ldr	r3, .L80+8
 1021 002c E058     		ldr	r0, [r4, r3]
 1022 002e FFF7FEFF 		bl	__aeabi_i2f
 1023              	.LVL81:
 1024 0032 011C     		adds	r1, r0, #0
 1025 0034 281C     		adds	r0, r5, #0
 1026 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1027              	.LVL82:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 1028              		.loc 1 876 0
 1029              		@ sp needed
 1030 003a 70BD     		pop	{r4, r5, r6, pc}
 1031              	.L81:
 1032              		.align	2
 1033              	.L80:
 1034 003c 00000000 		.word	ADC_offset
 1035 0040 00002041 		.word	1092616192
 1036 0044 00000000 		.word	ADC_countsPer10Volt
 1037              		.cfi_endproc
 1038              	.LFE18:
 1039              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1040              		.comm	ADC_countsPer10Volt,12,4
 1041              		.comm	ADC_offset,6,4
 1042              		.global	ADC_initVar
 1043              		.section	.rodata
 1044              		.align	2
 1045              		.set	.LANCHOR0,. + 0
 1046              		.type	ADC_channelsConfig, %object
 1047              		.size	ADC_channelsConfig, 12
 1048              	ADC_channelsConfig:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 35


 1049 0000 00040000 		.word	1024
 1050 0004 00040000 		.word	1024
 1051 0008 00040000 		.word	1024
 1052              		.type	ADC_InputsPlacement.4914, %object
 1053              		.size	ADC_InputsPlacement.4914, 3
 1054              	ADC_InputsPlacement.4914:
 1055 000c 00       		.byte	0
 1056 000d 01       		.byte	1
 1057 000e 02       		.byte	2
 1058              		.bss
 1059              		.set	.LANCHOR1,. + 0
 1060              		.type	ADC_initVar, %object
 1061              		.size	ADC_initVar, 1
 1062              	ADC_initVar:
 1063 0000 00       		.space	1
 1064              		.text
 1065              	.Letext0:
 1066              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1067              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1068              		.section	.debug_info,"",%progbits
 1069              	.Ldebug_info0:
 1070 0000 A1050000 		.4byte	0x5a1
 1071 0004 0400     		.2byte	0x4
 1072 0006 00000000 		.4byte	.Ldebug_abbrev0
 1073 000a 04       		.byte	0x4
 1074 000b 01       		.uleb128 0x1
 1075 000c 32000000 		.4byte	.LASF64
 1076 0010 0C       		.byte	0xc
 1077 0011 D3020000 		.4byte	.LASF65
 1078 0015 2A020000 		.4byte	.LASF66
 1079 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1080 001d 00000000 		.4byte	0
 1081 0021 00000000 		.4byte	.Ldebug_line0
 1082 0025 02       		.uleb128 0x2
 1083 0026 01       		.byte	0x1
 1084 0027 06       		.byte	0x6
 1085 0028 0A010000 		.4byte	.LASF0
 1086 002c 02       		.uleb128 0x2
 1087 002d 01       		.byte	0x1
 1088 002e 08       		.byte	0x8
 1089 002f 37030000 		.4byte	.LASF1
 1090 0033 02       		.uleb128 0x2
 1091 0034 02       		.byte	0x2
 1092 0035 05       		.byte	0x5
 1093 0036 50030000 		.4byte	.LASF2
 1094 003a 02       		.uleb128 0x2
 1095 003b 02       		.byte	0x2
 1096 003c 07       		.byte	0x7
 1097 003d EB010000 		.4byte	.LASF3
 1098 0041 02       		.uleb128 0x2
 1099 0042 04       		.byte	0x4
 1100 0043 05       		.byte	0x5
 1101 0044 2D010000 		.4byte	.LASF4
 1102 0048 02       		.uleb128 0x2
 1103 0049 04       		.byte	0x4
 1104 004a 07       		.byte	0x7
 1105 004b BA010000 		.4byte	.LASF5
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 36


 1106 004f 02       		.uleb128 0x2
 1107 0050 08       		.byte	0x8
 1108 0051 05       		.byte	0x5
 1109 0052 FC000000 		.4byte	.LASF6
 1110 0056 02       		.uleb128 0x2
 1111 0057 08       		.byte	0x8
 1112 0058 07       		.byte	0x7
 1113 0059 C0000000 		.4byte	.LASF7
 1114 005d 03       		.uleb128 0x3
 1115 005e 04       		.byte	0x4
 1116 005f 05       		.byte	0x5
 1117 0060 696E7400 		.ascii	"int\000"
 1118 0064 02       		.uleb128 0x2
 1119 0065 04       		.byte	0x4
 1120 0066 07       		.byte	0x7
 1121 0067 A6010000 		.4byte	.LASF8
 1122 006b 04       		.uleb128 0x4
 1123 006c 5E010000 		.4byte	.LASF9
 1124 0070 02       		.byte	0x2
 1125 0071 D201     		.2byte	0x1d2
 1126 0073 2C000000 		.4byte	0x2c
 1127 0077 04       		.uleb128 0x4
 1128 0078 00000000 		.4byte	.LASF10
 1129 007c 02       		.byte	0x2
 1130 007d D301     		.2byte	0x1d3
 1131 007f 3A000000 		.4byte	0x3a
 1132 0083 04       		.uleb128 0x4
 1133 0084 75010000 		.4byte	.LASF11
 1134 0088 02       		.byte	0x2
 1135 0089 D401     		.2byte	0x1d4
 1136 008b 48000000 		.4byte	0x48
 1137 008f 04       		.uleb128 0x4
 1138 0090 A2030000 		.4byte	.LASF12
 1139 0094 02       		.byte	0x2
 1140 0095 D601     		.2byte	0x1d6
 1141 0097 33000000 		.4byte	0x33
 1142 009b 04       		.uleb128 0x4
 1143 009c 1D010000 		.4byte	.LASF13
 1144 00a0 02       		.byte	0x2
 1145 00a1 D701     		.2byte	0x1d7
 1146 00a3 41000000 		.4byte	0x41
 1147 00a7 04       		.uleb128 0x4
 1148 00a8 61020000 		.4byte	.LASF14
 1149 00ac 02       		.byte	0x2
 1150 00ad D801     		.2byte	0x1d8
 1151 00af B3000000 		.4byte	0xb3
 1152 00b3 02       		.uleb128 0x2
 1153 00b4 04       		.byte	0x4
 1154 00b5 04       		.byte	0x4
 1155 00b6 FC020000 		.4byte	.LASF15
 1156 00ba 02       		.uleb128 0x2
 1157 00bb 08       		.byte	0x8
 1158 00bc 04       		.byte	0x4
 1159 00bd 6E010000 		.4byte	.LASF16
 1160 00c1 04       		.uleb128 0x4
 1161 00c2 AC020000 		.4byte	.LASF17
 1162 00c6 02       		.byte	0x2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 37


 1163 00c7 DD01     		.2byte	0x1dd
 1164 00c9 4F000000 		.4byte	0x4f
 1165 00cd 02       		.uleb128 0x2
 1166 00ce 01       		.byte	0x1
 1167 00cf 08       		.byte	0x8
 1168 00d0 6E030000 		.4byte	.LASF18
 1169 00d4 04       		.uleb128 0x4
 1170 00d5 24020000 		.4byte	.LASF19
 1171 00d9 02       		.byte	0x2
 1172 00da 7E02     		.2byte	0x27e
 1173 00dc E0000000 		.4byte	0xe0
 1174 00e0 05       		.uleb128 0x5
 1175 00e1 83000000 		.4byte	0x83
 1176 00e5 02       		.uleb128 0x2
 1177 00e6 08       		.byte	0x8
 1178 00e7 04       		.byte	0x4
 1179 00e8 7B020000 		.4byte	.LASF20
 1180 00ec 02       		.uleb128 0x2
 1181 00ed 04       		.byte	0x4
 1182 00ee 07       		.byte	0x7
 1183 00ef 69020000 		.4byte	.LASF21
 1184 00f3 06       		.uleb128 0x6
 1185 00f4 29000000 		.4byte	.LASF26
 1186 00f8 01       		.byte	0x1
 1187 00f9 5E       		.byte	0x5e
 1188 00fa 00000000 		.4byte	.LFB2
 1189 00fe 64010000 		.4byte	.LFE2-.LFB2
 1190 0102 01       		.uleb128 0x1
 1191 0103 9C       		.byte	0x9c
 1192 0104 6E010000 		.4byte	0x16e
 1193 0108 07       		.uleb128 0x7
 1194 0109 63030000 		.4byte	.LASF22
 1195 010d 01       		.byte	0x1
 1196 010e 60       		.byte	0x60
 1197 010f 83000000 		.4byte	0x83
 1198 0113 00000000 		.4byte	.LLST0
 1199 0117 07       		.uleb128 0x7
 1200 0118 E1010000 		.4byte	.LASF23
 1201 011c 01       		.byte	0x1
 1202 011d 61       		.byte	0x61
 1203 011e 83000000 		.4byte	0x83
 1204 0122 1F000000 		.4byte	.LLST1
 1205 0126 07       		.uleb128 0x7
 1206 0127 0F000000 		.4byte	.LASF24
 1207 012b 01       		.byte	0x1
 1208 012c 62       		.byte	0x62
 1209 012d 9B000000 		.4byte	0x9b
 1210 0131 78010000 		.4byte	.LLST2
 1211 0135 08       		.uleb128 0x8
 1212 0136 D7000000 		.4byte	.LASF25
 1213 013a 01       		.byte	0x1
 1214 013b 65       		.byte	0x65
 1215 013c 83010000 		.4byte	0x183
 1216 0140 05       		.uleb128 0x5
 1217 0141 03       		.byte	0x3
 1218 0142 0C000000 		.4byte	ADC_InputsPlacement.4914
 1219 0146 09       		.uleb128 0x9
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 38


 1220 0147 0A000000 		.4byte	.LVL0
 1221 014b 78050000 		.4byte	0x578
 1222 014f 5E010000 		.4byte	0x15e
 1223 0153 0A       		.uleb128 0xa
 1224 0154 01       		.uleb128 0x1
 1225 0155 50       		.byte	0x50
 1226 0156 01       		.uleb128 0x1
 1227 0157 40       		.byte	0x40
 1228 0158 0A       		.uleb128 0xa
 1229 0159 01       		.uleb128 0x1
 1230 015a 51       		.byte	0x51
 1231 015b 01       		.uleb128 0x1
 1232 015c 33       		.byte	0x33
 1233 015d 00       		.byte	0
 1234 015e 0B       		.uleb128 0xb
 1235 015f 12000000 		.4byte	.LVL1
 1236 0163 83050000 		.4byte	0x583
 1237 0167 0A       		.uleb128 0xa
 1238 0168 01       		.uleb128 0x1
 1239 0169 50       		.byte	0x50
 1240 016a 01       		.uleb128 0x1
 1241 016b 40       		.byte	0x40
 1242 016c 00       		.byte	0
 1243 016d 00       		.byte	0
 1244 016e 0C       		.uleb128 0xc
 1245 016f 7E010000 		.4byte	0x17e
 1246 0173 7E010000 		.4byte	0x17e
 1247 0177 0D       		.uleb128 0xd
 1248 0178 EC000000 		.4byte	0xec
 1249 017c 02       		.byte	0x2
 1250 017d 00       		.byte	0
 1251 017e 0E       		.uleb128 0xe
 1252 017f 6B000000 		.4byte	0x6b
 1253 0183 0E       		.uleb128 0xe
 1254 0184 6E010000 		.4byte	0x16e
 1255 0188 0F       		.uleb128 0xf
 1256 0189 97030000 		.4byte	.LASF27
 1257 018d 01       		.byte	0x1
 1258 018e 4A01     		.2byte	0x14a
 1259 0190 00000000 		.4byte	.LFB3
 1260 0194 30000000 		.4byte	.LFE3-.LFB3
 1261 0198 01       		.uleb128 0x1
 1262 0199 9C       		.byte	0x9c
 1263 019a AE010000 		.4byte	0x1ae
 1264 019e 0B       		.uleb128 0xb
 1265 019f 24000000 		.4byte	.LVL22
 1266 01a3 8E050000 		.4byte	0x58e
 1267 01a7 0A       		.uleb128 0xa
 1268 01a8 01       		.uleb128 0x1
 1269 01a9 50       		.byte	0x50
 1270 01aa 01       		.uleb128 0x1
 1271 01ab 3A       		.byte	0x3a
 1272 01ac 00       		.byte	0
 1273 01ad 00       		.byte	0
 1274 01ae 06       		.uleb128 0x6
 1275 01af 23010000 		.4byte	.LASF28
 1276 01b3 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 39


 1277 01b4 3F       		.byte	0x3f
 1278 01b5 00000000 		.4byte	.LFB1
 1279 01b9 20000000 		.4byte	.LFE1-.LFB1
 1280 01bd 01       		.uleb128 0x1
 1281 01be 9C       		.byte	0x9c
 1282 01bf D6010000 		.4byte	0x1d6
 1283 01c3 10       		.uleb128 0x10
 1284 01c4 0E000000 		.4byte	.LVL23
 1285 01c8 F3000000 		.4byte	0xf3
 1286 01cc 10       		.uleb128 0x10
 1287 01cd 18000000 		.4byte	.LVL24
 1288 01d1 88010000 		.4byte	0x188
 1289 01d5 00       		.byte	0
 1290 01d6 11       		.uleb128 0x11
 1291 01d7 5A030000 		.4byte	.LASF29
 1292 01db 01       		.byte	0x1
 1293 01dc 6D01     		.2byte	0x16d
 1294 01de 00000000 		.4byte	.LFB4
 1295 01e2 10000000 		.4byte	.LFE4-.LFB4
 1296 01e6 01       		.uleb128 0x1
 1297 01e7 9C       		.byte	0x9c
 1298 01e8 11       		.uleb128 0x11
 1299 01e9 EB000000 		.4byte	.LASF30
 1300 01ed 01       		.byte	0x1
 1301 01ee 8701     		.2byte	0x187
 1302 01f0 00000000 		.4byte	.LFB5
 1303 01f4 14000000 		.4byte	.LFE5-.LFB5
 1304 01f8 01       		.uleb128 0x1
 1305 01f9 9C       		.byte	0x9c
 1306 01fa 11       		.uleb128 0x11
 1307 01fb 0D020000 		.4byte	.LASF31
 1308 01ff 01       		.byte	0x1
 1309 0200 A001     		.2byte	0x1a0
 1310 0202 00000000 		.4byte	.LFB6
 1311 0206 14000000 		.4byte	.LFE6-.LFB6
 1312 020a 01       		.uleb128 0x1
 1313 020b 9C       		.byte	0x9c
 1314 020c 12       		.uleb128 0x12
 1315 020d 98020000 		.4byte	.LASF33
 1316 0211 01       		.byte	0x1
 1317 0212 C201     		.2byte	0x1c2
 1318 0214 83000000 		.4byte	0x83
 1319 0218 00000000 		.4byte	.LFB7
 1320 021c 28000000 		.4byte	.LFE7-.LFB7
 1321 0220 01       		.uleb128 0x1
 1322 0221 9C       		.byte	0x9c
 1323 0222 47020000 		.4byte	0x247
 1324 0226 13       		.uleb128 0x13
 1325 0227 8D010000 		.4byte	.LASF35
 1326 022b 01       		.byte	0x1
 1327 022c C201     		.2byte	0x1c2
 1328 022e 83000000 		.4byte	0x83
 1329 0232 8B010000 		.4byte	.LLST3
 1330 0236 14       		.uleb128 0x14
 1331 0237 16010000 		.4byte	.LASF32
 1332 023b 01       		.byte	0x1
 1333 023c C401     		.2byte	0x1c4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 40


 1334 023e 83000000 		.4byte	0x83
 1335 0242 D0010000 		.4byte	.LLST4
 1336 0246 00       		.byte	0
 1337 0247 12       		.uleb128 0x12
 1338 0248 BD030000 		.4byte	.LASF34
 1339 024c 01       		.byte	0x1
 1340 024d F801     		.2byte	0x1f8
 1341 024f 8F000000 		.4byte	0x8f
 1342 0253 00000000 		.4byte	.LFB8
 1343 0257 2C000000 		.4byte	.LFE8-.LFB8
 1344 025b 01       		.uleb128 0x1
 1345 025c 9C       		.byte	0x9c
 1346 025d 91020000 		.4byte	0x291
 1347 0261 13       		.uleb128 0x13
 1348 0262 69030000 		.4byte	.LASF36
 1349 0266 01       		.byte	0x1
 1350 0267 F801     		.2byte	0x1f8
 1351 0269 83000000 		.4byte	0x83
 1352 026d 06020000 		.4byte	.LLST5
 1353 0271 14       		.uleb128 0x14
 1354 0272 B6030000 		.4byte	.LASF37
 1355 0276 01       		.byte	0x1
 1356 0277 FA01     		.2byte	0x1fa
 1357 0279 83000000 		.4byte	0x83
 1358 027d 4B020000 		.4byte	.LLST6
 1359 0281 0B       		.uleb128 0xb
 1360 0282 0E000000 		.4byte	.LVL34
 1361 0286 99050000 		.4byte	0x599
 1362 028a 0A       		.uleb128 0xa
 1363 028b 01       		.uleb128 0x1
 1364 028c 50       		.byte	0x50
 1365 028d 01       		.uleb128 0x1
 1366 028e 30       		.byte	0x30
 1367 028f 00       		.byte	0
 1368 0290 00       		.byte	0
 1369 0291 0F       		.uleb128 0xf
 1370 0292 C3020000 		.4byte	.LASF38
 1371 0296 01       		.byte	0x1
 1372 0297 2502     		.2byte	0x225
 1373 0299 00000000 		.4byte	.LFB9
 1374 029d 10000000 		.4byte	.LFE9-.LFB9
 1375 02a1 01       		.uleb128 0x1
 1376 02a2 9C       		.byte	0x9c
 1377 02a3 B8020000 		.4byte	0x2b8
 1378 02a7 13       		.uleb128 0x13
 1379 02a8 7C010000 		.4byte	.LASF39
 1380 02ac 01       		.byte	0x1
 1381 02ad 2502     		.2byte	0x225
 1382 02af 83000000 		.4byte	0x83
 1383 02b3 69020000 		.4byte	.LLST7
 1384 02b7 00       		.byte	0
 1385 02b8 0F       		.uleb128 0xf
 1386 02b9 20030000 		.4byte	.LASF40
 1387 02bd 01       		.byte	0x1
 1388 02be 5102     		.2byte	0x251
 1389 02c0 00000000 		.4byte	.LFB10
 1390 02c4 1C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 41


 1391 02c8 01       		.uleb128 0x1
 1392 02c9 9C       		.byte	0x9c
 1393 02ca DF020000 		.4byte	0x2df
 1394 02ce 13       		.uleb128 0x13
 1395 02cf 72020000 		.4byte	.LASF41
 1396 02d3 01       		.byte	0x1
 1397 02d4 5102     		.2byte	0x251
 1398 02d6 83000000 		.4byte	0x83
 1399 02da 8A020000 		.4byte	.LLST8
 1400 02de 00       		.byte	0
 1401 02df 0F       		.uleb128 0xf
 1402 02e0 87020000 		.4byte	.LASF42
 1403 02e4 01       		.byte	0x1
 1404 02e5 6602     		.2byte	0x266
 1405 02e7 00000000 		.4byte	.LFB11
 1406 02eb 18000000 		.4byte	.LFE11-.LFB11
 1407 02ef 01       		.uleb128 0x1
 1408 02f0 9C       		.byte	0x9c
 1409 02f1 06030000 		.4byte	0x306
 1410 02f5 13       		.uleb128 0x13
 1411 02f6 02030000 		.4byte	.LASF43
 1412 02fa 01       		.byte	0x1
 1413 02fb 6602     		.2byte	0x266
 1414 02fd 83000000 		.4byte	0x83
 1415 0301 AB020000 		.4byte	.LLST9
 1416 0305 00       		.byte	0
 1417 0306 0F       		.uleb128 0xf
 1418 0307 95010000 		.4byte	.LASF44
 1419 030b 01       		.byte	0x1
 1420 030c 7E02     		.2byte	0x27e
 1421 030e 00000000 		.4byte	.LFB12
 1422 0312 10000000 		.4byte	.LFE12-.LFB12
 1423 0316 01       		.uleb128 0x1
 1424 0317 9C       		.byte	0x9c
 1425 0318 2D030000 		.4byte	0x32d
 1426 031c 13       		.uleb128 0x13
 1427 031d 7C010000 		.4byte	.LASF39
 1428 0321 01       		.byte	0x1
 1429 0322 7E02     		.2byte	0x27e
 1430 0324 83000000 		.4byte	0x83
 1431 0328 CC020000 		.4byte	.LLST10
 1432 032c 00       		.byte	0
 1433 032d 0F       		.uleb128 0xf
 1434 032e CC010000 		.4byte	.LASF45
 1435 0332 01       		.byte	0x1
 1436 0333 9502     		.2byte	0x295
 1437 0335 00000000 		.4byte	.LFB13
 1438 0339 10000000 		.4byte	.LFE13-.LFB13
 1439 033d 01       		.uleb128 0x1
 1440 033e 9C       		.byte	0x9c
 1441 033f 54030000 		.4byte	0x354
 1442 0343 13       		.uleb128 0x13
 1443 0344 7C010000 		.4byte	.LASF39
 1444 0348 01       		.byte	0x1
 1445 0349 9502     		.2byte	0x295
 1446 034b 83000000 		.4byte	0x83
 1447 034f ED020000 		.4byte	.LLST11
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 42


 1448 0353 00       		.byte	0
 1449 0354 0F       		.uleb128 0xf
 1450 0355 A8030000 		.4byte	.LASF46
 1451 0359 01       		.byte	0x1
 1452 035a B102     		.2byte	0x2b1
 1453 035c 00000000 		.4byte	.LFB14
 1454 0360 1C000000 		.4byte	.LFE14-.LFB14
 1455 0364 01       		.uleb128 0x1
 1456 0365 9C       		.byte	0x9c
 1457 0366 9A030000 		.4byte	0x39a
 1458 036a 13       		.uleb128 0x13
 1459 036b 69030000 		.4byte	.LASF36
 1460 036f 01       		.byte	0x1
 1461 0370 B102     		.2byte	0x2b1
 1462 0372 83000000 		.4byte	0x83
 1463 0376 0E030000 		.4byte	.LLST12
 1464 037a 13       		.uleb128 0x13
 1465 037b 86030000 		.4byte	.LASF47
 1466 037f 01       		.byte	0x1
 1467 0380 B102     		.2byte	0x2b1
 1468 0382 8F000000 		.4byte	0x8f
 1469 0386 3A030000 		.4byte	.LLST13
 1470 038a 0B       		.uleb128 0xb
 1471 038b 10000000 		.4byte	.LVL52
 1472 038f 99050000 		.4byte	0x599
 1473 0393 0A       		.uleb128 0xa
 1474 0394 01       		.uleb128 0x1
 1475 0395 50       		.byte	0x50
 1476 0396 01       		.uleb128 0x1
 1477 0397 30       		.byte	0x30
 1478 0398 00       		.byte	0
 1479 0399 00       		.byte	0
 1480 039a 0F       		.uleb128 0xf
 1481 039b F0020000 		.4byte	.LASF48
 1482 039f 01       		.byte	0x1
 1483 03a0 D302     		.2byte	0x2d3
 1484 03a2 00000000 		.4byte	.LFB15
 1485 03a6 1C000000 		.4byte	.LFE15-.LFB15
 1486 03aa 01       		.uleb128 0x1
 1487 03ab 9C       		.byte	0x9c
 1488 03ac E0030000 		.4byte	0x3e0
 1489 03b0 13       		.uleb128 0x13
 1490 03b1 69030000 		.4byte	.LASF36
 1491 03b5 01       		.byte	0x1
 1492 03b6 D302     		.2byte	0x2d3
 1493 03b8 83000000 		.4byte	0x83
 1494 03bc 5B030000 		.4byte	.LLST14
 1495 03c0 13       		.uleb128 0x13
 1496 03c1 07000000 		.4byte	.LASF49
 1497 03c5 01       		.byte	0x1
 1498 03c6 D302     		.2byte	0x2d3
 1499 03c8 9B000000 		.4byte	0x9b
 1500 03cc 87030000 		.4byte	.LLST15
 1501 03d0 0B       		.uleb128 0xb
 1502 03d1 10000000 		.4byte	.LVL56
 1503 03d5 99050000 		.4byte	0x599
 1504 03d9 0A       		.uleb128 0xa
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 43


 1505 03da 01       		.uleb128 0x1
 1506 03db 50       		.byte	0x50
 1507 03dc 01       		.uleb128 0x1
 1508 03dd 30       		.byte	0x30
 1509 03de 00       		.byte	0
 1510 03df 00       		.byte	0
 1511 03e0 15       		.uleb128 0x15
 1512 03e1 0C030000 		.4byte	.LASF50
 1513 03e5 01       		.byte	0x1
 1514 03e6 F402     		.2byte	0x2f4
 1515 03e8 8F000000 		.4byte	0x8f
 1516 03ec 00000000 		.4byte	.LFB16
 1517 03f0 5C000000 		.4byte	.LFE16-.LFB16
 1518 03f4 01       		.uleb128 0x1
 1519 03f5 9C       		.byte	0x9c
 1520 03f6 38040000 		.4byte	0x438
 1521 03fa 13       		.uleb128 0x13
 1522 03fb 69030000 		.4byte	.LASF36
 1523 03ff 01       		.byte	0x1
 1524 0400 F402     		.2byte	0x2f4
 1525 0402 83000000 		.4byte	0x83
 1526 0406 B7030000 		.4byte	.LLST16
 1527 040a 13       		.uleb128 0x13
 1528 040b 8D030000 		.4byte	.LASF51
 1529 040f 01       		.byte	0x1
 1530 0410 F402     		.2byte	0x2f4
 1531 0412 8F000000 		.4byte	0x8f
 1532 0416 E3030000 		.4byte	.LLST17
 1533 041a 16       		.uleb128 0x16
 1534 041b 1D020000 		.4byte	.LASF52
 1535 041f 01       		.byte	0x1
 1536 0420 F602     		.2byte	0x2f6
 1537 0422 8F000000 		.4byte	0x8f
 1538 0426 01       		.uleb128 0x1
 1539 0427 50       		.byte	0x50
 1540 0428 0B       		.uleb128 0xb
 1541 0429 10000000 		.4byte	.LVL61
 1542 042d 99050000 		.4byte	0x599
 1543 0431 0A       		.uleb128 0xa
 1544 0432 01       		.uleb128 0x1
 1545 0433 50       		.byte	0x50
 1546 0434 01       		.uleb128 0x1
 1547 0435 30       		.byte	0x30
 1548 0436 00       		.byte	0
 1549 0437 00       		.byte	0
 1550 0438 15       		.uleb128 0x15
 1551 0439 36010000 		.4byte	.LASF53
 1552 043d 01       		.byte	0x1
 1553 043e 2A03     		.2byte	0x32a
 1554 0440 9B000000 		.4byte	0x9b
 1555 0444 00000000 		.4byte	.LFB17
 1556 0448 40000000 		.4byte	.LFE17-.LFB17
 1557 044c 01       		.uleb128 0x1
 1558 044d 9C       		.byte	0x9c
 1559 044e 8E040000 		.4byte	0x48e
 1560 0452 13       		.uleb128 0x13
 1561 0453 69030000 		.4byte	.LASF36
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 44


 1562 0457 01       		.byte	0x1
 1563 0458 2A03     		.2byte	0x32a
 1564 045a 83000000 		.4byte	0x83
 1565 045e 0F040000 		.4byte	.LLST18
 1566 0462 13       		.uleb128 0x13
 1567 0463 8D030000 		.4byte	.LASF51
 1568 0467 01       		.byte	0x1
 1569 0468 2A03     		.2byte	0x32a
 1570 046a 8F000000 		.4byte	0x8f
 1571 046e 3B040000 		.4byte	.LLST19
 1572 0472 17       		.uleb128 0x17
 1573 0473 B3010000 		.4byte	.LASF67
 1574 0477 01       		.byte	0x1
 1575 0478 2C03     		.2byte	0x32c
 1576 047a C1000000 		.4byte	0xc1
 1577 047e 0B       		.uleb128 0xb
 1578 047f 10000000 		.4byte	.LVL69
 1579 0483 99050000 		.4byte	0x599
 1580 0487 0A       		.uleb128 0xa
 1581 0488 01       		.uleb128 0x1
 1582 0489 50       		.byte	0x50
 1583 048a 01       		.uleb128 0x1
 1584 048b 30       		.byte	0x30
 1585 048c 00       		.byte	0
 1586 048d 00       		.byte	0
 1587 048e 15       		.uleb128 0x15
 1588 048f 16000000 		.4byte	.LASF54
 1589 0493 01       		.byte	0x1
 1590 0494 5703     		.2byte	0x357
 1591 0496 A7000000 		.4byte	0xa7
 1592 049a 00000000 		.4byte	.LFB18
 1593 049e 48000000 		.4byte	.LFE18-.LFB18
 1594 04a2 01       		.uleb128 0x1
 1595 04a3 9C       		.byte	0x9c
 1596 04a4 E6040000 		.4byte	0x4e6
 1597 04a8 13       		.uleb128 0x13
 1598 04a9 69030000 		.4byte	.LASF36
 1599 04ad 01       		.byte	0x1
 1600 04ae 5703     		.2byte	0x357
 1601 04b0 83000000 		.4byte	0x83
 1602 04b4 67040000 		.4byte	.LLST20
 1603 04b8 13       		.uleb128 0x13
 1604 04b9 8D030000 		.4byte	.LASF51
 1605 04bd 01       		.byte	0x1
 1606 04be 5703     		.2byte	0x357
 1607 04c0 8F000000 		.4byte	0x8f
 1608 04c4 93040000 		.4byte	.LLST21
 1609 04c8 16       		.uleb128 0x16
 1610 04c9 DB010000 		.4byte	.LASF55
 1611 04cd 01       		.byte	0x1
 1612 04ce 5903     		.2byte	0x359
 1613 04d0 A7000000 		.4byte	0xa7
 1614 04d4 01       		.uleb128 0x1
 1615 04d5 50       		.byte	0x50
 1616 04d6 0B       		.uleb128 0xb
 1617 04d7 10000000 		.4byte	.LVL76
 1618 04db 99050000 		.4byte	0x599
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 45


 1619 04df 0A       		.uleb128 0xa
 1620 04e0 01       		.uleb128 0x1
 1621 04e1 50       		.byte	0x50
 1622 04e2 01       		.uleb128 0x1
 1623 04e3 30       		.byte	0x30
 1624 04e4 00       		.byte	0
 1625 04e5 00       		.byte	0
 1626 04e6 0C       		.uleb128 0xc
 1627 04e7 F6040000 		.4byte	0x4f6
 1628 04eb F6040000 		.4byte	0x4f6
 1629 04ef 0D       		.uleb128 0xd
 1630 04f0 EC000000 		.4byte	0xec
 1631 04f4 02       		.byte	0x2
 1632 04f5 00       		.byte	0
 1633 04f6 0E       		.uleb128 0xe
 1634 04f7 83000000 		.4byte	0x83
 1635 04fb 08       		.uleb128 0x8
 1636 04fc 73030000 		.4byte	.LASF56
 1637 0500 01       		.byte	0x1
 1638 0501 21       		.byte	0x21
 1639 0502 0C050000 		.4byte	0x50c
 1640 0506 05       		.uleb128 0x5
 1641 0507 03       		.byte	0x3
 1642 0508 00000000 		.4byte	ADC_channelsConfig
 1643 050c 0E       		.uleb128 0xe
 1644 050d E6040000 		.4byte	0x4e6
 1645 0511 18       		.uleb128 0x18
 1646 0512 81010000 		.4byte	.LASF57
 1647 0516 01       		.byte	0x1
 1648 0517 18       		.byte	0x18
 1649 0518 6B000000 		.4byte	0x6b
 1650 051c 05       		.uleb128 0x5
 1651 051d 03       		.byte	0x3
 1652 051e 00000000 		.4byte	ADC_initVar
 1653 0522 0C       		.uleb128 0xc
 1654 0523 32050000 		.4byte	0x532
 1655 0527 32050000 		.4byte	0x532
 1656 052b 0D       		.uleb128 0xd
 1657 052c EC000000 		.4byte	0xec
 1658 0530 02       		.byte	0x2
 1659 0531 00       		.byte	0
 1660 0532 05       		.uleb128 0x5
 1661 0533 8F000000 		.4byte	0x8f
 1662 0537 18       		.uleb128 0x18
 1663 0538 45030000 		.4byte	.LASF58
 1664 053c 01       		.byte	0x1
 1665 053d 19       		.byte	0x19
 1666 053e 48050000 		.4byte	0x548
 1667 0542 05       		.uleb128 0x5
 1668 0543 03       		.byte	0x3
 1669 0544 00000000 		.4byte	ADC_offset
 1670 0548 05       		.uleb128 0x5
 1671 0549 22050000 		.4byte	0x522
 1672 054d 0C       		.uleb128 0xc
 1673 054e 5D050000 		.4byte	0x55d
 1674 0552 5D050000 		.4byte	0x55d
 1675 0556 0D       		.uleb128 0xd
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 46


 1676 0557 EC000000 		.4byte	0xec
 1677 055b 02       		.byte	0x2
 1678 055c 00       		.byte	0
 1679 055d 05       		.uleb128 0x5
 1680 055e 9B000000 		.4byte	0x9b
 1681 0562 18       		.uleb128 0x18
 1682 0563 4A010000 		.4byte	.LASF59
 1683 0567 01       		.byte	0x1
 1684 0568 1A       		.byte	0x1a
 1685 0569 73050000 		.4byte	0x573
 1686 056d 05       		.uleb128 0x5
 1687 056e 03       		.byte	0x3
 1688 056f 00000000 		.4byte	ADC_countsPer10Volt
 1689 0573 05       		.uleb128 0x5
 1690 0574 4D050000 		.4byte	0x54d
 1691 0578 19       		.uleb128 0x19
 1692 0579 B2020000 		.4byte	.LASF60
 1693 057d B2020000 		.4byte	.LASF60
 1694 0581 03       		.byte	0x3
 1695 0582 C0       		.byte	0xc0
 1696 0583 19       		.uleb128 0x19
 1697 0584 FE010000 		.4byte	.LASF61
 1698 0588 FE010000 		.4byte	.LASF61
 1699 058c 03       		.byte	0x3
 1700 058d BD       		.byte	0xbd
 1701 058e 19       		.uleb128 0x19
 1702 058f 64010000 		.4byte	.LASF62
 1703 0593 64010000 		.4byte	.LASF62
 1704 0597 03       		.byte	0x3
 1705 0598 DA       		.byte	0xda
 1706 0599 19       		.uleb128 0x19
 1707 059a 30030000 		.4byte	.LASF63
 1708 059e 30030000 		.4byte	.LASF63
 1709 05a2 03       		.byte	0x3
 1710 05a3 E7       		.byte	0xe7
 1711 05a4 00       		.byte	0
 1712              		.section	.debug_abbrev,"",%progbits
 1713              	.Ldebug_abbrev0:
 1714 0000 01       		.uleb128 0x1
 1715 0001 11       		.uleb128 0x11
 1716 0002 01       		.byte	0x1
 1717 0003 25       		.uleb128 0x25
 1718 0004 0E       		.uleb128 0xe
 1719 0005 13       		.uleb128 0x13
 1720 0006 0B       		.uleb128 0xb
 1721 0007 03       		.uleb128 0x3
 1722 0008 0E       		.uleb128 0xe
 1723 0009 1B       		.uleb128 0x1b
 1724 000a 0E       		.uleb128 0xe
 1725 000b 55       		.uleb128 0x55
 1726 000c 17       		.uleb128 0x17
 1727 000d 11       		.uleb128 0x11
 1728 000e 01       		.uleb128 0x1
 1729 000f 10       		.uleb128 0x10
 1730 0010 17       		.uleb128 0x17
 1731 0011 00       		.byte	0
 1732 0012 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 47


 1733 0013 02       		.uleb128 0x2
 1734 0014 24       		.uleb128 0x24
 1735 0015 00       		.byte	0
 1736 0016 0B       		.uleb128 0xb
 1737 0017 0B       		.uleb128 0xb
 1738 0018 3E       		.uleb128 0x3e
 1739 0019 0B       		.uleb128 0xb
 1740 001a 03       		.uleb128 0x3
 1741 001b 0E       		.uleb128 0xe
 1742 001c 00       		.byte	0
 1743 001d 00       		.byte	0
 1744 001e 03       		.uleb128 0x3
 1745 001f 24       		.uleb128 0x24
 1746 0020 00       		.byte	0
 1747 0021 0B       		.uleb128 0xb
 1748 0022 0B       		.uleb128 0xb
 1749 0023 3E       		.uleb128 0x3e
 1750 0024 0B       		.uleb128 0xb
 1751 0025 03       		.uleb128 0x3
 1752 0026 08       		.uleb128 0x8
 1753 0027 00       		.byte	0
 1754 0028 00       		.byte	0
 1755 0029 04       		.uleb128 0x4
 1756 002a 16       		.uleb128 0x16
 1757 002b 00       		.byte	0
 1758 002c 03       		.uleb128 0x3
 1759 002d 0E       		.uleb128 0xe
 1760 002e 3A       		.uleb128 0x3a
 1761 002f 0B       		.uleb128 0xb
 1762 0030 3B       		.uleb128 0x3b
 1763 0031 05       		.uleb128 0x5
 1764 0032 49       		.uleb128 0x49
 1765 0033 13       		.uleb128 0x13
 1766 0034 00       		.byte	0
 1767 0035 00       		.byte	0
 1768 0036 05       		.uleb128 0x5
 1769 0037 35       		.uleb128 0x35
 1770 0038 00       		.byte	0
 1771 0039 49       		.uleb128 0x49
 1772 003a 13       		.uleb128 0x13
 1773 003b 00       		.byte	0
 1774 003c 00       		.byte	0
 1775 003d 06       		.uleb128 0x6
 1776 003e 2E       		.uleb128 0x2e
 1777 003f 01       		.byte	0x1
 1778 0040 3F       		.uleb128 0x3f
 1779 0041 19       		.uleb128 0x19
 1780 0042 03       		.uleb128 0x3
 1781 0043 0E       		.uleb128 0xe
 1782 0044 3A       		.uleb128 0x3a
 1783 0045 0B       		.uleb128 0xb
 1784 0046 3B       		.uleb128 0x3b
 1785 0047 0B       		.uleb128 0xb
 1786 0048 27       		.uleb128 0x27
 1787 0049 19       		.uleb128 0x19
 1788 004a 11       		.uleb128 0x11
 1789 004b 01       		.uleb128 0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 48


 1790 004c 12       		.uleb128 0x12
 1791 004d 06       		.uleb128 0x6
 1792 004e 40       		.uleb128 0x40
 1793 004f 18       		.uleb128 0x18
 1794 0050 9742     		.uleb128 0x2117
 1795 0052 19       		.uleb128 0x19
 1796 0053 01       		.uleb128 0x1
 1797 0054 13       		.uleb128 0x13
 1798 0055 00       		.byte	0
 1799 0056 00       		.byte	0
 1800 0057 07       		.uleb128 0x7
 1801 0058 34       		.uleb128 0x34
 1802 0059 00       		.byte	0
 1803 005a 03       		.uleb128 0x3
 1804 005b 0E       		.uleb128 0xe
 1805 005c 3A       		.uleb128 0x3a
 1806 005d 0B       		.uleb128 0xb
 1807 005e 3B       		.uleb128 0x3b
 1808 005f 0B       		.uleb128 0xb
 1809 0060 49       		.uleb128 0x49
 1810 0061 13       		.uleb128 0x13
 1811 0062 02       		.uleb128 0x2
 1812 0063 17       		.uleb128 0x17
 1813 0064 00       		.byte	0
 1814 0065 00       		.byte	0
 1815 0066 08       		.uleb128 0x8
 1816 0067 34       		.uleb128 0x34
 1817 0068 00       		.byte	0
 1818 0069 03       		.uleb128 0x3
 1819 006a 0E       		.uleb128 0xe
 1820 006b 3A       		.uleb128 0x3a
 1821 006c 0B       		.uleb128 0xb
 1822 006d 3B       		.uleb128 0x3b
 1823 006e 0B       		.uleb128 0xb
 1824 006f 49       		.uleb128 0x49
 1825 0070 13       		.uleb128 0x13
 1826 0071 02       		.uleb128 0x2
 1827 0072 18       		.uleb128 0x18
 1828 0073 00       		.byte	0
 1829 0074 00       		.byte	0
 1830 0075 09       		.uleb128 0x9
 1831 0076 898201   		.uleb128 0x4109
 1832 0079 01       		.byte	0x1
 1833 007a 11       		.uleb128 0x11
 1834 007b 01       		.uleb128 0x1
 1835 007c 31       		.uleb128 0x31
 1836 007d 13       		.uleb128 0x13
 1837 007e 01       		.uleb128 0x1
 1838 007f 13       		.uleb128 0x13
 1839 0080 00       		.byte	0
 1840 0081 00       		.byte	0
 1841 0082 0A       		.uleb128 0xa
 1842 0083 8A8201   		.uleb128 0x410a
 1843 0086 00       		.byte	0
 1844 0087 02       		.uleb128 0x2
 1845 0088 18       		.uleb128 0x18
 1846 0089 9142     		.uleb128 0x2111
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 49


 1847 008b 18       		.uleb128 0x18
 1848 008c 00       		.byte	0
 1849 008d 00       		.byte	0
 1850 008e 0B       		.uleb128 0xb
 1851 008f 898201   		.uleb128 0x4109
 1852 0092 01       		.byte	0x1
 1853 0093 11       		.uleb128 0x11
 1854 0094 01       		.uleb128 0x1
 1855 0095 31       		.uleb128 0x31
 1856 0096 13       		.uleb128 0x13
 1857 0097 00       		.byte	0
 1858 0098 00       		.byte	0
 1859 0099 0C       		.uleb128 0xc
 1860 009a 01       		.uleb128 0x1
 1861 009b 01       		.byte	0x1
 1862 009c 49       		.uleb128 0x49
 1863 009d 13       		.uleb128 0x13
 1864 009e 01       		.uleb128 0x1
 1865 009f 13       		.uleb128 0x13
 1866 00a0 00       		.byte	0
 1867 00a1 00       		.byte	0
 1868 00a2 0D       		.uleb128 0xd
 1869 00a3 21       		.uleb128 0x21
 1870 00a4 00       		.byte	0
 1871 00a5 49       		.uleb128 0x49
 1872 00a6 13       		.uleb128 0x13
 1873 00a7 2F       		.uleb128 0x2f
 1874 00a8 0B       		.uleb128 0xb
 1875 00a9 00       		.byte	0
 1876 00aa 00       		.byte	0
 1877 00ab 0E       		.uleb128 0xe
 1878 00ac 26       		.uleb128 0x26
 1879 00ad 00       		.byte	0
 1880 00ae 49       		.uleb128 0x49
 1881 00af 13       		.uleb128 0x13
 1882 00b0 00       		.byte	0
 1883 00b1 00       		.byte	0
 1884 00b2 0F       		.uleb128 0xf
 1885 00b3 2E       		.uleb128 0x2e
 1886 00b4 01       		.byte	0x1
 1887 00b5 3F       		.uleb128 0x3f
 1888 00b6 19       		.uleb128 0x19
 1889 00b7 03       		.uleb128 0x3
 1890 00b8 0E       		.uleb128 0xe
 1891 00b9 3A       		.uleb128 0x3a
 1892 00ba 0B       		.uleb128 0xb
 1893 00bb 3B       		.uleb128 0x3b
 1894 00bc 05       		.uleb128 0x5
 1895 00bd 27       		.uleb128 0x27
 1896 00be 19       		.uleb128 0x19
 1897 00bf 11       		.uleb128 0x11
 1898 00c0 01       		.uleb128 0x1
 1899 00c1 12       		.uleb128 0x12
 1900 00c2 06       		.uleb128 0x6
 1901 00c3 40       		.uleb128 0x40
 1902 00c4 18       		.uleb128 0x18
 1903 00c5 9742     		.uleb128 0x2117
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 50


 1904 00c7 19       		.uleb128 0x19
 1905 00c8 01       		.uleb128 0x1
 1906 00c9 13       		.uleb128 0x13
 1907 00ca 00       		.byte	0
 1908 00cb 00       		.byte	0
 1909 00cc 10       		.uleb128 0x10
 1910 00cd 898201   		.uleb128 0x4109
 1911 00d0 00       		.byte	0
 1912 00d1 11       		.uleb128 0x11
 1913 00d2 01       		.uleb128 0x1
 1914 00d3 31       		.uleb128 0x31
 1915 00d4 13       		.uleb128 0x13
 1916 00d5 00       		.byte	0
 1917 00d6 00       		.byte	0
 1918 00d7 11       		.uleb128 0x11
 1919 00d8 2E       		.uleb128 0x2e
 1920 00d9 00       		.byte	0
 1921 00da 3F       		.uleb128 0x3f
 1922 00db 19       		.uleb128 0x19
 1923 00dc 03       		.uleb128 0x3
 1924 00dd 0E       		.uleb128 0xe
 1925 00de 3A       		.uleb128 0x3a
 1926 00df 0B       		.uleb128 0xb
 1927 00e0 3B       		.uleb128 0x3b
 1928 00e1 05       		.uleb128 0x5
 1929 00e2 27       		.uleb128 0x27
 1930 00e3 19       		.uleb128 0x19
 1931 00e4 11       		.uleb128 0x11
 1932 00e5 01       		.uleb128 0x1
 1933 00e6 12       		.uleb128 0x12
 1934 00e7 06       		.uleb128 0x6
 1935 00e8 40       		.uleb128 0x40
 1936 00e9 18       		.uleb128 0x18
 1937 00ea 9742     		.uleb128 0x2117
 1938 00ec 19       		.uleb128 0x19
 1939 00ed 00       		.byte	0
 1940 00ee 00       		.byte	0
 1941 00ef 12       		.uleb128 0x12
 1942 00f0 2E       		.uleb128 0x2e
 1943 00f1 01       		.byte	0x1
 1944 00f2 3F       		.uleb128 0x3f
 1945 00f3 19       		.uleb128 0x19
 1946 00f4 03       		.uleb128 0x3
 1947 00f5 0E       		.uleb128 0xe
 1948 00f6 3A       		.uleb128 0x3a
 1949 00f7 0B       		.uleb128 0xb
 1950 00f8 3B       		.uleb128 0x3b
 1951 00f9 05       		.uleb128 0x5
 1952 00fa 27       		.uleb128 0x27
 1953 00fb 19       		.uleb128 0x19
 1954 00fc 49       		.uleb128 0x49
 1955 00fd 13       		.uleb128 0x13
 1956 00fe 11       		.uleb128 0x11
 1957 00ff 01       		.uleb128 0x1
 1958 0100 12       		.uleb128 0x12
 1959 0101 06       		.uleb128 0x6
 1960 0102 40       		.uleb128 0x40
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 51


 1961 0103 18       		.uleb128 0x18
 1962 0104 9742     		.uleb128 0x2117
 1963 0106 19       		.uleb128 0x19
 1964 0107 01       		.uleb128 0x1
 1965 0108 13       		.uleb128 0x13
 1966 0109 00       		.byte	0
 1967 010a 00       		.byte	0
 1968 010b 13       		.uleb128 0x13
 1969 010c 05       		.uleb128 0x5
 1970 010d 00       		.byte	0
 1971 010e 03       		.uleb128 0x3
 1972 010f 0E       		.uleb128 0xe
 1973 0110 3A       		.uleb128 0x3a
 1974 0111 0B       		.uleb128 0xb
 1975 0112 3B       		.uleb128 0x3b
 1976 0113 05       		.uleb128 0x5
 1977 0114 49       		.uleb128 0x49
 1978 0115 13       		.uleb128 0x13
 1979 0116 02       		.uleb128 0x2
 1980 0117 17       		.uleb128 0x17
 1981 0118 00       		.byte	0
 1982 0119 00       		.byte	0
 1983 011a 14       		.uleb128 0x14
 1984 011b 34       		.uleb128 0x34
 1985 011c 00       		.byte	0
 1986 011d 03       		.uleb128 0x3
 1987 011e 0E       		.uleb128 0xe
 1988 011f 3A       		.uleb128 0x3a
 1989 0120 0B       		.uleb128 0xb
 1990 0121 3B       		.uleb128 0x3b
 1991 0122 05       		.uleb128 0x5
 1992 0123 49       		.uleb128 0x49
 1993 0124 13       		.uleb128 0x13
 1994 0125 02       		.uleb128 0x2
 1995 0126 17       		.uleb128 0x17
 1996 0127 00       		.byte	0
 1997 0128 00       		.byte	0
 1998 0129 15       		.uleb128 0x15
 1999 012a 2E       		.uleb128 0x2e
 2000 012b 01       		.byte	0x1
 2001 012c 3F       		.uleb128 0x3f
 2002 012d 19       		.uleb128 0x19
 2003 012e 03       		.uleb128 0x3
 2004 012f 0E       		.uleb128 0xe
 2005 0130 3A       		.uleb128 0x3a
 2006 0131 0B       		.uleb128 0xb
 2007 0132 3B       		.uleb128 0x3b
 2008 0133 05       		.uleb128 0x5
 2009 0134 27       		.uleb128 0x27
 2010 0135 19       		.uleb128 0x19
 2011 0136 49       		.uleb128 0x49
 2012 0137 13       		.uleb128 0x13
 2013 0138 11       		.uleb128 0x11
 2014 0139 01       		.uleb128 0x1
 2015 013a 12       		.uleb128 0x12
 2016 013b 06       		.uleb128 0x6
 2017 013c 40       		.uleb128 0x40
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 52


 2018 013d 18       		.uleb128 0x18
 2019 013e 9642     		.uleb128 0x2116
 2020 0140 19       		.uleb128 0x19
 2021 0141 01       		.uleb128 0x1
 2022 0142 13       		.uleb128 0x13
 2023 0143 00       		.byte	0
 2024 0144 00       		.byte	0
 2025 0145 16       		.uleb128 0x16
 2026 0146 34       		.uleb128 0x34
 2027 0147 00       		.byte	0
 2028 0148 03       		.uleb128 0x3
 2029 0149 0E       		.uleb128 0xe
 2030 014a 3A       		.uleb128 0x3a
 2031 014b 0B       		.uleb128 0xb
 2032 014c 3B       		.uleb128 0x3b
 2033 014d 05       		.uleb128 0x5
 2034 014e 49       		.uleb128 0x49
 2035 014f 13       		.uleb128 0x13
 2036 0150 02       		.uleb128 0x2
 2037 0151 18       		.uleb128 0x18
 2038 0152 00       		.byte	0
 2039 0153 00       		.byte	0
 2040 0154 17       		.uleb128 0x17
 2041 0155 34       		.uleb128 0x34
 2042 0156 00       		.byte	0
 2043 0157 03       		.uleb128 0x3
 2044 0158 0E       		.uleb128 0xe
 2045 0159 3A       		.uleb128 0x3a
 2046 015a 0B       		.uleb128 0xb
 2047 015b 3B       		.uleb128 0x3b
 2048 015c 05       		.uleb128 0x5
 2049 015d 49       		.uleb128 0x49
 2050 015e 13       		.uleb128 0x13
 2051 015f 00       		.byte	0
 2052 0160 00       		.byte	0
 2053 0161 18       		.uleb128 0x18
 2054 0162 34       		.uleb128 0x34
 2055 0163 00       		.byte	0
 2056 0164 03       		.uleb128 0x3
 2057 0165 0E       		.uleb128 0xe
 2058 0166 3A       		.uleb128 0x3a
 2059 0167 0B       		.uleb128 0xb
 2060 0168 3B       		.uleb128 0x3b
 2061 0169 0B       		.uleb128 0xb
 2062 016a 49       		.uleb128 0x49
 2063 016b 13       		.uleb128 0x13
 2064 016c 3F       		.uleb128 0x3f
 2065 016d 19       		.uleb128 0x19
 2066 016e 02       		.uleb128 0x2
 2067 016f 18       		.uleb128 0x18
 2068 0170 00       		.byte	0
 2069 0171 00       		.byte	0
 2070 0172 19       		.uleb128 0x19
 2071 0173 2E       		.uleb128 0x2e
 2072 0174 00       		.byte	0
 2073 0175 3F       		.uleb128 0x3f
 2074 0176 19       		.uleb128 0x19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 53


 2075 0177 3C       		.uleb128 0x3c
 2076 0178 19       		.uleb128 0x19
 2077 0179 6E       		.uleb128 0x6e
 2078 017a 0E       		.uleb128 0xe
 2079 017b 03       		.uleb128 0x3
 2080 017c 0E       		.uleb128 0xe
 2081 017d 3A       		.uleb128 0x3a
 2082 017e 0B       		.uleb128 0xb
 2083 017f 3B       		.uleb128 0x3b
 2084 0180 0B       		.uleb128 0xb
 2085 0181 00       		.byte	0
 2086 0182 00       		.byte	0
 2087 0183 00       		.byte	0
 2088              		.section	.debug_loc,"",%progbits
 2089              	.Ldebug_loc0:
 2090              	.LLST0:
 2091 0000 64000000 		.4byte	.LVL5
 2092 0004 68000000 		.4byte	.LVL6
 2093 0008 0200     		.2byte	0x2
 2094 000a 30       		.byte	0x30
 2095 000b 9F       		.byte	0x9f
 2096 000c 68000000 		.4byte	.LVL6
 2097 0010 64010000 		.4byte	.LFE2
 2098 0014 0100     		.2byte	0x1
 2099 0016 52       		.byte	0x52
 2100 0017 00000000 		.4byte	0
 2101 001b 00000000 		.4byte	0
 2102              	.LLST1:
 2103 001f 5C000000 		.4byte	.LVL2
 2104 0023 60000000 		.4byte	.LVL3
 2105 0027 0100     		.2byte	0x1
 2106 0029 50       		.byte	0x50
 2107 002a 60000000 		.4byte	.LVL3
 2108 002e 62000000 		.4byte	.LVL4
 2109 0032 0100     		.2byte	0x1
 2110 0034 52       		.byte	0x52
 2111 0035 62000000 		.4byte	.LVL4
 2112 0039 68000000 		.4byte	.LVL6
 2113 003d 0100     		.2byte	0x1
 2114 003f 53       		.byte	0x53
 2115 0040 74000000 		.4byte	.LVL7
 2116 0044 86000000 		.4byte	.LVL9
 2117 0048 0100     		.2byte	0x1
 2118 004a 53       		.byte	0x53
 2119 004b 86000000 		.4byte	.LVL9
 2120 004f 8A000000 		.4byte	.LVL10
 2121 0053 0200     		.2byte	0x2
 2122 0055 71       		.byte	0x71
 2123 0056 00       		.sleb128 0
 2124 0057 8A000000 		.4byte	.LVL10
 2125 005b 96000000 		.4byte	.LVL11
 2126 005f 0700     		.2byte	0x7
 2127 0061 72       		.byte	0x72
 2128 0062 00       		.sleb128 0
 2129 0063 32       		.byte	0x32
 2130 0064 24       		.byte	0x24
 2131 0065 7C       		.byte	0x7c
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 54


 2132 0066 00       		.sleb128 0
 2133 0067 22       		.byte	0x22
 2134 0068 96000000 		.4byte	.LVL11
 2135 006c 9A000000 		.4byte	.LVL12
 2136 0070 1500     		.2byte	0x15
 2137 0072 74       		.byte	0x74
 2138 0073 00       		.sleb128 0
 2139 0074 0A       		.byte	0xa
 2140 0075 0037     		.2byte	0x3700
 2141 0077 1A       		.byte	0x1a
 2142 0078 72       		.byte	0x72
 2143 0079 00       		.sleb128 0
 2144 007a 03       		.byte	0x3
 2145 007b 0C000000 		.4byte	.LANCHOR0+12
 2146 007f 22       		.byte	0x22
 2147 0080 94       		.byte	0x94
 2148 0081 01       		.byte	0x1
 2149 0082 08       		.byte	0x8
 2150 0083 FF       		.byte	0xff
 2151 0084 1A       		.byte	0x1a
 2152 0085 21       		.byte	0x21
 2153 0086 9F       		.byte	0x9f
 2154 0087 9A000000 		.4byte	.LVL12
 2155 008b A4000000 		.4byte	.LVL13
 2156 008f 1400     		.2byte	0x14
 2157 0091 74       		.byte	0x74
 2158 0092 00       		.sleb128 0
 2159 0093 0A       		.byte	0xa
 2160 0094 0037     		.2byte	0x3700
 2161 0096 1A       		.byte	0x1a
 2162 0097 71       		.byte	0x71
 2163 0098 00       		.sleb128 0
 2164 0099 72       		.byte	0x72
 2165 009a 00       		.sleb128 0
 2166 009b 22       		.byte	0x22
 2167 009c 23       		.byte	0x23
 2168 009d 0C       		.uleb128 0xc
 2169 009e 94       		.byte	0x94
 2170 009f 01       		.byte	0x1
 2171 00a0 08       		.byte	0x8
 2172 00a1 FF       		.byte	0xff
 2173 00a2 1A       		.byte	0x1a
 2174 00a3 21       		.byte	0x21
 2175 00a4 9F       		.byte	0x9f
 2176 00a5 A4000000 		.4byte	.LVL13
 2177 00a9 B4000000 		.4byte	.LVL14
 2178 00ad 1500     		.2byte	0x15
 2179 00af 74       		.byte	0x74
 2180 00b0 00       		.sleb128 0
 2181 00b1 0A       		.byte	0xa
 2182 00b2 0037     		.2byte	0x3700
 2183 00b4 1A       		.byte	0x1a
 2184 00b5 72       		.byte	0x72
 2185 00b6 00       		.sleb128 0
 2186 00b7 03       		.byte	0x3
 2187 00b8 0C000000 		.4byte	.LANCHOR0+12
 2188 00bc 22       		.byte	0x22
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 55


 2189 00bd 94       		.byte	0x94
 2190 00be 01       		.byte	0x1
 2191 00bf 08       		.byte	0x8
 2192 00c0 FF       		.byte	0xff
 2193 00c1 1A       		.byte	0x1a
 2194 00c2 21       		.byte	0x21
 2195 00c3 9F       		.byte	0x9f
 2196 00c4 B4000000 		.4byte	.LVL14
 2197 00c8 B6000000 		.4byte	.LVL15
 2198 00cc 1400     		.2byte	0x14
 2199 00ce 74       		.byte	0x74
 2200 00cf 00       		.sleb128 0
 2201 00d0 0A       		.byte	0xa
 2202 00d1 0037     		.2byte	0x3700
 2203 00d3 1A       		.byte	0x1a
 2204 00d4 71       		.byte	0x71
 2205 00d5 00       		.sleb128 0
 2206 00d6 72       		.byte	0x72
 2207 00d7 00       		.sleb128 0
 2208 00d8 22       		.byte	0x22
 2209 00d9 23       		.byte	0x23
 2210 00da 0C       		.uleb128 0xc
 2211 00db 94       		.byte	0x94
 2212 00dc 01       		.byte	0x1
 2213 00dd 08       		.byte	0x8
 2214 00de FF       		.byte	0xff
 2215 00df 1A       		.byte	0x1a
 2216 00e0 21       		.byte	0x21
 2217 00e1 9F       		.byte	0x9f
 2218 00e2 B6000000 		.4byte	.LVL15
 2219 00e6 D2000000 		.4byte	.LVL17
 2220 00ea 1500     		.2byte	0x15
 2221 00ec 74       		.byte	0x74
 2222 00ed 00       		.sleb128 0
 2223 00ee 0A       		.byte	0xa
 2224 00ef 0037     		.2byte	0x3700
 2225 00f1 1A       		.byte	0x1a
 2226 00f2 72       		.byte	0x72
 2227 00f3 00       		.sleb128 0
 2228 00f4 03       		.byte	0x3
 2229 00f5 0C000000 		.4byte	.LANCHOR0+12
 2230 00f9 22       		.byte	0x22
 2231 00fa 94       		.byte	0x94
 2232 00fb 01       		.byte	0x1
 2233 00fc 08       		.byte	0x8
 2234 00fd FF       		.byte	0xff
 2235 00fe 1A       		.byte	0x1a
 2236 00ff 21       		.byte	0x21
 2237 0100 9F       		.byte	0x9f
 2238 0101 D2000000 		.4byte	.LVL17
 2239 0105 D6000000 		.4byte	.LVL18
 2240 0109 1E00     		.2byte	0x1e
 2241 010b 72       		.byte	0x72
 2242 010c 00       		.sleb128 0
 2243 010d 32       		.byte	0x32
 2244 010e 24       		.byte	0x24
 2245 010f 03       		.byte	0x3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 56


 2246 0110 00000000 		.4byte	.LANCHOR0
 2247 0114 22       		.byte	0x22
 2248 0115 06       		.byte	0x6
 2249 0116 0A       		.byte	0xa
 2250 0117 0037     		.2byte	0x3700
 2251 0119 1A       		.byte	0x1a
 2252 011a 72       		.byte	0x72
 2253 011b 00       		.sleb128 0
 2254 011c 03       		.byte	0x3
 2255 011d 0C000000 		.4byte	.LANCHOR0+12
 2256 0121 22       		.byte	0x22
 2257 0122 94       		.byte	0x94
 2258 0123 01       		.byte	0x1
 2259 0124 08       		.byte	0x8
 2260 0125 FF       		.byte	0xff
 2261 0126 1A       		.byte	0x1a
 2262 0127 21       		.byte	0x21
 2263 0128 9F       		.byte	0x9f
 2264 0129 D6000000 		.4byte	.LVL18
 2265 012d DA000000 		.4byte	.LVL19
 2266 0131 1500     		.2byte	0x15
 2267 0133 74       		.byte	0x74
 2268 0134 00       		.sleb128 0
 2269 0135 0A       		.byte	0xa
 2270 0136 0037     		.2byte	0x3700
 2271 0138 1A       		.byte	0x1a
 2272 0139 72       		.byte	0x72
 2273 013a 00       		.sleb128 0
 2274 013b 03       		.byte	0x3
 2275 013c 0C000000 		.4byte	.LANCHOR0+12
 2276 0140 22       		.byte	0x22
 2277 0141 94       		.byte	0x94
 2278 0142 01       		.byte	0x1
 2279 0143 08       		.byte	0x8
 2280 0144 FF       		.byte	0xff
 2281 0145 1A       		.byte	0x1a
 2282 0146 21       		.byte	0x21
 2283 0147 9F       		.byte	0x9f
 2284 0148 DA000000 		.4byte	.LVL19
 2285 014c FE000000 		.4byte	.LVL21
 2286 0150 1E00     		.2byte	0x1e
 2287 0152 72       		.byte	0x72
 2288 0153 00       		.sleb128 0
 2289 0154 32       		.byte	0x32
 2290 0155 24       		.byte	0x24
 2291 0156 03       		.byte	0x3
 2292 0157 00000000 		.4byte	.LANCHOR0
 2293 015b 22       		.byte	0x22
 2294 015c 06       		.byte	0x6
 2295 015d 0A       		.byte	0xa
 2296 015e 0037     		.2byte	0x3700
 2297 0160 1A       		.byte	0x1a
 2298 0161 72       		.byte	0x72
 2299 0162 00       		.sleb128 0
 2300 0163 03       		.byte	0x3
 2301 0164 0C000000 		.4byte	.LANCHOR0+12
 2302 0168 22       		.byte	0x22
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 57


 2303 0169 94       		.byte	0x94
 2304 016a 01       		.byte	0x1
 2305 016b 08       		.byte	0x8
 2306 016c FF       		.byte	0xff
 2307 016d 1A       		.byte	0x1a
 2308 016e 21       		.byte	0x21
 2309 016f 9F       		.byte	0x9f
 2310 0170 00000000 		.4byte	0
 2311 0174 00000000 		.4byte	0
 2312              	.LLST2:
 2313 0178 C4000000 		.4byte	.LVL16
 2314 017c F8000000 		.4byte	.LVL20
 2315 0180 0100     		.2byte	0x1
 2316 0182 50       		.byte	0x50
 2317 0183 00000000 		.4byte	0
 2318 0187 00000000 		.4byte	0
 2319              	.LLST3:
 2320 018b 00000000 		.4byte	.LVL25
 2321 018f 06000000 		.4byte	.LVL27
 2322 0193 0100     		.2byte	0x1
 2323 0195 50       		.byte	0x50
 2324 0196 06000000 		.4byte	.LVL27
 2325 019a 1A000000 		.4byte	.LVL29
 2326 019e 0100     		.2byte	0x1
 2327 01a0 52       		.byte	0x52
 2328 01a1 1A000000 		.4byte	.LVL29
 2329 01a5 20000000 		.4byte	.LVL30
 2330 01a9 0400     		.2byte	0x4
 2331 01ab F3       		.byte	0xf3
 2332 01ac 01       		.uleb128 0x1
 2333 01ad 50       		.byte	0x50
 2334 01ae 9F       		.byte	0x9f
 2335 01af 20000000 		.4byte	.LVL30
 2336 01b3 22000000 		.4byte	.LVL31
 2337 01b7 0100     		.2byte	0x1
 2338 01b9 50       		.byte	0x50
 2339 01ba 22000000 		.4byte	.LVL31
 2340 01be 28000000 		.4byte	.LFE7
 2341 01c2 0400     		.2byte	0x4
 2342 01c4 F3       		.byte	0xf3
 2343 01c5 01       		.uleb128 0x1
 2344 01c6 50       		.byte	0x50
 2345 01c7 9F       		.byte	0x9f
 2346 01c8 00000000 		.4byte	0
 2347 01cc 00000000 		.4byte	0
 2348              	.LLST4:
 2349 01d0 02000000 		.4byte	.LVL26
 2350 01d4 06000000 		.4byte	.LVL27
 2351 01d8 0200     		.2byte	0x2
 2352 01da 30       		.byte	0x30
 2353 01db 9F       		.byte	0x9f
 2354 01dc 0E000000 		.4byte	.LVL28
 2355 01e0 20000000 		.4byte	.LVL30
 2356 01e4 0100     		.2byte	0x1
 2357 01e6 50       		.byte	0x50
 2358 01e7 20000000 		.4byte	.LVL30
 2359 01eb 22000000 		.4byte	.LVL31
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 58


 2360 01ef 0200     		.2byte	0x2
 2361 01f1 30       		.byte	0x30
 2362 01f2 9F       		.byte	0x9f
 2363 01f3 22000000 		.4byte	.LVL31
 2364 01f7 28000000 		.4byte	.LFE7
 2365 01fb 0100     		.2byte	0x1
 2366 01fd 50       		.byte	0x50
 2367 01fe 00000000 		.4byte	0
 2368 0202 00000000 		.4byte	0
 2369              	.LLST5:
 2370 0206 00000000 		.4byte	.LVL32
 2371 020a 0A000000 		.4byte	.LVL33
 2372 020e 0100     		.2byte	0x1
 2373 0210 50       		.byte	0x50
 2374 0211 0A000000 		.4byte	.LVL33
 2375 0215 14000000 		.4byte	.LVL35
 2376 0219 0100     		.2byte	0x1
 2377 021b 54       		.byte	0x54
 2378 021c 14000000 		.4byte	.LVL35
 2379 0220 22000000 		.4byte	.LVL37
 2380 0224 0400     		.2byte	0x4
 2381 0226 F3       		.byte	0xf3
 2382 0227 01       		.uleb128 0x1
 2383 0228 50       		.byte	0x50
 2384 0229 9F       		.byte	0x9f
 2385 022a 22000000 		.4byte	.LVL37
 2386 022e 24000000 		.4byte	.LVL38
 2387 0232 0100     		.2byte	0x1
 2388 0234 54       		.byte	0x54
 2389 0235 24000000 		.4byte	.LVL38
 2390 0239 2C000000 		.4byte	.LFE8
 2391 023d 0400     		.2byte	0x4
 2392 023f F3       		.byte	0xf3
 2393 0240 01       		.uleb128 0x1
 2394 0241 50       		.byte	0x50
 2395 0242 9F       		.byte	0x9f
 2396 0243 00000000 		.4byte	0
 2397 0247 00000000 		.4byte	0
 2398              	.LLST6:
 2399 024b 20000000 		.4byte	.LVL36
 2400 024f 22000000 		.4byte	.LVL37
 2401 0253 0100     		.2byte	0x1
 2402 0255 50       		.byte	0x50
 2403 0256 24000000 		.4byte	.LVL38
 2404 025a 26000000 		.4byte	.LVL39
 2405 025e 0100     		.2byte	0x1
 2406 0260 50       		.byte	0x50
 2407 0261 00000000 		.4byte	0
 2408 0265 00000000 		.4byte	0
 2409              	.LLST7:
 2410 0269 00000000 		.4byte	.LVL40
 2411 026d 04000000 		.4byte	.LVL41
 2412 0271 0100     		.2byte	0x1
 2413 0273 50       		.byte	0x50
 2414 0274 04000000 		.4byte	.LVL41
 2415 0278 10000000 		.4byte	.LFE9
 2416 027c 0400     		.2byte	0x4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 59


 2417 027e F3       		.byte	0xf3
 2418 027f 01       		.uleb128 0x1
 2419 0280 50       		.byte	0x50
 2420 0281 9F       		.byte	0x9f
 2421 0282 00000000 		.4byte	0
 2422 0286 00000000 		.4byte	0
 2423              	.LLST8:
 2424 028a 00000000 		.4byte	.LVL42
 2425 028e 0E000000 		.4byte	.LVL43
 2426 0292 0100     		.2byte	0x1
 2427 0294 50       		.byte	0x50
 2428 0295 0E000000 		.4byte	.LVL43
 2429 0299 1C000000 		.4byte	.LFE10
 2430 029d 0400     		.2byte	0x4
 2431 029f F3       		.byte	0xf3
 2432 02a0 01       		.uleb128 0x1
 2433 02a1 50       		.byte	0x50
 2434 02a2 9F       		.byte	0x9f
 2435 02a3 00000000 		.4byte	0
 2436 02a7 00000000 		.4byte	0
 2437              	.LLST9:
 2438 02ab 00000000 		.4byte	.LVL44
 2439 02af 0E000000 		.4byte	.LVL45
 2440 02b3 0100     		.2byte	0x1
 2441 02b5 50       		.byte	0x50
 2442 02b6 0E000000 		.4byte	.LVL45
 2443 02ba 18000000 		.4byte	.LFE11
 2444 02be 0400     		.2byte	0x4
 2445 02c0 F3       		.byte	0xf3
 2446 02c1 01       		.uleb128 0x1
 2447 02c2 50       		.byte	0x50
 2448 02c3 9F       		.byte	0x9f
 2449 02c4 00000000 		.4byte	0
 2450 02c8 00000000 		.4byte	0
 2451              	.LLST10:
 2452 02cc 00000000 		.4byte	.LVL46
 2453 02d0 04000000 		.4byte	.LVL47
 2454 02d4 0100     		.2byte	0x1
 2455 02d6 50       		.byte	0x50
 2456 02d7 04000000 		.4byte	.LVL47
 2457 02db 10000000 		.4byte	.LFE12
 2458 02df 0400     		.2byte	0x4
 2459 02e1 F3       		.byte	0xf3
 2460 02e2 01       		.uleb128 0x1
 2461 02e3 50       		.byte	0x50
 2462 02e4 9F       		.byte	0x9f
 2463 02e5 00000000 		.4byte	0
 2464 02e9 00000000 		.4byte	0
 2465              	.LLST11:
 2466 02ed 00000000 		.4byte	.LVL48
 2467 02f1 04000000 		.4byte	.LVL49
 2468 02f5 0100     		.2byte	0x1
 2469 02f7 50       		.byte	0x50
 2470 02f8 04000000 		.4byte	.LVL49
 2471 02fc 10000000 		.4byte	.LFE13
 2472 0300 0400     		.2byte	0x4
 2473 0302 F3       		.byte	0xf3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 60


 2474 0303 01       		.uleb128 0x1
 2475 0304 50       		.byte	0x50
 2476 0305 9F       		.byte	0x9f
 2477 0306 00000000 		.4byte	0
 2478 030a 00000000 		.4byte	0
 2479              	.LLST12:
 2480 030e 00000000 		.4byte	.LVL50
 2481 0312 0C000000 		.4byte	.LVL51
 2482 0316 0100     		.2byte	0x1
 2483 0318 50       		.byte	0x50
 2484 0319 0C000000 		.4byte	.LVL51
 2485 031d 12000000 		.4byte	.LVL53
 2486 0321 0100     		.2byte	0x1
 2487 0323 54       		.byte	0x54
 2488 0324 12000000 		.4byte	.LVL53
 2489 0328 1C000000 		.4byte	.LFE14
 2490 032c 0400     		.2byte	0x4
 2491 032e F3       		.byte	0xf3
 2492 032f 01       		.uleb128 0x1
 2493 0330 50       		.byte	0x50
 2494 0331 9F       		.byte	0x9f
 2495 0332 00000000 		.4byte	0
 2496 0336 00000000 		.4byte	0
 2497              	.LLST13:
 2498 033a 00000000 		.4byte	.LVL50
 2499 033e 0F000000 		.4byte	.LVL52-1
 2500 0342 0100     		.2byte	0x1
 2501 0344 51       		.byte	0x51
 2502 0345 0F000000 		.4byte	.LVL52-1
 2503 0349 1C000000 		.4byte	.LFE14
 2504 034d 0400     		.2byte	0x4
 2505 034f F3       		.byte	0xf3
 2506 0350 01       		.uleb128 0x1
 2507 0351 51       		.byte	0x51
 2508 0352 9F       		.byte	0x9f
 2509 0353 00000000 		.4byte	0
 2510 0357 00000000 		.4byte	0
 2511              	.LLST14:
 2512 035b 00000000 		.4byte	.LVL54
 2513 035f 0C000000 		.4byte	.LVL55
 2514 0363 0100     		.2byte	0x1
 2515 0365 50       		.byte	0x50
 2516 0366 0C000000 		.4byte	.LVL55
 2517 036a 12000000 		.4byte	.LVL57
 2518 036e 0100     		.2byte	0x1
 2519 0370 54       		.byte	0x54
 2520 0371 12000000 		.4byte	.LVL57
 2521 0375 1C000000 		.4byte	.LFE15
 2522 0379 0400     		.2byte	0x4
 2523 037b F3       		.byte	0xf3
 2524 037c 01       		.uleb128 0x1
 2525 037d 50       		.byte	0x50
 2526 037e 9F       		.byte	0x9f
 2527 037f 00000000 		.4byte	0
 2528 0383 00000000 		.4byte	0
 2529              	.LLST15:
 2530 0387 00000000 		.4byte	.LVL54
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 61


 2531 038b 0F000000 		.4byte	.LVL56-1
 2532 038f 0100     		.2byte	0x1
 2533 0391 51       		.byte	0x51
 2534 0392 0F000000 		.4byte	.LVL56-1
 2535 0396 16000000 		.4byte	.LVL58
 2536 039a 0100     		.2byte	0x1
 2537 039c 55       		.byte	0x55
 2538 039d 16000000 		.4byte	.LVL58
 2539 03a1 1C000000 		.4byte	.LFE15
 2540 03a5 0800     		.2byte	0x8
 2541 03a7 F3       		.byte	0xf3
 2542 03a8 01       		.uleb128 0x1
 2543 03a9 50       		.byte	0x50
 2544 03aa 32       		.byte	0x32
 2545 03ab 24       		.byte	0x24
 2546 03ac 73       		.byte	0x73
 2547 03ad 00       		.sleb128 0
 2548 03ae 22       		.byte	0x22
 2549 03af 00000000 		.4byte	0
 2550 03b3 00000000 		.4byte	0
 2551              	.LLST16:
 2552 03b7 00000000 		.4byte	.LVL59
 2553 03bb 0C000000 		.4byte	.LVL60
 2554 03bf 0100     		.2byte	0x1
 2555 03c1 50       		.byte	0x50
 2556 03c2 0C000000 		.4byte	.LVL60
 2557 03c6 44000000 		.4byte	.LVL63
 2558 03ca 0100     		.2byte	0x1
 2559 03cc 54       		.byte	0x54
 2560 03cd 44000000 		.4byte	.LVL63
 2561 03d1 5C000000 		.4byte	.LFE16
 2562 03d5 0400     		.2byte	0x4
 2563 03d7 F3       		.byte	0xf3
 2564 03d8 01       		.uleb128 0x1
 2565 03d9 50       		.byte	0x50
 2566 03da 9F       		.byte	0x9f
 2567 03db 00000000 		.4byte	0
 2568 03df 00000000 		.4byte	0
 2569              	.LLST17:
 2570 03e3 00000000 		.4byte	.LVL59
 2571 03e7 0F000000 		.4byte	.LVL61-1
 2572 03eb 0100     		.2byte	0x1
 2573 03ed 51       		.byte	0x51
 2574 03ee 0F000000 		.4byte	.LVL61-1
 2575 03f2 1C000000 		.4byte	.LVL62
 2576 03f6 0400     		.2byte	0x4
 2577 03f8 F3       		.byte	0xf3
 2578 03f9 01       		.uleb128 0x1
 2579 03fa 51       		.byte	0x51
 2580 03fb 9F       		.byte	0x9f
 2581 03fc 1C000000 		.4byte	.LVL62
 2582 0400 48000000 		.4byte	.LVL64
 2583 0404 0100     		.2byte	0x1
 2584 0406 51       		.byte	0x51
 2585 0407 00000000 		.4byte	0
 2586 040b 00000000 		.4byte	0
 2587              	.LLST18:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 62


 2588 040f 00000000 		.4byte	.LVL67
 2589 0413 0C000000 		.4byte	.LVL68
 2590 0417 0100     		.2byte	0x1
 2591 0419 50       		.byte	0x50
 2592 041a 0C000000 		.4byte	.LVL68
 2593 041e 28000000 		.4byte	.LVL72
 2594 0422 0100     		.2byte	0x1
 2595 0424 55       		.byte	0x55
 2596 0425 28000000 		.4byte	.LVL72
 2597 0429 40000000 		.4byte	.LFE17
 2598 042d 0400     		.2byte	0x4
 2599 042f F3       		.byte	0xf3
 2600 0430 01       		.uleb128 0x1
 2601 0431 50       		.byte	0x50
 2602 0432 9F       		.byte	0x9f
 2603 0433 00000000 		.4byte	0
 2604 0437 00000000 		.4byte	0
 2605              	.LLST19:
 2606 043b 00000000 		.4byte	.LVL67
 2607 043f 0F000000 		.4byte	.LVL69-1
 2608 0443 0100     		.2byte	0x1
 2609 0445 51       		.byte	0x51
 2610 0446 0F000000 		.4byte	.LVL69-1
 2611 044a 1C000000 		.4byte	.LVL70
 2612 044e 0400     		.2byte	0x4
 2613 0450 F3       		.byte	0xf3
 2614 0451 01       		.uleb128 0x1
 2615 0452 51       		.byte	0x51
 2616 0453 9F       		.byte	0x9f
 2617 0454 1C000000 		.4byte	.LVL70
 2618 0458 25000000 		.4byte	.LVL71-1
 2619 045c 0100     		.2byte	0x1
 2620 045e 50       		.byte	0x50
 2621 045f 00000000 		.4byte	0
 2622 0463 00000000 		.4byte	0
 2623              	.LLST20:
 2624 0467 00000000 		.4byte	.LVL74
 2625 046b 0C000000 		.4byte	.LVL75
 2626 046f 0100     		.2byte	0x1
 2627 0471 50       		.byte	0x50
 2628 0472 0C000000 		.4byte	.LVL75
 2629 0476 2A000000 		.4byte	.LVL80
 2630 047a 0100     		.2byte	0x1
 2631 047c 54       		.byte	0x54
 2632 047d 2A000000 		.4byte	.LVL80
 2633 0481 48000000 		.4byte	.LFE18
 2634 0485 0400     		.2byte	0x4
 2635 0487 F3       		.byte	0xf3
 2636 0488 01       		.uleb128 0x1
 2637 0489 50       		.byte	0x50
 2638 048a 9F       		.byte	0x9f
 2639 048b 00000000 		.4byte	0
 2640 048f 00000000 		.4byte	0
 2641              	.LLST21:
 2642 0493 00000000 		.4byte	.LVL74
 2643 0497 0F000000 		.4byte	.LVL76-1
 2644 049b 0100     		.2byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 63


 2645 049d 51       		.byte	0x51
 2646 049e 0F000000 		.4byte	.LVL76-1
 2647 04a2 1C000000 		.4byte	.LVL77
 2648 04a6 0400     		.2byte	0x4
 2649 04a8 F3       		.byte	0xf3
 2650 04a9 01       		.uleb128 0x1
 2651 04aa 51       		.byte	0x51
 2652 04ab 9F       		.byte	0x9f
 2653 04ac 1C000000 		.4byte	.LVL77
 2654 04b0 1F000000 		.4byte	.LVL78-1
 2655 04b4 0100     		.2byte	0x1
 2656 04b6 50       		.byte	0x50
 2657 04b7 00000000 		.4byte	0
 2658 04bb 00000000 		.4byte	0
 2659              		.section	.debug_aranges,"",%progbits
 2660 0000 A4000000 		.4byte	0xa4
 2661 0004 0200     		.2byte	0x2
 2662 0006 00000000 		.4byte	.Ldebug_info0
 2663 000a 04       		.byte	0x4
 2664 000b 00       		.byte	0
 2665 000c 0000     		.2byte	0
 2666 000e 0000     		.2byte	0
 2667 0010 00000000 		.4byte	.LFB2
 2668 0014 64010000 		.4byte	.LFE2-.LFB2
 2669 0018 00000000 		.4byte	.LFB3
 2670 001c 30000000 		.4byte	.LFE3-.LFB3
 2671 0020 00000000 		.4byte	.LFB1
 2672 0024 20000000 		.4byte	.LFE1-.LFB1
 2673 0028 00000000 		.4byte	.LFB4
 2674 002c 10000000 		.4byte	.LFE4-.LFB4
 2675 0030 00000000 		.4byte	.LFB5
 2676 0034 14000000 		.4byte	.LFE5-.LFB5
 2677 0038 00000000 		.4byte	.LFB6
 2678 003c 14000000 		.4byte	.LFE6-.LFB6
 2679 0040 00000000 		.4byte	.LFB7
 2680 0044 28000000 		.4byte	.LFE7-.LFB7
 2681 0048 00000000 		.4byte	.LFB8
 2682 004c 2C000000 		.4byte	.LFE8-.LFB8
 2683 0050 00000000 		.4byte	.LFB9
 2684 0054 10000000 		.4byte	.LFE9-.LFB9
 2685 0058 00000000 		.4byte	.LFB10
 2686 005c 1C000000 		.4byte	.LFE10-.LFB10
 2687 0060 00000000 		.4byte	.LFB11
 2688 0064 18000000 		.4byte	.LFE11-.LFB11
 2689 0068 00000000 		.4byte	.LFB12
 2690 006c 10000000 		.4byte	.LFE12-.LFB12
 2691 0070 00000000 		.4byte	.LFB13
 2692 0074 10000000 		.4byte	.LFE13-.LFB13
 2693 0078 00000000 		.4byte	.LFB14
 2694 007c 1C000000 		.4byte	.LFE14-.LFB14
 2695 0080 00000000 		.4byte	.LFB15
 2696 0084 1C000000 		.4byte	.LFE15-.LFB15
 2697 0088 00000000 		.4byte	.LFB16
 2698 008c 5C000000 		.4byte	.LFE16-.LFB16
 2699 0090 00000000 		.4byte	.LFB17
 2700 0094 40000000 		.4byte	.LFE17-.LFB17
 2701 0098 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 64


 2702 009c 48000000 		.4byte	.LFE18-.LFB18
 2703 00a0 00000000 		.4byte	0
 2704 00a4 00000000 		.4byte	0
 2705              		.section	.debug_ranges,"",%progbits
 2706              	.Ldebug_ranges0:
 2707 0000 00000000 		.4byte	.LFB2
 2708 0004 64010000 		.4byte	.LFE2
 2709 0008 00000000 		.4byte	.LFB3
 2710 000c 30000000 		.4byte	.LFE3
 2711 0010 00000000 		.4byte	.LFB1
 2712 0014 20000000 		.4byte	.LFE1
 2713 0018 00000000 		.4byte	.LFB4
 2714 001c 10000000 		.4byte	.LFE4
 2715 0020 00000000 		.4byte	.LFB5
 2716 0024 14000000 		.4byte	.LFE5
 2717 0028 00000000 		.4byte	.LFB6
 2718 002c 14000000 		.4byte	.LFE6
 2719 0030 00000000 		.4byte	.LFB7
 2720 0034 28000000 		.4byte	.LFE7
 2721 0038 00000000 		.4byte	.LFB8
 2722 003c 2C000000 		.4byte	.LFE8
 2723 0040 00000000 		.4byte	.LFB9
 2724 0044 10000000 		.4byte	.LFE9
 2725 0048 00000000 		.4byte	.LFB10
 2726 004c 1C000000 		.4byte	.LFE10
 2727 0050 00000000 		.4byte	.LFB11
 2728 0054 18000000 		.4byte	.LFE11
 2729 0058 00000000 		.4byte	.LFB12
 2730 005c 10000000 		.4byte	.LFE12
 2731 0060 00000000 		.4byte	.LFB13
 2732 0064 10000000 		.4byte	.LFE13
 2733 0068 00000000 		.4byte	.LFB14
 2734 006c 1C000000 		.4byte	.LFE14
 2735 0070 00000000 		.4byte	.LFB15
 2736 0074 1C000000 		.4byte	.LFE15
 2737 0078 00000000 		.4byte	.LFB16
 2738 007c 5C000000 		.4byte	.LFE16
 2739 0080 00000000 		.4byte	.LFB17
 2740 0084 40000000 		.4byte	.LFE17
 2741 0088 00000000 		.4byte	.LFB18
 2742 008c 48000000 		.4byte	.LFE18
 2743 0090 00000000 		.4byte	0
 2744 0094 00000000 		.4byte	0
 2745              		.section	.debug_line,"",%progbits
 2746              	.Ldebug_line0:
 2747 0000 8B020000 		.section	.debug_str,"MS",%progbits,1
 2747      02004B00 
 2747      00000201 
 2747      FB0E0D00 
 2747      01010101 
 2748              	.LASF10:
 2749 0000 75696E74 		.ascii	"uint16\000"
 2749      313600
 2750              	.LASF49:
 2751 0007 61646347 		.ascii	"adcGain\000"
 2751      61696E00 
 2752              	.LASF24:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 65


 2753 000f 636F756E 		.ascii	"counts\000"
 2753      747300
 2754              	.LASF54:
 2755 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2755      436F756E 
 2755      7473546F 
 2755      5F566F6C 
 2755      747300
 2756              	.LASF26:
 2757 0029 4144435F 		.ascii	"ADC_Init\000"
 2757      496E6974 
 2757      00
 2758              	.LASF64:
 2759 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2759      43313120 
 2759      352E342E 
 2759      31203230 
 2759      31363036 
 2760 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2760      20726576 
 2760      6973696F 
 2760      6E203233 
 2760      37373135 
 2761 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2761      66756E63 
 2761      74696F6E 
 2761      2D736563 
 2761      74696F6E 
 2762              	.LASF7:
 2763 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2763      206C6F6E 
 2763      6720756E 
 2763      7369676E 
 2763      65642069 
 2764              	.LASF25:
 2765 00d7 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2765      496E7075 
 2765      7473506C 
 2765      6163656D 
 2765      656E7400 
 2766              	.LASF30:
 2767 00eb 4144435F 		.ascii	"ADC_StartConvert\000"
 2767      53746172 
 2767      74436F6E 
 2767      76657274 
 2767      00
 2768              	.LASF6:
 2769 00fc 6C6F6E67 		.ascii	"long long int\000"
 2769      206C6F6E 
 2769      6720696E 
 2769      7400
 2770              	.LASF0:
 2771 010a 7369676E 		.ascii	"signed char\000"
 2771      65642063 
 2771      68617200 
 2772              	.LASF32:
 2773 0116 73746174 		.ascii	"status\000"
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 66


 2773      757300
 2774              	.LASF13:
 2775 011d 696E7433 		.ascii	"int32\000"
 2775      3200
 2776              	.LASF28:
 2777 0123 4144435F 		.ascii	"ADC_Start\000"
 2777      53746172 
 2777      7400
 2778              	.LASF4:
 2779 012d 6C6F6E67 		.ascii	"long int\000"
 2779      20696E74 
 2779      00
 2780              	.LASF53:
 2781 0136 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2781      436F756E 
 2781      7473546F 
 2781      5F75566F 
 2781      6C747300 
 2782              	.LASF59:
 2783 014a 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2783      636F756E 
 2783      74735065 
 2783      72313056 
 2783      6F6C7400 
 2784              	.LASF9:
 2785 015e 75696E74 		.ascii	"uint8\000"
 2785      3800
 2786              	.LASF62:
 2787 0164 43794465 		.ascii	"CyDelayUs\000"
 2787      6C617955 
 2787      7300
 2788              	.LASF16:
 2789 016e 646F7562 		.ascii	"double\000"
 2789      6C6500
 2790              	.LASF11:
 2791 0175 75696E74 		.ascii	"uint32\000"
 2791      333200
 2792              	.LASF39:
 2793 017c 6D61736B 		.ascii	"mask\000"
 2793      00
 2794              	.LASF57:
 2795 0181 4144435F 		.ascii	"ADC_initVar\000"
 2795      696E6974 
 2795      56617200 
 2796              	.LASF35:
 2797 018d 7265744D 		.ascii	"retMode\000"
 2797      6F646500 
 2798              	.LASF44:
 2799 0195 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2799      5365744C 
 2799      696D6974 
 2799      4D61736B 
 2799      00
 2800              	.LASF8:
 2801 01a6 756E7369 		.ascii	"unsigned int\000"
 2801      676E6564 
 2801      20696E74 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 67


 2801      00
 2802              	.LASF67:
 2803 01b3 75566F6C 		.ascii	"uVolts\000"
 2803      747300
 2804              	.LASF5:
 2805 01ba 6C6F6E67 		.ascii	"long unsigned int\000"
 2805      20756E73 
 2805      69676E65 
 2805      6420696E 
 2805      7400
 2806              	.LASF45:
 2807 01cc 4144435F 		.ascii	"ADC_SetSatMask\000"
 2807      53657453 
 2807      61744D61 
 2807      736B00
 2808              	.LASF55:
 2809 01db 766F6C74 		.ascii	"volts\000"
 2809      7300
 2810              	.LASF23:
 2811 01e1 746D7052 		.ascii	"tmpRegVal\000"
 2811      65675661 
 2811      6C00
 2812              	.LASF3:
 2813 01eb 73686F72 		.ascii	"short unsigned int\000"
 2813      7420756E 
 2813      7369676E 
 2813      65642069 
 2813      6E7400
 2814              	.LASF61:
 2815 01fe 4379496E 		.ascii	"CyIntSetVector\000"
 2815      74536574 
 2815      56656374 
 2815      6F7200
 2816              	.LASF31:
 2817 020d 4144435F 		.ascii	"ADC_StopConvert\000"
 2817      53746F70 
 2817      436F6E76 
 2817      65727400 
 2818              	.LASF52:
 2819 021d 6D566F6C 		.ascii	"mVolts\000"
 2819      747300
 2820              	.LASF19:
 2821 0224 72656733 		.ascii	"reg32\000"
 2821      3200
 2822              	.LASF66:
 2823 022a 433A5C47 		.ascii	"C:\\Git\\WW101\\ww101-shield\\firmware\\TestProgram"
 2823      69745C57 
 2823      57313031 
 2823      5C777731 
 2823      30312D73 
 2824 0258 344D2E63 		.ascii	"4M.cydsn\000"
 2824      7964736E 
 2824      00
 2825              	.LASF14:
 2826 0261 666C6F61 		.ascii	"float32\000"
 2826      74333200 
 2827              	.LASF21:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 68


 2828 0269 73697A65 		.ascii	"sizetype\000"
 2828      74797065 
 2828      00
 2829              	.LASF41:
 2830 0272 6C6F774C 		.ascii	"lowLimit\000"
 2830      696D6974 
 2830      00
 2831              	.LASF20:
 2832 027b 6C6F6E67 		.ascii	"long double\000"
 2832      20646F75 
 2832      626C6500 
 2833              	.LASF42:
 2834 0287 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2834      53657448 
 2834      6967684C 
 2834      696D6974 
 2834      00
 2835              	.LASF33:
 2836 0298 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2836      4973456E 
 2836      64436F6E 
 2836      76657273 
 2836      696F6E00 
 2837              	.LASF17:
 2838 02ac 696E7436 		.ascii	"int64\000"
 2838      3400
 2839              	.LASF60:
 2840 02b2 4379496E 		.ascii	"CyIntSetPriority\000"
 2840      74536574 
 2840      5072696F 
 2840      72697479 
 2840      00
 2841              	.LASF38:
 2842 02c3 4144435F 		.ascii	"ADC_SetChanMask\000"
 2842      53657443 
 2842      68616E4D 
 2842      61736B00 
 2843              	.LASF65:
 2844 02d3 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2844      72617465 
 2844      645F536F 
 2844      75726365 
 2844      5C50536F 
 2845              	.LASF48:
 2846 02f0 4144435F 		.ascii	"ADC_SetGain\000"
 2846      53657447 
 2846      61696E00 
 2847              	.LASF15:
 2848 02fc 666C6F61 		.ascii	"float\000"
 2848      7400
 2849              	.LASF43:
 2850 0302 68696768 		.ascii	"highLimit\000"
 2850      4C696D69 
 2850      7400
 2851              	.LASF50:
 2852 030c 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2852      436F756E 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 69


 2852      7473546F 
 2852      5F6D566F 
 2852      6C747300 
 2853              	.LASF40:
 2854 0320 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2854      5365744C 
 2854      6F774C69 
 2854      6D697400 
 2855              	.LASF63:
 2856 0330 43794861 		.ascii	"CyHalt\000"
 2856      6C7400
 2857              	.LASF1:
 2858 0337 756E7369 		.ascii	"unsigned char\000"
 2858      676E6564 
 2858      20636861 
 2858      7200
 2859              	.LASF58:
 2860 0345 4144435F 		.ascii	"ADC_offset\000"
 2860      6F666673 
 2860      657400
 2861              	.LASF2:
 2862 0350 73686F72 		.ascii	"short int\000"
 2862      7420696E 
 2862      7400
 2863              	.LASF29:
 2864 035a 4144435F 		.ascii	"ADC_Stop\000"
 2864      53746F70 
 2864      00
 2865              	.LASF22:
 2866 0363 63684E75 		.ascii	"chNum\000"
 2866      6D00
 2867              	.LASF36:
 2868 0369 6368616E 		.ascii	"chan\000"
 2868      00
 2869              	.LASF18:
 2870 036e 63686172 		.ascii	"char\000"
 2870      00
 2871              	.LASF56:
 2872 0373 4144435F 		.ascii	"ADC_channelsConfig\000"
 2872      6368616E 
 2872      6E656C73 
 2872      436F6E66 
 2872      696700
 2873              	.LASF47:
 2874 0386 6F666673 		.ascii	"offset\000"
 2874      657400
 2875              	.LASF51:
 2876 038d 61646343 		.ascii	"adcCounts\000"
 2876      6F756E74 
 2876      7300
 2877              	.LASF27:
 2878 0397 4144435F 		.ascii	"ADC_Enable\000"
 2878      456E6162 
 2878      6C6500
 2879              	.LASF12:
 2880 03a2 696E7431 		.ascii	"int16\000"
 2880      3600
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccORf8EB.s 			page 70


 2881              	.LASF46:
 2882 03a8 4144435F 		.ascii	"ADC_SetOffset\000"
 2882      5365744F 
 2882      66667365 
 2882      7400
 2883              	.LASF37:
 2884 03b6 72657375 		.ascii	"result\000"
 2884      6C7400
 2885              	.LASF34:
 2886 03bd 4144435F 		.ascii	"ADC_GetResult16\000"
 2886      47657452 
 2886      6573756C 
 2886      74313600 
 2887              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
